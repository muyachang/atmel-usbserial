   1               		.file	"rram-usbserial.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.RingBuffer_Insert,"ax",@progbits
  12               	RingBuffer_Insert:
  13               	.LFB104:
  14               		.file 1 "Lib/RingBuffer.h"
   1:Lib/RingBuffer.h **** 
   2:Lib/RingBuffer.h **** /* \file
   3:Lib/RingBuffer.h ****  *
   4:Lib/RingBuffer.h ****  * Ring buffer.
   5:Lib/RingBuffer.h ****  */
   6:Lib/RingBuffer.h ****  
   7:Lib/RingBuffer.h **** #ifndef _RING_BUFFER_H_
   8:Lib/RingBuffer.h **** #define _RING_BUFFER_H_
   9:Lib/RingBuffer.h **** 
  10:Lib/RingBuffer.h **** #define BUFFER_SIZE         128
  11:Lib/RingBuffer.h **** #define BUFFER_NEARLY_FULL  96
  12:Lib/RingBuffer.h **** #define RingBuff_Data_t     uint8_t
  13:Lib/RingBuffer.h **** #define RingBuff_Count_t   uint16_t
  14:Lib/RingBuffer.h **** 
  15:Lib/RingBuffer.h **** typedef struct
  16:Lib/RingBuffer.h **** {
  17:Lib/RingBuffer.h ****   RingBuff_Data_t  Buffer[BUFFER_SIZE]; /* Internal ring buffer data, referenced by the buffer poin
  18:Lib/RingBuffer.h ****   RingBuff_Data_t* In;                  /* Current storage location in the circular buffer */
  19:Lib/RingBuffer.h ****   RingBuff_Data_t* Out;                 /* Current retrieval location in the circular buffer */
  20:Lib/RingBuffer.h ****   RingBuff_Count_t Count;               /* Number of elements in the buffer */
  21:Lib/RingBuffer.h **** } RingBuff_t;
  22:Lib/RingBuffer.h **** 
  23:Lib/RingBuffer.h **** /*
  24:Lib/RingBuffer.h ****  * Initializes a ring buffer ready for use. Buffers must be initialized via this function
  25:Lib/RingBuffer.h ****  * before any operations are called upon them. Already initialized buffers may be reset
  26:Lib/RingBuffer.h ****  * by re-initializing them using this function.
  27:Lib/RingBuffer.h ****  *
  28:Lib/RingBuffer.h ****  * \param[out] Buffer  Pointer to a ring buffer structure to initialize
  29:Lib/RingBuffer.h ****  */
  30:Lib/RingBuffer.h **** static inline void RingBuffer_InitBuffer(RingBuff_t* const Buffer)
  31:Lib/RingBuffer.h **** {
  32:Lib/RingBuffer.h ****   ATOMIC_BLOCK(ATOMIC_RESTORESTATE)
  33:Lib/RingBuffer.h ****   {
  34:Lib/RingBuffer.h ****     Buffer->In  = Buffer->Buffer;
  35:Lib/RingBuffer.h ****     Buffer->Out = Buffer->Buffer;
  36:Lib/RingBuffer.h ****   }
  37:Lib/RingBuffer.h **** }
  38:Lib/RingBuffer.h **** 
  39:Lib/RingBuffer.h **** /*
  40:Lib/RingBuffer.h ****  * Retrieves the minimum number of bytes stored in a particular buffer. This value is computed
  41:Lib/RingBuffer.h ****  * by entering an atomic lock on the buffer while the IN and OUT locations are fetched, so that
  42:Lib/RingBuffer.h ****  * the buffer cannot be modified while the computation takes place. This value should be cached
  43:Lib/RingBuffer.h ****  * when reading out the contents of the buffer, so that as small a time as possible is spent
  44:Lib/RingBuffer.h ****  * in an atomic lock.
  45:Lib/RingBuffer.h ****  *
  46:Lib/RingBuffer.h ****  * \note The value returned by this function is guaranteed to only be the minimum number of bytes
  47:Lib/RingBuffer.h ****  *        stored in the given buffer; this value may change as other threads write new data and so
  48:Lib/RingBuffer.h ****  *        the returned number should be used only to determine how many successive reads may safely
  49:Lib/RingBuffer.h ****  *        be performed on the buffer.
  50:Lib/RingBuffer.h ****  *
  51:Lib/RingBuffer.h ****  * \param[in] Buffer  Pointer to a ring buffer structure whose count is to be computed
  52:Lib/RingBuffer.h ****  */
  53:Lib/RingBuffer.h **** static inline RingBuff_Count_t RingBuffer_GetCount(RingBuff_t* const Buffer)
  54:Lib/RingBuffer.h **** {
  55:Lib/RingBuffer.h ****   RingBuff_Count_t Count;
  56:Lib/RingBuffer.h ****   
  57:Lib/RingBuffer.h ****   ATOMIC_BLOCK(ATOMIC_RESTORESTATE)
  58:Lib/RingBuffer.h ****   {
  59:Lib/RingBuffer.h ****     Count = Buffer->Count;
  60:Lib/RingBuffer.h ****   }
  61:Lib/RingBuffer.h ****   
  62:Lib/RingBuffer.h ****   return Count;
  63:Lib/RingBuffer.h **** }
  64:Lib/RingBuffer.h **** 
  65:Lib/RingBuffer.h **** /*
  66:Lib/RingBuffer.h ****  * Inserts an element into the ring buffer.
  67:Lib/RingBuffer.h ****  *
  68:Lib/RingBuffer.h ****  * \note Only one execution thread (main program thread or an ISR) may insert into a single buffer
  69:Lib/RingBuffer.h ****  *       otherwise data corruption may occur. Insertion and removal may occur from different execut
  70:Lib/RingBuffer.h ****  *       threads.
  71:Lib/RingBuffer.h ****  *
  72:Lib/RingBuffer.h ****  * \param[in,out] Buffer  Pointer to a ring buffer structure to insert into
  73:Lib/RingBuffer.h ****  * \param[in]     Data    Data element to insert into the buffer
  74:Lib/RingBuffer.h ****  */
  75:Lib/RingBuffer.h **** static inline void RingBuffer_Insert(RingBuff_t* const Buffer,
  76:Lib/RingBuffer.h ****                                      const RingBuff_Data_t Data)
  77:Lib/RingBuffer.h **** {
  15               		.loc 1 77 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  78:Lib/RingBuffer.h ****   *Buffer->In = Data;
  22               		.loc 1 78 0
  23 0000 FC01      		movw r30,r24
  24 0002 E058      		subi r30,-128
  25 0004 FF4F      		sbci r31,-1
  26 0006 A081      		ld r26,Z
  27 0008 B181      		ldd r27,Z+1
  28 000a 6C93      		st X,r22
  79:Lib/RingBuffer.h ****   
  80:Lib/RingBuffer.h ****   if (++Buffer->In == &Buffer->Buffer[BUFFER_SIZE])
  29               		.loc 1 80 0
  30 000c A081      		ld r26,Z
  31 000e B181      		ldd r27,Z+1
  32 0010 9D01      		movw r18,r26
  33 0012 2F5F      		subi r18,-1
  34 0014 3F4F      		sbci r19,-1
  35 0016 3183      		std Z+1,r19
  36 0018 2083      		st Z,r18
  37 001a 2E17      		cp r18,r30
  38 001c 3F07      		cpc r19,r31
  39 001e 01F4      		brne .L2
  81:Lib/RingBuffer.h ****     Buffer->In = Buffer->Buffer;
  40               		.loc 1 81 0
  41 0020 1296      		adiw r26,1+1
  42 0022 9C93      		st X,r25
  43 0024 8E93      		st -X,r24
  44 0026 1197      		sbiw r26,1
  45               	.L2:
  46               	.LBB92:
  82:Lib/RingBuffer.h **** 
  83:Lib/RingBuffer.h ****   ATOMIC_BLOCK(ATOMIC_RESTORESTATE)
  47               		.loc 1 83 0
  48 0028 2FB7      		in r18,__SREG__
  49               	.LVL1:
  50               	.LBB93:
  51               	.LBB94:
  52               		.file 2 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/ut
   1:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****    All rights reserved.
   3:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
   4:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
   7:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  10:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****      distribution.
  14:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  15:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  19:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** */
  31:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  32:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** /* $Id$ */
  33:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  34:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  37:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** #include <avr/io.h>
  38:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  40:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** {
  44:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     sei();
  45:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     return 1;
  46:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** }
  47:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  48:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  49:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** {
  50:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     cli();
  53               		.loc 2 50 0
  54               	/* #APP */
  55               	 ;  50 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util
  56 002a F894      		cli
  57               	 ;  0 "" 2
  58               	.LVL2:
  59               	/* #NOAPP */
  60               	.LBE94:
  61               	.LBE93:
  84:Lib/RingBuffer.h ****   {
  85:Lib/RingBuffer.h ****     Buffer->Count++;
  62               		.loc 1 85 0
  63 002c FC01      		movw r30,r24
  64 002e EC57      		subi r30,124
  65 0030 FF4F      		sbci r31,-1
  66 0032 8081      		ld r24,Z
  67 0034 9181      		ldd r25,Z+1
  68               	.LVL3:
  69 0036 0196      		adiw r24,1
  70 0038 9183      		std Z+1,r25
  71 003a 8083      		st Z,r24
  72               	.LVL4:
  73               	.LBB95:
  74               	.LBB96:
  51:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     return 1;
  52:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** }
  53:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  54:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** {
  56:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     sei();
  57:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  58:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     (void)__s;
  59:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** }
  60:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  61:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** static __inline__ void __iCliParam(const uint8_t *__s)
  62:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** {
  63:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     cli();
  64:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  65:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     (void)__s;
  66:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** }
  67:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** 
  68:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** static __inline__ void __iRestore(const  uint8_t *__s)
  69:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h **** {
  70:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     SREG = *__s;
  75               		.loc 2 70 0
  76 003c 2FBF      		out __SREG__,r18
  71:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  77               		.loc 2 71 0
  78               	.LVL5:
  79 003e 0895      		ret
  80               	.LBE96:
  81               	.LBE95:
  82               	.LBE92:
  83               		.cfi_endproc
  84               	.LFE104:
  86               		.section	.text.RingBuffer_Remove,"ax",@progbits
  88               	RingBuffer_Remove:
  89               	.LFB105:
  86:Lib/RingBuffer.h ****   }
  87:Lib/RingBuffer.h **** }
  88:Lib/RingBuffer.h **** 
  89:Lib/RingBuffer.h **** /*
  90:Lib/RingBuffer.h ****  * Removes an element from the ring buffer.
  91:Lib/RingBuffer.h ****  *
  92:Lib/RingBuffer.h ****  * \note Only one execution thread (main program thread or an ISR) may remove from a single buffer
  93:Lib/RingBuffer.h ****  *       otherwise data corruption may occur. Insertion and removal may occur from different execut
  94:Lib/RingBuffer.h ****  *       threads.
  95:Lib/RingBuffer.h ****  *
  96:Lib/RingBuffer.h ****  * \param[in,out] Buffer  Pointer to a ring buffer structure to retrieve from
  97:Lib/RingBuffer.h ****  *
  98:Lib/RingBuffer.h ****  * \return Next data element stored in the buffer
  99:Lib/RingBuffer.h ****  */
 100:Lib/RingBuffer.h **** static inline RingBuff_Data_t RingBuffer_Remove(RingBuff_t* const Buffer)
 101:Lib/RingBuffer.h **** {
  90               		.loc 1 101 0
  91               		.cfi_startproc
  92               	.LVL6:
  93               	/* prologue: function */
  94               	/* frame size = 0 */
  95               	/* stack size = 0 */
  96               	.L__stack_usage = 0
 102:Lib/RingBuffer.h ****   RingBuff_Data_t Data = *Buffer->Out;
  97               		.loc 1 102 0
  98 0000 DC01      		movw r26,r24
  99 0002 AE57      		subi r26,126
 100 0004 BF4F      		sbci r27,-1
 101 0006 ED91      		ld r30,X+
 102 0008 FC91      		ld r31,X
 103 000a 1197      		sbiw r26,1
 104 000c 4191      		ld r20,Z+
 105               	.LVL7:
 103:Lib/RingBuffer.h ****   
 104:Lib/RingBuffer.h ****   if (++Buffer->Out == &Buffer->Buffer[BUFFER_SIZE])
 106               		.loc 1 104 0
 107 000e 1196      		adiw r26,1
 108 0010 FC93      		st X,r31
 109 0012 EE93      		st -X,r30
 110 0014 9C01      		movw r18,r24
 111 0016 2058      		subi r18,-128
 112 0018 3F4F      		sbci r19,-1
 113 001a E217      		cp r30,r18
 114 001c F307      		cpc r31,r19
 115 001e 01F4      		brne .L5
 105:Lib/RingBuffer.h ****     Buffer->Out = Buffer->Buffer;
 116               		.loc 1 105 0
 117 0020 8D93      		st X+,r24
 118 0022 9C93      		st X,r25
 119               	.L5:
 120               	.LBB97:
 106:Lib/RingBuffer.h **** 
 107:Lib/RingBuffer.h ****   ATOMIC_BLOCK(ATOMIC_RESTORESTATE)
 121               		.loc 1 107 0
 122 0024 5FB7      		in r21,__SREG__
 123               	.LVL8:
 124               	.LBB98:
 125               	.LBB99:
  50:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     return 1;
 126               		.loc 2 50 0
 127               	/* #APP */
 128               	 ;  50 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util
 129 0026 F894      		cli
 130               	 ;  0 "" 2
 131               	.LVL9:
 132               	/* #NOAPP */
 133               	.LBE99:
 134               	.LBE98:
 108:Lib/RingBuffer.h ****   {
 109:Lib/RingBuffer.h ****     Buffer->Count--;
 135               		.loc 1 109 0
 136 0028 FC01      		movw r30,r24
 137 002a EC57      		subi r30,124
 138 002c FF4F      		sbci r31,-1
 139 002e 2081      		ld r18,Z
 140 0030 3181      		ldd r19,Z+1
 141 0032 2150      		subi r18,1
 142 0034 3109      		sbc r19,__zero_reg__
 143 0036 3183      		std Z+1,r19
 144 0038 2083      		st Z,r18
 145               	.LVL10:
 146               	.LBB100:
 147               	.LBB101:
  70:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 148               		.loc 2 70 0
 149 003a 5FBF      		out __SREG__,r21
 150               		.loc 2 71 0
 151               	.LVL11:
 152               	.LBE101:
 153               	.LBE100:
 154               	.LBE97:
 110:Lib/RingBuffer.h ****   }
 111:Lib/RingBuffer.h ****   
 112:Lib/RingBuffer.h ****   return Data;
 113:Lib/RingBuffer.h **** }
 155               		.loc 1 113 0
 156 003c 842F      		mov r24,r20
 157               	.LVL12:
 158 003e 0895      		ret
 159               		.cfi_endproc
 160               	.LFE105:
 162               		.section	.text.SW_PulseClock,"ax",@progbits
 164               	SW_PulseClock:
 165               	.LFB118:
 166               		.file 3 "Lib/SWD.h"
   1:Lib/SWD.h     **** /*
   2:Lib/SWD.h     ****    Serial Wire Debug driver for the RRAM Testchip
   3:Lib/SWD.h     **** */
   4:Lib/SWD.h     **** 
   5:Lib/SWD.h     **** #ifndef __SWD_RRAM_H__
   6:Lib/SWD.h     **** #define __SWD_RRAM_H__
   7:Lib/SWD.h     **** 
   8:Lib/SWD.h     ****   /* Includes: */
   9:Lib/SWD.h     ****   #include <util/delay.h>
  10:Lib/SWD.h     **** 
  11:Lib/SWD.h     ****   /* Private Interface - For use in library only: */
  12:Lib/SWD.h     ****   #if !defined(__DOXYGEN__)
  13:Lib/SWD.h     ****     /* Macros: */
  14:Lib/SWD.h     ****       /*
  15:Lib/SWD.h     ****        * SW pins 
  16:Lib/SWD.h     ****        */
  17:Lib/SWD.h     ****       #define SW_DIO_PIN   PINC
  18:Lib/SWD.h     ****       #define SW_DIO_POUT  PORTC
  19:Lib/SWD.h     ****       #define SW_DIO_DDR   DDRC
  20:Lib/SWD.h     ****       #define SW_DIO_MASK  _BV(6)
  21:Lib/SWD.h     **** 
  22:Lib/SWD.h     ****       #define SW_CLK_PIN   PINC
  23:Lib/SWD.h     ****       #define SW_CLK_POUT  PORTC
  24:Lib/SWD.h     ****       #define SW_CLK_DDR   DDRC
  25:Lib/SWD.h     ****       #define SW_CLK_MASK  _BV(7)
  26:Lib/SWD.h     **** 
  27:Lib/SWD.h     ****       /*
  28:Lib/SWD.h     ****        * SW responses
  29:Lib/SWD.h     ****        */
  30:Lib/SWD.h     ****       #define SW_CMD_JTAG_TO_SWD 0xE79E
  31:Lib/SWD.h     **** 
  32:Lib/SWD.h     ****       /* Phase 1: 8-bit Request Fields */ 
  33:Lib/SWD.h     ****       #define SW_REQ_START_MASK (1 << 0)
  34:Lib/SWD.h     ****       #define SW_REQ_AP_MASK    (1 << 1)
  35:Lib/SWD.h     ****       #define SW_REQ_DP_MASK    (0 << 1)
  36:Lib/SWD.h     ****       #define SW_REQ_READ_MASK  (1 << 2)
  37:Lib/SWD.h     ****       #define SW_REQ_WRITE_MASK (0 << 2)
  38:Lib/SWD.h     ****       #define SW_REQ_STOP_MASK  (0 << 6)
  39:Lib/SWD.h     ****       #define SW_REQ_PARK_MASK  (1 << 7)
  40:Lib/SWD.h     **** 
  41:Lib/SWD.h     ****       /* Phase 2: 3-bit Acknowledgement Fields */ 
  42:Lib/SWD.h     ****       #define SW_DP_ACK_OK      (1 << 0)
  43:Lib/SWD.h     ****       #define SW_DP_ACK_WAIT    (1 << 1)
  44:Lib/SWD.h     ****       #define SW_DP_ACK_FAULT   (1 << 2)
  45:Lib/SWD.h     ****       
  46:Lib/SWD.h     ****       /* AP Register Addresses */
  47:Lib/SWD.h     ****       #define SW_REG_AP_CSW       0x00
  48:Lib/SWD.h     ****       #define SW_REG_AP_TAR       0x04
  49:Lib/SWD.h     ****       #define SW_REG_AP_DRW       0x0c
  50:Lib/SWD.h     ****       #define SW_REG_AP_BD0       0x10
  51:Lib/SWD.h     ****       #define SW_REG_AP_BD1       0x14
  52:Lib/SWD.h     ****       #define SW_REG_AP_BD2       0x18
  53:Lib/SWD.h     ****       #define SW_REG_AP_BD3       0x1c
  54:Lib/SWD.h     ****       #define SW_REG_AP_CFG       0xf4
  55:Lib/SWD.h     ****       #define SW_REG_AP_BASE      0xf8
  56:Lib/SWD.h     ****       #define SW_REG_AP_IDR       0xfc
  57:Lib/SWD.h     **** 
  58:Lib/SWD.h     ****       /* DP Register Addresses */
  59:Lib/SWD.h     ****       #define SW_REG_DP_DPIDR     0x0
  60:Lib/SWD.h     ****       #define SW_REG_DP_ABORT     0x0 
  61:Lib/SWD.h     ****       #define SW_REG_DP_CTRLSTAT  0x4
  62:Lib/SWD.h     ****       #define SW_REG_DP_DLCR      0x4
  63:Lib/SWD.h     ****       #define SW_REG_DP_TARGETID  0x4
  64:Lib/SWD.h     ****       #define SW_REG_DP_HALTEV    0x4
  65:Lib/SWD.h     ****       #define SW_REG_DP_RESEND    0x8
  66:Lib/SWD.h     ****       #define SW_REG_DP_SELECT    0x8
  67:Lib/SWD.h     ****       #define SW_REG_DP_RDBUFF    0xc
  68:Lib/SWD.h     ****       #define SW_REG_DP_TARGETSEL 0xc
  69:Lib/SWD.h     **** 
  70:Lib/SWD.h     ****       /* AP CSW Register Fields */
  71:Lib/SWD.h     ****       #define SW_REG_AP_CSW_PROT_USER_MASK        (0<<25)
  72:Lib/SWD.h     ****       #define SW_REG_AP_CSW_PROT_PRIV_MASK        _BV(25)
  73:Lib/SWD.h     ****       #define SW_REG_AP_CSW_PROT_BUFF_MASK        _BV(26)
  74:Lib/SWD.h     ****       #define SW_REG_AP_CSW_PROT_CACH_MASK        _BV(27)
  75:Lib/SWD.h     ****       #define SW_REG_AP_CSW_PROT_MASTER_CORE_MASK (0<<29)
  76:Lib/SWD.h     ****       #define SW_REG_AP_CSW_PROT_MASTER_DBG_MASK  _BV(29)
  77:Lib/SWD.h     ****       #define SW_REG_AP_CSW_INCR_OFF_MASK         (0<< 4)
  78:Lib/SWD.h     ****       #define SW_REG_AP_CSW_INCR_SINGLE_MASK      _BV( 4)
  79:Lib/SWD.h     ****       #define SW_REG_AP_CSW_SIZE_BYTE_MASK        0
  80:Lib/SWD.h     ****       #define SW_REG_AP_CSW_SIZE_HALFWORD_MASK    1
  81:Lib/SWD.h     ****       #define SW_REG_AP_CSW_SIZE_WORD_MASK        2
  82:Lib/SWD.h     **** 
  83:Lib/SWD.h     ****       /* DP CTRLSTAT Register Fields */
  84:Lib/SWD.h     ****       #define SW_REG_DP_CTRLSTAT_CSYSPWRUPACK_MASK _BV(31) //System power up ack, RO
  85:Lib/SWD.h     ****       #define SW_REG_DP_CTRLSTAT_CSYSPWRUPREQ_MASK _BV(30) //System power up req, RW
  86:Lib/SWD.h     ****       #define SW_REG_DP_CTRLSTAT_CDBGPWRUPACK_MASK _BV(29) //Debug  power up ack, RO
  87:Lib/SWD.h     ****       #define SW_REG_DP_CTRLSTAT_CDBGPWRUPREQ_MASK _BV(28) //Debug  power up req, RW
  88:Lib/SWD.h     ****       #define SW_REG_DP_CTRLSTAT_CDBGRSTACK_MASK   _BV(27) //Debug  reset    ack, RO
  89:Lib/SWD.h     ****       #define SW_REG_DP_CTRLSTAT_CDBGRSTREQ_MASK   _BV(26) //Debug  reset    req, RW
  90:Lib/SWD.h     **** 
  91:Lib/SWD.h     ****       /* ARMv6M and ARMv7M Architectural Debug Register Definitions */
  92:Lib/SWD.h     ****       #define SW_REG_DHCSR_ADDR      0xE000EDF0
  93:Lib/SWD.h     ****       #define SW_REG_DBGKEY          0xA05F0000
  94:Lib/SWD.h     ****       #define SW_REG_S_LOCKUP_MASK   _BV(19)
  95:Lib/SWD.h     ****       #define SW_REG_S_SLEEP_MASK    _BV(18)
  96:Lib/SWD.h     ****       #define SW_REG_S_HALT_MASK     _BV(17)
  97:Lib/SWD.h     ****       #define SW_REG_S_REGRDY_MASK   _BV(16)
  98:Lib/SWD.h     ****       #define SW_REG_C_MASKINTS_MASK _BV(3)
  99:Lib/SWD.h     ****       #define SW_REG_C_STEP_MASK     _BV(2)
 100:Lib/SWD.h     ****       #define SW_REG_C_HALT_MASK     _BV(1)
 101:Lib/SWD.h     ****       #define SW_REG_C_DEBUGEN_MASK  _BV(0)
 102:Lib/SWD.h     ****       #define SW_REG_DCRDR_ADDR      0xE000EDF8
 103:Lib/SWD.h     ****       #define SW_REG_DEMCR_ADDR      0xE000EDFC
 104:Lib/SWD.h     ****       #define SW_REG_AIRCR_ADDR      0xE000ED0C
 105:Lib/SWD.h     ****       #define SW_REG_RSTINFO_ADDR    0x4001F010
 106:Lib/SWD.h     **** 
 107:Lib/SWD.h     ****       /* ROM Address */
 108:Lib/SWD.h     ****       #define SW_ROM_ADDR 0x00000000
 109:Lib/SWD.h     **** 
 110:Lib/SWD.h     ****   #endif
 111:Lib/SWD.h     **** 
 112:Lib/SWD.h     ****   /* Public Interface - May be used in end-application: */
 113:Lib/SWD.h     **** 
 114:Lib/SWD.h     ****   /* Inline Functions: */
 115:Lib/SWD.h     **** 
 116:Lib/SWD.h     ****     /**
 117:Lib/SWD.h     ****      * Calculate the parity of the given number
 118:Lib/SWD.h     ****      */
 119:Lib/SWD.h     ****     bool getParity(uint32_t n)
 120:Lib/SWD.h     ****     {
 121:Lib/SWD.h     ****       bool parity = 0;
 122:Lib/SWD.h     ****       while (n) {
 123:Lib/SWD.h     ****         parity = !parity; 
 124:Lib/SWD.h     ****         n = n & (n - 1);
 125:Lib/SWD.h     ****       }    
 126:Lib/SWD.h     ****       return parity;
 127:Lib/SWD.h     ****     }
 128:Lib/SWD.h     ****  
 129:Lib/SWD.h     ****     /**
 130:Lib/SWD.h     ****      *
 131:Lib/SWD.h     ****      */
 132:Lib/SWD.h     ****     static inline void SW_Init(void)
 133:Lib/SWD.h     ****     {
 134:Lib/SWD.h     ****       SW_DIO_POUT |=  SW_DIO_MASK; // Pull up DIO
 135:Lib/SWD.h     ****       SW_DIO_DDR  |=  SW_DIO_MASK; // Set it as an output
 136:Lib/SWD.h     **** 
 137:Lib/SWD.h     ****       SW_CLK_POUT |=  SW_CLK_MASK; // Pull up CLK
 138:Lib/SWD.h     ****       SW_CLK_DDR  |=  SW_CLK_MASK; // Set it as an output
 139:Lib/SWD.h     ****     }
 140:Lib/SWD.h     **** 
 141:Lib/SWD.h     ****     /**
 142:Lib/SWD.h     ****      *
 143:Lib/SWD.h     ****      */
 144:Lib/SWD.h     ****     static inline void SW_ShutDown(void)
 145:Lib/SWD.h     ****     {
 146:Lib/SWD.h     ****       SW_DIO_POUT &= ~SW_DIO_MASK; // Disable the Pull-up resistor 
 147:Lib/SWD.h     ****       SW_DIO_DDR  &= ~SW_DIO_MASK; // Set it as an input 
 148:Lib/SWD.h     **** 
 149:Lib/SWD.h     ****       SW_CLK_POUT &= ~SW_CLK_MASK; // Disable the Pull-up resistor
 150:Lib/SWD.h     ****       SW_CLK_DDR  &= ~SW_CLK_MASK; // Set it as an input 
 151:Lib/SWD.h     ****     }
 152:Lib/SWD.h     **** 
 153:Lib/SWD.h     ****     /**
 154:Lib/SWD.h     ****      *
 155:Lib/SWD.h     ****      */
 156:Lib/SWD.h     ****     static inline void SW_PulseClock(uint8_t cycles)
 157:Lib/SWD.h     ****     {
 167               		.loc 3 157 0
 168               		.cfi_startproc
 169               	.LVL13:
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 174               	.LBB102:
 158:Lib/SWD.h     ****       for(uint8_t i=0;i<cycles;i++){
 175               		.loc 3 158 0
 176 0000 90E0      		ldi r25,0
 177               	.LVL14:
 178               	.L7:
 179               		.loc 3 158 0 is_stmt 0 discriminator 1
 180 0002 9817      		cp r25,r24
 181 0004 01F0      		breq .L9
 159:Lib/SWD.h     ****         SW_CLK_POUT ^= SW_CLK_MASK;
 182               		.loc 3 159 0 is_stmt 1 discriminator 3
 183 0006 28B1      		in r18,0x8
 184 0008 2058      		subi r18,lo8(-(-128))
 185 000a 28B9      		out 0x8,r18
 160:Lib/SWD.h     ****         SW_CLK_POUT ^= SW_CLK_MASK;
 186               		.loc 3 160 0 discriminator 3
 187 000c 28B1      		in r18,0x8
 188 000e 2058      		subi r18,lo8(-(-128))
 189 0010 28B9      		out 0x8,r18
 158:Lib/SWD.h     ****       for(uint8_t i=0;i<cycles;i++){
 190               		.loc 3 158 0 discriminator 3
 191 0012 9F5F      		subi r25,lo8(-(1))
 192               	.LVL15:
 193 0014 00C0      		rjmp .L7
 194               	.L9:
 195               	/* epilogue start */
 196               	.LBE102:
 161:Lib/SWD.h     ****       }
 162:Lib/SWD.h     ****     }
 197               		.loc 3 162 0
 198 0016 0895      		ret
 199               		.cfi_endproc
 200               	.LFE118:
 202               		.section	.text.SW_Send,"ax",@progbits
 204               	SW_Send:
 205               	.LFB120:
 163:Lib/SWD.h     **** 
 164:Lib/SWD.h     ****     /**
 165:Lib/SWD.h     ****      *
 166:Lib/SWD.h     ****      */
 167:Lib/SWD.h     ****     static inline void SW_LineReset(void)
 168:Lib/SWD.h     ****     {
 169:Lib/SWD.h     ****       SW_DIO_POUT |=  SW_DIO_MASK;
 170:Lib/SWD.h     ****       SW_PulseClock(50);
 171:Lib/SWD.h     ****       SW_DIO_POUT &= ~SW_DIO_MASK;
 172:Lib/SWD.h     ****       SW_PulseClock(50);
 173:Lib/SWD.h     ****     }
 174:Lib/SWD.h     **** 
 175:Lib/SWD.h     ****     /**
 176:Lib/SWD.h     ****      *
 177:Lib/SWD.h     ****      */
 178:Lib/SWD.h     ****     static inline void SW_Send(uint32_t _data, uint8_t _bits)
 179:Lib/SWD.h     ****     {
 206               		.loc 3 179 0
 207               		.cfi_startproc
 208               	.LVL16:
 209 0000 CF92      		push r12
 210               	.LCFI0:
 211               		.cfi_def_cfa_offset 3
 212               		.cfi_offset 12, -2
 213 0002 DF92      		push r13
 214               	.LCFI1:
 215               		.cfi_def_cfa_offset 4
 216               		.cfi_offset 13, -3
 217 0004 EF92      		push r14
 218               	.LCFI2:
 219               		.cfi_def_cfa_offset 5
 220               		.cfi_offset 14, -4
 221 0006 FF92      		push r15
 222               	.LCFI3:
 223               		.cfi_def_cfa_offset 6
 224               		.cfi_offset 15, -5
 225 0008 0F93      		push r16
 226               	.LCFI4:
 227               		.cfi_def_cfa_offset 7
 228               		.cfi_offset 16, -6
 229 000a 1F93      		push r17
 230               	.LCFI5:
 231               		.cfi_def_cfa_offset 8
 232               		.cfi_offset 17, -7
 233 000c CF93      		push r28
 234               	.LCFI6:
 235               		.cfi_def_cfa_offset 9
 236               		.cfi_offset 28, -8
 237 000e DF93      		push r29
 238               	.LCFI7:
 239               		.cfi_def_cfa_offset 10
 240               		.cfi_offset 29, -9
 241               	/* prologue: function */
 242               	/* frame size = 0 */
 243               	/* stack size = 8 */
 244               	.L__stack_usage = 8
 245 0010 6B01      		movw r12,r22
 246 0012 7C01      		movw r14,r24
 247               	.LVL17:
 248 0014 042F      		mov r16,r20
 249 0016 10E0      		ldi r17,0
 250               	.LBB103:
 180:Lib/SWD.h     ****       /* Send the bits part */
 181:Lib/SWD.h     ****       for(uint8_t i = 0; i<_bits; i++){
 251               		.loc 3 181 0
 252 0018 C0E0      		ldi r28,0
 253 001a D0E0      		ldi r29,0
 254               	.LVL18:
 255               	.L11:
 256               		.loc 3 181 0 is_stmt 0 discriminator 1
 257 001c C017      		cp r28,r16
 258 001e D107      		cpc r29,r17
 259 0020 01F0      		breq .L15
 182:Lib/SWD.h     ****         /* DIO */
 183:Lib/SWD.h     ****         if((_data >> i) & 1)
 260               		.loc 3 183 0 is_stmt 1
 261 0022 D701      		movw r26,r14
 262 0024 C601      		movw r24,r12
 263 0026 0C2E      		mov r0,r28
 264 0028 00C0      		rjmp 2f
 265               		1:
 266 002a B695      		lsr r27
 267 002c A795      		ror r26
 268 002e 9795      		ror r25
 269 0030 8795      		ror r24
 270               		2:
 271 0032 0A94      		dec r0
 272 0034 02F4      		brpl 1b
 273 0036 80FF      		sbrs r24,0
 274 0038 00C0      		rjmp .L12
 184:Lib/SWD.h     ****           SW_DIO_POUT |=  SW_DIO_MASK;
 275               		.loc 3 184 0
 276 003a 469A      		sbi 0x8,6
 277 003c 00C0      		rjmp .L13
 278               	.L12:
 185:Lib/SWD.h     ****         else
 186:Lib/SWD.h     ****           SW_DIO_POUT &= ~SW_DIO_MASK;
 279               		.loc 3 186 0
 280 003e 4698      		cbi 0x8,6
 281               	.L13:
 187:Lib/SWD.h     **** 
 188:Lib/SWD.h     ****         /* Toggle CLK */
 189:Lib/SWD.h     ****         SW_PulseClock(1);
 282               		.loc 3 189 0 discriminator 2
 283 0040 81E0      		ldi r24,lo8(1)
 284 0042 0E94 0000 		call SW_PulseClock
 285               	.LVL19:
 286 0046 2196      		adiw r28,1
 287               	.LVL20:
 288 0048 00C0      		rjmp .L11
 289               	.L15:
 290               	/* epilogue start */
 291               	.LBE103:
 190:Lib/SWD.h     ****       }
 191:Lib/SWD.h     ****     }
 292               		.loc 3 191 0
 293 004a DF91      		pop r29
 294 004c CF91      		pop r28
 295               	.LVL21:
 296 004e 1F91      		pop r17
 297 0050 0F91      		pop r16
 298               	.LVL22:
 299 0052 FF90      		pop r15
 300 0054 EF90      		pop r14
 301 0056 DF90      		pop r13
 302 0058 CF90      		pop r12
 303               	.LVL23:
 304 005a 0895      		ret
 305               		.cfi_endproc
 306               	.LFE120:
 308               		.section	.text.I2C_StartTransmission,"ax",@progbits
 310               	I2C_StartTransmission:
 311               	.LFB133:
 312               		.file 4 "Board/../Lib/I2C.h"
   1:Board/../Lib/I2C.h **** /*
   2:Board/../Lib/I2C.h ****    I2C driver for the RRAM Testchip
   3:Board/../Lib/I2C.h **** */
   4:Board/../Lib/I2C.h **** 
   5:Board/../Lib/I2C.h **** #ifndef __I2C_RRAM_H__
   6:Board/../Lib/I2C.h **** #define __I2C_RRAM_H__
   7:Board/../Lib/I2C.h **** 
   8:Board/../Lib/I2C.h ****   /* Includes: */
   9:Board/../Lib/I2C.h **** 
  10:Board/../Lib/I2C.h ****   /* Private Interface - For use in library only: */
  11:Board/../Lib/I2C.h ****   #if !defined(__DOXYGEN__)
  12:Board/../Lib/I2C.h ****     /* Macros: */
  13:Board/../Lib/I2C.h ****       #define I2C_SDA_PIN   PIND
  14:Board/../Lib/I2C.h ****       #define I2C_SDA_POUT  PORTD
  15:Board/../Lib/I2C.h ****       #define I2C_SDA_DDR   DDRD
  16:Board/../Lib/I2C.h ****       #define I2C_SDA_MASK  _BV(1)
  17:Board/../Lib/I2C.h **** 
  18:Board/../Lib/I2C.h ****       #define I2C_SCL_POUT  PORTD
  19:Board/../Lib/I2C.h ****       #define I2C_SCL_DDR   DDRD
  20:Board/../Lib/I2C.h ****       #define I2C_SCL_MASK  _BV(0)
  21:Board/../Lib/I2C.h ****   #endif
  22:Board/../Lib/I2C.h **** 
  23:Board/../Lib/I2C.h ****   /* Public Interface - May be used in end-application: */
  24:Board/../Lib/I2C.h **** 
  25:Board/../Lib/I2C.h ****   /* Inline Functions: */
  26:Board/../Lib/I2C.h **** 
  27:Board/../Lib/I2C.h ****     /**
  28:Board/../Lib/I2C.h ****      *
  29:Board/../Lib/I2C.h ****      */
  30:Board/../Lib/I2C.h ****     static inline void I2C_StartTransmission(void)
  31:Board/../Lib/I2C.h ****     {
 313               		.loc 4 31 0
 314               		.cfi_startproc
 315               	/* prologue: function */
 316               	/* frame size = 0 */
 317               	/* stack size = 0 */
 318               	.L__stack_usage = 0
  32:Board/../Lib/I2C.h ****       I2C_SDA_DDR  |=  I2C_SDA_MASK; // Set it as an output
 319               		.loc 4 32 0
 320 0000 519A      		sbi 0xa,1
  33:Board/../Lib/I2C.h ****       I2C_SCL_DDR  |=  I2C_SCL_MASK; // Set it as an output
 321               		.loc 4 33 0
 322 0002 509A      		sbi 0xa,0
  34:Board/../Lib/I2C.h **** 
  35:Board/../Lib/I2C.h ****       I2C_SDA_POUT |=  I2C_SDA_MASK; // Pull up SDA
 323               		.loc 4 35 0
 324 0004 599A      		sbi 0xb,1
  36:Board/../Lib/I2C.h ****       I2C_SCL_POUT |=  I2C_SCL_MASK; // Pull up SCL
 325               		.loc 4 36 0
 326 0006 589A      		sbi 0xb,0
  37:Board/../Lib/I2C.h ****       I2C_SDA_POUT &= ~I2C_SDA_MASK; // Pull down SDA
 327               		.loc 4 37 0
 328 0008 5998      		cbi 0xb,1
  38:Board/../Lib/I2C.h ****       I2C_SCL_POUT &= ~I2C_SCL_MASK; // Pull down SCL
 329               		.loc 4 38 0
 330 000a 5898      		cbi 0xb,0
 331 000c 0895      		ret
 332               		.cfi_endproc
 333               	.LFE133:
 335               		.section	.text.I2C_EndTransmission,"ax",@progbits
 337               	I2C_EndTransmission:
 338               	.LFB134:
  39:Board/../Lib/I2C.h ****     }
  40:Board/../Lib/I2C.h **** 
  41:Board/../Lib/I2C.h ****     /**
  42:Board/../Lib/I2C.h ****      *
  43:Board/../Lib/I2C.h ****      */
  44:Board/../Lib/I2C.h ****     static inline void I2C_EndTransmission(void)
  45:Board/../Lib/I2C.h ****     {
 339               		.loc 4 45 0
 340               		.cfi_startproc
 341               	/* prologue: function */
 342               	/* frame size = 0 */
 343               	/* stack size = 0 */
 344               	.L__stack_usage = 0
  46:Board/../Lib/I2C.h ****       I2C_SDA_POUT &= ~I2C_SDA_MASK; // Pull low SDA
 345               		.loc 4 46 0
 346 0000 5998      		cbi 0xb,1
  47:Board/../Lib/I2C.h ****       I2C_SCL_POUT |=  I2C_SCL_MASK; // Pull up SCL
 347               		.loc 4 47 0
 348 0002 589A      		sbi 0xb,0
  48:Board/../Lib/I2C.h ****       I2C_SDA_POUT |=  I2C_SDA_MASK; // Pull up SDA
 349               		.loc 4 48 0
 350 0004 599A      		sbi 0xb,1
  49:Board/../Lib/I2C.h **** 
  50:Board/../Lib/I2C.h ****       I2C_SDA_DDR  &= ~I2C_SDA_MASK; // Set it as an input 
 351               		.loc 4 50 0
 352 0006 5198      		cbi 0xa,1
  51:Board/../Lib/I2C.h ****       I2C_SCL_DDR  &= ~I2C_SCL_MASK; // Set it as an input 
 353               		.loc 4 51 0
 354 0008 5098      		cbi 0xa,0
 355 000a 0895      		ret
 356               		.cfi_endproc
 357               	.LFE134:
 359               		.section	.text.I2C_SendByte,"ax",@progbits
 361               	I2C_SendByte:
 362               	.LFB135:
  52:Board/../Lib/I2C.h ****     }
  53:Board/../Lib/I2C.h **** 
  54:Board/../Lib/I2C.h ****     /**
  55:Board/../Lib/I2C.h ****      *
  56:Board/../Lib/I2C.h ****      */
  57:Board/../Lib/I2C.h ****     static inline bool I2C_SendByte(uint8_t _data)
  58:Board/../Lib/I2C.h ****     {
 363               		.loc 4 58 0
 364               		.cfi_startproc
 365               	.LVL24:
 366               	/* prologue: function */
 367               	/* frame size = 0 */
 368               	/* stack size = 0 */
 369               	.L__stack_usage = 0
 370               		.loc 4 58 0
 371 0000 27E0      		ldi r18,lo8(7)
 372 0002 30E0      		ldi r19,0
 373               	.LBB104:
  59:Board/../Lib/I2C.h ****       /* Send the byte part */
  60:Board/../Lib/I2C.h ****       for(int8_t i = 7; i>=0; i--){
  61:Board/../Lib/I2C.h ****         /* SDA */
  62:Board/../Lib/I2C.h ****         if((_data >> i) & 1)
 374               		.loc 4 62 0
 375 0004 90E0      		ldi r25,0
 376               	.LVL25:
 377               	.L21:
 378 0006 AC01      		movw r20,r24
 379 0008 022E      		mov r0,r18
 380 000a 00C0      		rjmp 2f
 381               		1:
 382 000c 5595      		asr r21
 383 000e 4795      		ror r20
 384               		2:
 385 0010 0A94      		dec r0
 386 0012 02F4      		brpl 1b
 387 0014 40FF      		sbrs r20,0
 388 0016 00C0      		rjmp .L19
  63:Board/../Lib/I2C.h ****           I2C_SDA_POUT |=  I2C_SDA_MASK;
 389               		.loc 4 63 0
 390 0018 599A      		sbi 0xb,1
 391 001a 00C0      		rjmp .L20
 392               	.L19:
  64:Board/../Lib/I2C.h ****         else
  65:Board/../Lib/I2C.h ****           I2C_SDA_POUT &= ~I2C_SDA_MASK;
 393               		.loc 4 65 0
 394 001c 5998      		cbi 0xb,1
 395               	.L20:
  66:Board/../Lib/I2C.h **** 
  67:Board/../Lib/I2C.h ****         /* Toggle SCL */
  68:Board/../Lib/I2C.h ****         I2C_SCL_POUT |=  I2C_SCL_MASK;
 396               		.loc 4 68 0 discriminator 2
 397 001e 589A      		sbi 0xb,0
  69:Board/../Lib/I2C.h ****         I2C_SCL_POUT &= ~I2C_SCL_MASK;
 398               		.loc 4 69 0 discriminator 2
 399 0020 5898      		cbi 0xb,0
 400               	.LVL26:
 401               	.LVL27:
 402 0022 2150      		subi r18,1
 403 0024 3109      		sbc r19,__zero_reg__
 404 0026 00F4      		brcc .L21
 405               	.LBE104:
  70:Board/../Lib/I2C.h ****       }
  71:Board/../Lib/I2C.h **** 
  72:Board/../Lib/I2C.h ****       /* Receive the acknowledge part */
  73:Board/../Lib/I2C.h ****       bool ack;
  74:Board/../Lib/I2C.h ****       I2C_SDA_POUT |=  I2C_SDA_MASK;    // Enable the pull-up resistor
 406               		.loc 4 74 0
 407 0028 599A      		sbi 0xb,1
  75:Board/../Lib/I2C.h ****       I2C_SDA_DDR  &= ~I2C_SDA_MASK;    // Set it as input
 408               		.loc 4 75 0
 409 002a 5198      		cbi 0xa,1
  76:Board/../Lib/I2C.h ****       I2C_SCL_POUT |=  I2C_SCL_MASK;    // Pull high SCL
 410               		.loc 4 76 0
 411 002c 589A      		sbi 0xb,0
  77:Board/../Lib/I2C.h ****       ack = I2C_SDA_PIN & I2C_SDA_MASK; // Sample SDA 
 412               		.loc 4 77 0
 413 002e 89B1      		in r24,0x9
 414               	.LVL28:
  78:Board/../Lib/I2C.h ****       I2C_SCL_POUT &= ~I2C_SCL_MASK;    // Pull low SCL
 415               		.loc 4 78 0
 416 0030 5898      		cbi 0xb,0
  79:Board/../Lib/I2C.h ****       I2C_SDA_DDR  |=  I2C_SDA_MASK;    // Set it as output
 417               		.loc 4 79 0
 418 0032 519A      		sbi 0xa,1
  80:Board/../Lib/I2C.h **** 
  81:Board/../Lib/I2C.h ****       return ack;
  82:Board/../Lib/I2C.h ****     }
 419               		.loc 4 82 0
 420 0034 8695      		lsr r24
 421 0036 8170      		andi r24,1
 422               	.LVL29:
 423 0038 0895      		ret
 424               		.cfi_endproc
 425               	.LFE135:
 427               		.section	.text.PM_UpdateReg,"ax",@progbits
 429               	PM_UpdateReg:
 430               	.LFB139:
 431               		.file 5 "Board/PM.h"
   1:Board/PM.h    **** /*
   2:Board/PM.h    ****    Board Power Management driver for the RRAM Testchip
   3:Board/PM.h    **** */
   4:Board/PM.h    **** 
   5:Board/PM.h    **** #ifndef __PM_RRAM_H__
   6:Board/PM.h    **** #define __PM_RRAM_H__
   7:Board/PM.h    **** 
   8:Board/PM.h    ****   /* Includes: */
   9:Board/PM.h    ****   #include "LTC3676.h"
  10:Board/PM.h    ****   #include "../Lib/I2C.h"
  11:Board/PM.h    **** 
  12:Board/PM.h    ****   /* Private Interface - For use in library only: */
  13:Board/PM.h    ****   #if !defined(__DOXYGEN__)
  14:Board/PM.h    ****     /* Macros: */
  15:Board/PM.h    ****       #define PM_WAKE_PIN       PINC
  16:Board/PM.h    ****       #define PM_WAKE_POUT      PORTC
  17:Board/PM.h    ****       #define PM_WAKE_DDR       DDRC
  18:Board/PM.h    ****       #define PM_WAKE_MASK      _BV(2)
  19:Board/PM.h    ****       #define PM_WAKE_INT_REG   PCMSK1
  20:Board/PM.h    ****       #define PM_WAKE_INT_MASK  _BV(PCINT11)
  21:Board/PM.h    **** 
  22:Board/PM.h    ****       #define PM_NIRQ_PIN       PINC
  23:Board/PM.h    ****       #define PM_NIRQ_POUT      PORTC
  24:Board/PM.h    ****       #define PM_NIRQ_DDR       DDRC
  25:Board/PM.h    ****       #define PM_NIRQ_MASK      _BV(4)
  26:Board/PM.h    ****       #define PM_NIRQ_INT_REG   PCMSK1
  27:Board/PM.h    ****       #define PM_NIRQ_INT_MASK  _BV(PCINT10)
  28:Board/PM.h    **** 
  29:Board/PM.h    ****       #define PM_PGOOD_PIN      PINC
  30:Board/PM.h    ****       #define PM_PGOOD_POUT     PORTC
  31:Board/PM.h    ****       #define PM_PGOOD_DDR      DDRC
  32:Board/PM.h    ****       #define PM_PGOOD_MASK     _BV(5)
  33:Board/PM.h    ****       #define PM_PGOOD_INT_REG  PCMSK1
  34:Board/PM.h    ****       #define PM_PGOOD_INT_MASK _BV(PCINT9)
  35:Board/PM.h    **** 
  36:Board/PM.h    ****       #define PM_RSTO_PIN      PINB
  37:Board/PM.h    ****       #define PM_RSTO_POUT     PORTB
  38:Board/PM.h    ****       #define PM_RSTO_DDR      DDRB
  39:Board/PM.h    ****       #define PM_RSTO_MASK     _BV(7)
  40:Board/PM.h    ****       #define PM_RSTO_INT_REG  PCMSK1
  41:Board/PM.h    ****       #define PM_RSTO_INT_MASK _BV(PCINT7)
  42:Board/PM.h    ****   #endif
  43:Board/PM.h    **** 
  44:Board/PM.h    ****   /* Public Interface - May be used in end-application: */
  45:Board/PM.h    ****     /* Mapping */
  46:Board/PM.h    ****     #define PM_3V3_FB_RATIO       4
  47:Board/PM.h    ****     #define PM_AVDD_WR_FB_RATIO   4
  48:Board/PM.h    ****     #define PM_AVDD_WL_FB_RATIO   4
  49:Board/PM.h    ****     #define PM_AVDD_RRAM_FB_RATIO 1
  50:Board/PM.h    **** 
  51:Board/PM.h    ****     /* 
  52:Board/PM.h    ****      * 3V3       : BUCK1
  53:Board/PM.h    ****      * AVDD_WR   : BUCK2
  54:Board/PM.h    ****      * AVDD_WL   : BUCK3
  55:Board/PM.h    ****      * AVDD_RRAM : BUCK4
  56:Board/PM.h    ****      * 3V3_AO    : LDO1
  57:Board/PM.h    ****      * VDD       : LDO2
  58:Board/PM.h    ****      * AVDD_SRAM : LDO4
  59:Board/PM.h    ****      */
  60:Board/PM.h    **** 
  61:Board/PM.h    ****   /* Inline Functions: */
  62:Board/PM.h    **** 
  63:Board/PM.h    ****     /**
  64:Board/PM.h    ****      * Write to a register
  65:Board/PM.h    ****      */
  66:Board/PM.h    ****     static inline void PM_WriteReg(uint8_t _subaddress, uint8_t _data)
  67:Board/PM.h    ****     {
  68:Board/PM.h    ****       I2C_StartTransmission();
  69:Board/PM.h    ****       I2C_SendByte(PM_WR_MODE);
  70:Board/PM.h    ****       I2C_SendByte(_subaddress);
  71:Board/PM.h    ****       I2C_SendByte(_data);
  72:Board/PM.h    ****       I2C_EndTransmission();
  73:Board/PM.h    ****     }
  74:Board/PM.h    **** 
  75:Board/PM.h    ****     /**
  76:Board/PM.h    ****      * Read from a register
  77:Board/PM.h    ****      */
  78:Board/PM.h    ****     static inline uint8_t PM_ReadReg(uint8_t _subaddress)
  79:Board/PM.h    ****     {
  80:Board/PM.h    ****       uint8_t result;
  81:Board/PM.h    ****       I2C_StartTransmission();
  82:Board/PM.h    ****       I2C_SendByte(PM_WR_MODE);
  83:Board/PM.h    ****       I2C_SendByte(_subaddress);
  84:Board/PM.h    ****       I2C_StartTransmission();
  85:Board/PM.h    ****       I2C_SendByte(PM_RD_MODE);
  86:Board/PM.h    ****       result = I2C_ReceiveByte();
  87:Board/PM.h    ****       I2C_EndTransmission();
  88:Board/PM.h    ****       return result;
  89:Board/PM.h    ****     }
  90:Board/PM.h    **** 
  91:Board/PM.h    ****     /**
  92:Board/PM.h    ****      * Update a register (Basically a read + a write)
  93:Board/PM.h    ****      */
  94:Board/PM.h    ****     static inline void PM_UpdateReg(uint8_t _subaddress, uint8_t _data, uint8_t _mask)
  95:Board/PM.h    ****     {
 432               		.loc 5 95 0
 433               		.cfi_startproc
 434               	.LVL30:
 435 0000 0F93      		push r16
 436               	.LCFI8:
 437               		.cfi_def_cfa_offset 3
 438               		.cfi_offset 16, -2
 439 0002 1F93      		push r17
 440               	.LCFI9:
 441               		.cfi_def_cfa_offset 4
 442               		.cfi_offset 17, -3
 443 0004 CF93      		push r28
 444               	.LCFI10:
 445               		.cfi_def_cfa_offset 5
 446               		.cfi_offset 28, -4
 447 0006 DF93      		push r29
 448               	.LCFI11:
 449               		.cfi_def_cfa_offset 6
 450               		.cfi_offset 29, -5
 451               	/* prologue: function */
 452               	/* frame size = 0 */
 453               	/* stack size = 4 */
 454               	.L__stack_usage = 4
 455 0008 182F      		mov r17,r24
 456 000a 062F      		mov r16,r22
 457 000c D42F      		mov r29,r20
 458               	.LVL31:
 459               	.LBB112:
 460               	.LBB113:
  81:Board/PM.h    ****       I2C_SendByte(PM_WR_MODE);
 461               		.loc 5 81 0
 462 000e 0E94 0000 		call I2C_StartTransmission
 463               	.LVL32:
  82:Board/PM.h    ****       I2C_SendByte(_subaddress);
 464               		.loc 5 82 0
 465 0012 88E7      		ldi r24,lo8(120)
 466 0014 0E94 0000 		call I2C_SendByte
 467               	.LVL33:
  83:Board/PM.h    ****       I2C_StartTransmission();
 468               		.loc 5 83 0
 469 0018 812F      		mov r24,r17
 470 001a 0E94 0000 		call I2C_SendByte
 471               	.LVL34:
  84:Board/PM.h    ****       I2C_SendByte(PM_RD_MODE);
 472               		.loc 5 84 0
 473 001e 0E94 0000 		call I2C_StartTransmission
 474               	.LVL35:
  85:Board/PM.h    ****       result = I2C_ReceiveByte();
 475               		.loc 5 85 0
 476 0022 89E7      		ldi r24,lo8(121)
 477 0024 0E94 0000 		call I2C_SendByte
 478               	.LVL36:
 479               	.LBB114:
 480               	.LBB115:
  83:Board/../Lib/I2C.h **** 
  84:Board/../Lib/I2C.h ****     /**
  85:Board/../Lib/I2C.h ****      *
  86:Board/../Lib/I2C.h ****      */
  87:Board/../Lib/I2C.h ****     static inline uint8_t I2C_ReceiveByte(void)
  88:Board/../Lib/I2C.h ****     {
  89:Board/../Lib/I2C.h ****       uint8_t result = 0;
  90:Board/../Lib/I2C.h **** 
  91:Board/../Lib/I2C.h ****       /* Set SDA as input */
  92:Board/../Lib/I2C.h ****       I2C_SDA_POUT |=  I2C_SDA_MASK; // Enable the pull-up resistor
 481               		.loc 4 92 0
 482 0028 599A      		sbi 0xb,1
  93:Board/../Lib/I2C.h ****       I2C_SDA_DDR  &= ~I2C_SDA_MASK; // Set it as input
 483               		.loc 4 93 0
 484 002a 5198      		cbi 0xa,1
 485               	.LVL37:
 486 002c 27E0      		ldi r18,lo8(7)
 487 002e 30E0      		ldi r19,0
  89:Board/../Lib/I2C.h **** 
 488               		.loc 4 89 0
 489 0030 C0E0      		ldi r28,0
 490               	.LBB116:
  94:Board/../Lib/I2C.h **** 
  95:Board/../Lib/I2C.h ****       /* Receive the byte part */
  96:Board/../Lib/I2C.h ****       for(int8_t i = 7; i>=0; i--){
  97:Board/../Lib/I2C.h ****         I2C_SCL_POUT |=  I2C_SCL_MASK;                     // Pull high SCL
  98:Board/../Lib/I2C.h ****         result |= (I2C_SDA_PIN & I2C_SDA_MASK)? _BV(i): 0; // Sample SDA 
 491               		.loc 4 98 0
 492 0032 41E0      		ldi r20,lo8(1)
 493 0034 50E0      		ldi r21,0
 494               	.LVL38:
 495               	.L25:
  97:Board/../Lib/I2C.h ****         result |= (I2C_SDA_PIN & I2C_SDA_MASK)? _BV(i): 0; // Sample SDA 
 496               		.loc 4 97 0
 497 0036 589A      		sbi 0xb,0
 498               		.loc 4 98 0
 499 0038 499B      		sbis 0x9,1
 500 003a 00C0      		rjmp .L26
 501 003c CA01      		movw r24,r20
 502 003e 022E      		mov r0,r18
 503 0040 00C0      		rjmp 2f
 504               		1:
 505 0042 880F      		lsl r24
 506               		2:
 507 0044 0A94      		dec r0
 508 0046 02F4      		brpl 1b
 509 0048 00C0      		rjmp .L24
 510               	.L26:
 511 004a 80E0      		ldi r24,0
 512 004c 90E0      		ldi r25,0
 513               	.L24:
 514 004e C82B      		or r28,r24
 515               	.LVL39:
  99:Board/../Lib/I2C.h ****         I2C_SCL_POUT &= ~I2C_SCL_MASK;                     // Pull low SCL 
 516               		.loc 4 99 0
 517 0050 5898      		cbi 0xb,0
 518               	.LVL40:
 519               	.LVL41:
 520 0052 2150      		subi r18,1
 521 0054 3109      		sbc r19,__zero_reg__
 522 0056 00F4      		brcc .L25
 523               	.LBE116:
 100:Board/../Lib/I2C.h ****       }
 101:Board/../Lib/I2C.h **** 
 102:Board/../Lib/I2C.h ****       /* Send the acknowledge part */
 103:Board/../Lib/I2C.h ****       I2C_SDA_POUT &= ~I2C_SDA_MASK; // Pull low SDA
 524               		.loc 4 103 0
 525 0058 5998      		cbi 0xb,1
 104:Board/../Lib/I2C.h ****       I2C_SDA_DDR  |=  I2C_SDA_MASK; // Set it as output
 526               		.loc 4 104 0
 527 005a 519A      		sbi 0xa,1
 105:Board/../Lib/I2C.h ****       I2C_SCL_POUT |=  I2C_SCL_MASK; // Pull high SCL
 528               		.loc 4 105 0
 529 005c 589A      		sbi 0xb,0
 106:Board/../Lib/I2C.h ****       I2C_SCL_POUT &= ~I2C_SCL_MASK; // Pull low SCL
 530               		.loc 4 106 0
 531 005e 5898      		cbi 0xb,0
 107:Board/../Lib/I2C.h ****       I2C_SDA_POUT |=  I2C_SDA_MASK; // Pull high SDA 
 532               		.loc 4 107 0
 533 0060 599A      		sbi 0xb,1
 534               	.LVL42:
 535               	.LBE115:
 536               	.LBE114:
  87:Board/PM.h    ****       return result;
 537               		.loc 5 87 0
 538 0062 0E94 0000 		call I2C_EndTransmission
 539               	.LVL43:
 540               	.LBE113:
 541               	.LBE112:
 542               	.LBB117:
 543               	.LBB118:
  68:Board/PM.h    ****       I2C_SendByte(PM_WR_MODE);
 544               		.loc 5 68 0
 545 0066 0E94 0000 		call I2C_StartTransmission
 546               	.LVL44:
  69:Board/PM.h    ****       I2C_SendByte(_subaddress);
 547               		.loc 5 69 0
 548 006a 88E7      		ldi r24,lo8(120)
 549 006c 0E94 0000 		call I2C_SendByte
 550               	.LVL45:
  70:Board/PM.h    ****       I2C_SendByte(_data);
 551               		.loc 5 70 0
 552 0070 812F      		mov r24,r17
 553 0072 0E94 0000 		call I2C_SendByte
 554               	.LVL46:
  71:Board/PM.h    ****       I2C_EndTransmission();
 555               		.loc 5 71 0
 556 0076 8D2F      		mov r24,r29
 557 0078 8095      		com r24
 558 007a 8C23      		and r24,r28
 559 007c 802B      		or r24,r16
 560               	.LVL47:
 561 007e 0E94 0000 		call I2C_SendByte
 562               	.LVL48:
 563               	/* epilogue start */
 564               	.LBE118:
 565               	.LBE117:
  96:Board/PM.h    ****       PM_WriteReg(_subaddress, (PM_ReadReg(_subaddress) & ~_mask) | _data);
  97:Board/PM.h    ****     }
 566               		.loc 5 97 0
 567 0082 DF91      		pop r29
 568               	.LVL49:
 569 0084 CF91      		pop r28
 570               	.LVL50:
 571 0086 1F91      		pop r17
 572               	.LVL51:
 573 0088 0F91      		pop r16
 574               	.LVL52:
 575               	.LBB120:
 576               	.LBB119:
  72:Board/PM.h    ****     }
 577               		.loc 5 72 0
 578 008a 0C94 0000 		jmp I2C_EndTransmission
 579               	.LVL53:
 580               	.LBE119:
 581               	.LBE120:
 582               		.cfi_endproc
 583               	.LFE139:
 585               		.section	.text.getParity,"ax",@progbits
 586               	.global	getParity
 588               	getParity:
 589               	.LFB115:
 120:Lib/SWD.h     ****       bool parity = 0;
 590               		.loc 3 120 0
 591               		.cfi_startproc
 592               	.LVL54:
 593 0000 CF92      		push r12
 594               	.LCFI12:
 595               		.cfi_def_cfa_offset 3
 596               		.cfi_offset 12, -2
 597 0002 DF92      		push r13
 598               	.LCFI13:
 599               		.cfi_def_cfa_offset 4
 600               		.cfi_offset 13, -3
 601 0004 EF92      		push r14
 602               	.LCFI14:
 603               		.cfi_def_cfa_offset 5
 604               		.cfi_offset 14, -4
 605 0006 FF92      		push r15
 606               	.LCFI15:
 607               		.cfi_def_cfa_offset 6
 608               		.cfi_offset 15, -5
 609               	/* prologue: function */
 610               	/* frame size = 0 */
 611               	/* stack size = 4 */
 612               	.L__stack_usage = 4
 613               	.LVL55:
 121:Lib/SWD.h     ****       while (n) {
 614               		.loc 3 121 0
 615 0008 20E0      		ldi r18,0
 123:Lib/SWD.h     ****         n = n & (n - 1);
 616               		.loc 3 123 0
 617 000a 31E0      		ldi r19,lo8(1)
 618               	.LVL56:
 619               	.L29:
 122:Lib/SWD.h     ****         parity = !parity; 
 620               		.loc 3 122 0
 621 000c 6115      		cp r22,__zero_reg__
 622 000e 7105      		cpc r23,__zero_reg__
 623 0010 8105      		cpc r24,__zero_reg__
 624 0012 9105      		cpc r25,__zero_reg__
 625 0014 01F0      		breq .L31
 123:Lib/SWD.h     ****         n = n & (n - 1);
 626               		.loc 3 123 0
 627 0016 2327      		eor r18,r19
 628               	.LVL57:
 124:Lib/SWD.h     ****       }    
 629               		.loc 3 124 0
 630 0018 6B01      		movw r12,r22
 631 001a 7C01      		movw r14,r24
 632 001c 41E0      		ldi r20,1
 633 001e C41A      		sub r12,r20
 634 0020 D108      		sbc r13,__zero_reg__
 635 0022 E108      		sbc r14,__zero_reg__
 636 0024 F108      		sbc r15,__zero_reg__
 637 0026 6C21      		and r22,r12
 638 0028 7D21      		and r23,r13
 639 002a 8E21      		and r24,r14
 640 002c 9F21      		and r25,r15
 641               	.LVL58:
 642 002e 00C0      		rjmp .L29
 643               	.L31:
 127:Lib/SWD.h     ****  
 644               		.loc 3 127 0
 645 0030 822F      		mov r24,r18
 646               	/* epilogue start */
 647 0032 FF90      		pop r15
 648 0034 EF90      		pop r14
 649 0036 DF90      		pop r13
 650 0038 CF90      		pop r12
 651 003a 0895      		ret
 652               		.cfi_endproc
 653               	.LFE115:
 655               		.section	.text.__vector_9,"ax",@progbits
 656               	.global	__vector_9
 658               	__vector_9:
 659               	.LFB163:
  98:Board/PM.h    **** 
  99:Board/PM.h    ****     /**
 100:Board/PM.h    ****      * Calculate the DVB value based on the target voltage and the ratio of the feedback resistors
 101:Board/PM.h    ****      */
 102:Board/PM.h    ****     static inline uint8_t PM_Calculate_DVBx(double _target_voltage, double _feedback_ratio) 
 103:Board/PM.h    ****     {
 104:Board/PM.h    ****       return (uint8_t) (((_target_voltage*1000)/(1+_feedback_ratio)-412.5)/12.5);
 105:Board/PM.h    ****     }
 106:Board/PM.h    **** 
 107:Board/PM.h    ****     /**
 108:Board/PM.h    ****      * Functions for adjusting the voltage
 109:Board/PM.h    ****      */
 110:Board/PM.h    ****     static inline void PM_Adjust_3V3      (double _target_voltage) { PM_UpdateReg(PM_CMD_DVB1A, PM_
 111:Board/PM.h    ****     static inline void PM_Adjust_AVDD_WR  (double _target_voltage) { PM_UpdateReg(PM_CMD_DVB2A, PM_
 112:Board/PM.h    ****     static inline void PM_Adjust_AVDD_WL  (double _target_voltage) { PM_UpdateReg(PM_CMD_DVB3A, PM_
 113:Board/PM.h    ****     static inline void PM_Adjust_AVDD_RRAM(double _target_voltage) { PM_UpdateReg(PM_CMD_DVB4A, PM_
 114:Board/PM.h    **** 
 115:Board/PM.h    ****     /**
 116:Board/PM.h    ****      * Functions for enabling the voltage
 117:Board/PM.h    ****      */
 118:Board/PM.h    ****     static inline void PM_Enable_3V3      (void) { PM_UpdateReg(PM_CMD_BUCK1, PM_BUCK_ENABLE_MASK, 
 119:Board/PM.h    ****     static inline void PM_Enable_AVDD_WR  (void) { PM_UpdateReg(PM_CMD_BUCK2, PM_BUCK_ENABLE_MASK, 
 120:Board/PM.h    ****     static inline void PM_Enable_AVDD_WL  (void) { PM_UpdateReg(PM_CMD_BUCK3, PM_BUCK_ENABLE_MASK, 
 121:Board/PM.h    ****     static inline void PM_Enable_AVDD_RRAM(void) { PM_UpdateReg(PM_CMD_BUCK4, PM_BUCK_ENABLE_MASK, 
 122:Board/PM.h    ****     static inline void PM_Enable_VDD      (void) { PM_UpdateReg(PM_CMD_LDOA , PM_LDO2_ENABLE_MASK, 
 123:Board/PM.h    ****     static inline void PM_Enable_AVDD_SRAM(void) { PM_UpdateReg(PM_CMD_LDOB , PM_LDO4_ENABLE_MASK, 
 124:Board/PM.h    **** 
 125:Board/PM.h    ****     /**
 126:Board/PM.h    ****      * Functions for disabling the voltage
 127:Board/PM.h    ****      */
 128:Board/PM.h    ****     static inline void PM_Disable_3V3      (void) { PM_UpdateReg(PM_CMD_BUCK1, 0, PM_BUCK_ENABLE_MA
 129:Board/PM.h    ****     static inline void PM_Disable_AVDD_WR  (void) { PM_UpdateReg(PM_CMD_BUCK2, 0, PM_BUCK_ENABLE_MA
 130:Board/PM.h    ****     static inline void PM_Disable_AVDD_WL  (void) { PM_UpdateReg(PM_CMD_BUCK3, 0, PM_BUCK_ENABLE_MA
 131:Board/PM.h    ****     static inline void PM_Disable_AVDD_RRAM(void) { PM_UpdateReg(PM_CMD_BUCK4, 0, PM_BUCK_ENABLE_MA
 132:Board/PM.h    ****     static inline void PM_Disable_VDD      (void) { PM_UpdateReg(PM_CMD_LDOA , 0, PM_LDO2_ENABLE_MA
 133:Board/PM.h    ****     static inline void PM_Disable_AVDD_SRAM(void) { PM_UpdateReg(PM_CMD_LDOB , 0, PM_LDO4_ENABLE_MA
 134:Board/PM.h    **** 
 135:Board/PM.h    ****     /**
 136:Board/PM.h    ****      * Special functions
 137:Board/PM.h    ****      */
 138:Board/PM.h    ****     static inline void PM_Reset(void)    { PM_WriteReg(PM_CMD_HRST , 0); }
 139:Board/PM.h    **** 
 140:Board/PM.h    ****     /**
 141:Board/PM.h    ****      * Interrupt functions 
 142:Board/PM.h    ****      */
 143:Board/PM.h    ****     static inline void PM_ClearIRQ(void) { PM_WriteReg(PM_CMD_CLIRQ, 0); }
 144:Board/PM.h    ****     static inline void PM_ReadStatus(void) { PM_ReadReg(PM_STATUS_IRQSTAT); }
 145:Board/PM.h    **** 
 146:Board/PM.h    ****     /**
 147:Board/PM.h    ****      *
 148:Board/PM.h    ****      */
 149:Board/PM.h    ****     static inline void PM_PowerUp(void)
 150:Board/PM.h    ****     {
 151:Board/PM.h    **** 
 152:Board/PM.h    ****       /* Adjust the voltages */
 153:Board/PM.h    ****       PM_Adjust_3V3(3.3);
 154:Board/PM.h    ****       PM_Adjust_AVDD_WL(3.6);
 155:Board/PM.h    ****       PM_Adjust_AVDD_WR(3.9);
 156:Board/PM.h    ****       PM_Adjust_AVDD_RRAM(1.1);
 157:Board/PM.h    **** 
 158:Board/PM.h    ****       /* Enable the low voltages first */
 159:Board/PM.h    ****       PM_Enable_VDD();
 160:Board/PM.h    ****       PM_Enable_AVDD_SRAM();
 161:Board/PM.h    ****       PM_Enable_AVDD_RRAM();
 162:Board/PM.h    **** 
 163:Board/PM.h    ****       /* Enable the high voltages second */
 164:Board/PM.h    ****       PM_Enable_3V3();
 165:Board/PM.h    ****       PM_Enable_AVDD_WR();
 166:Board/PM.h    ****       PM_Enable_AVDD_WL(); // ????
 167:Board/PM.h    ****     }
 168:Board/PM.h    ****     
 169:Board/PM.h    ****     /**
 170:Board/PM.h    ****      *
 171:Board/PM.h    ****      */
 172:Board/PM.h    ****     static inline void PM_PowerDown(void)
 173:Board/PM.h    ****     {
 174:Board/PM.h    ****       /* Disable the high voltages first */
 175:Board/PM.h    ****       PM_Disable_3V3();
 176:Board/PM.h    ****       PM_Disable_AVDD_WR();
 177:Board/PM.h    ****       PM_Disable_AVDD_WL();
 178:Board/PM.h    **** 
 179:Board/PM.h    ****       /* Disable the low voltages second */
 180:Board/PM.h    ****       PM_Disable_VDD();
 181:Board/PM.h    ****       PM_Disable_AVDD_SRAM();
 182:Board/PM.h    ****       PM_Disable_AVDD_RRAM();
 183:Board/PM.h    ****     }
 184:Board/PM.h    ****     
 185:Board/PM.h    ****     /**
 186:Board/PM.h    ****      *
 187:Board/PM.h    ****      */
 188:Board/PM.h    ****     static inline void PM_Init(void)
 189:Board/PM.h    ****     {
 190:Board/PM.h    ****       /* Set interrupt pins as input and enables the pull-up resistor*/
 191:Board/PM.h    ****       PM_WAKE_POUT  |=  PM_WAKE_MASK ; // Enable the pull up resistor
 192:Board/PM.h    ****       PM_WAKE_DDR   &= ~PM_WAKE_MASK ; // Set it as input
 193:Board/PM.h    ****       PM_NIRQ_POUT  |=  PM_NIRQ_MASK ; // Enable the pull up resistor
 194:Board/PM.h    ****       PM_NIRQ_DDR   &= ~PM_NIRQ_MASK ; // Set it as input
 195:Board/PM.h    ****       PM_PGOOD_POUT |=  PM_PGOOD_MASK; // Enable the pull up resistor
 196:Board/PM.h    ****       PM_PGOOD_DDR  &= ~PM_PGOOD_MASK; // Set it as input
 197:Board/PM.h    ****       PM_RSTO_POUT  |=  PM_RSTO_MASK; // Enable the pull up resistor
 198:Board/PM.h    ****       PM_RSTO_DDR   &= ~PM_RSTO_MASK; // Set it as input
 199:Board/PM.h    **** 
 200:Board/PM.h    ****       /* Enable Pin Change Interrupt Control Register */
 201:Board/PM.h    ****       PCICR |= _BV(PCIE0); // For PCINT[7:0]
 202:Board/PM.h    ****       PCICR |= _BV(PCIE1); // For PCINT[12:8]
 203:Board/PM.h    **** 
 204:Board/PM.h    ****       /* Choose Which Pins to Interrupt */
 205:Board/PM.h    ****       PM_WAKE_INT_REG  |= PM_WAKE_INT_MASK;
 206:Board/PM.h    ****       //PM_NIRQ_INT_REG  |= PM_NIRQ_INT_MASK;
 207:Board/PM.h    ****       //PM_PGOOD_INT_REG |= PM_PGOOD_INT_MASK;
 208:Board/PM.h    ****       //PM_RSTO_INT_REG  |= PM_RSTO_INT_MASK;
 209:Board/PM.h    ****     }
 210:Board/PM.h    ****     
 211:Board/PM.h    ****     /**
 212:Board/PM.h    ****      *
 213:Board/PM.h    ****      */
 214:Board/PM.h    ****     ISR(PCINT0_vect){
 660               		.loc 5 214 0
 661               		.cfi_startproc
 662 0000 1F92      		push r1
 663               	.LCFI16:
 664               		.cfi_def_cfa_offset 3
 665               		.cfi_offset 1, -2
 666 0002 0F92      		push r0
 667               	.LCFI17:
 668               		.cfi_def_cfa_offset 4
 669               		.cfi_offset 0, -3
 670 0004 0FB6      		in r0,__SREG__
 671 0006 0F92      		push r0
 672 0008 1124      		clr __zero_reg__
 673               	/* prologue: Signal */
 674               	/* frame size = 0 */
 675               	/* stack size = 3 */
 676               	.L__stack_usage = 3
 677               	/* epilogue start */
 215:Board/PM.h    ****     }
 678               		.loc 5 215 0
 679 000a 0F90      		pop r0
 680 000c 0FBE      		out __SREG__,r0
 681 000e 0F90      		pop r0
 682 0010 1F90      		pop r1
 683 0012 1895      		reti
 684               		.cfi_endproc
 685               	.LFE163:
 687               		.section	.text.__vector_10,"ax",@progbits
 688               	.global	__vector_10
 690               	__vector_10:
 691               	.LFB164:
 216:Board/PM.h    **** 
 217:Board/PM.h    ****     ISR(PCINT1_vect){
 692               		.loc 5 217 0
 693               		.cfi_startproc
 694 0000 1F92      		push r1
 695               	.LCFI18:
 696               		.cfi_def_cfa_offset 3
 697               		.cfi_offset 1, -2
 698 0002 0F92      		push r0
 699               	.LCFI19:
 700               		.cfi_def_cfa_offset 4
 701               		.cfi_offset 0, -3
 702 0004 0FB6      		in r0,__SREG__
 703 0006 0F92      		push r0
 704 0008 1124      		clr __zero_reg__
 705 000a 2F93      		push r18
 706               	.LCFI20:
 707               		.cfi_def_cfa_offset 5
 708               		.cfi_offset 18, -4
 709 000c 3F93      		push r19
 710               	.LCFI21:
 711               		.cfi_def_cfa_offset 6
 712               		.cfi_offset 19, -5
 713 000e 4F93      		push r20
 714               	.LCFI22:
 715               		.cfi_def_cfa_offset 7
 716               		.cfi_offset 20, -6
 717 0010 5F93      		push r21
 718               	.LCFI23:
 719               		.cfi_def_cfa_offset 8
 720               		.cfi_offset 21, -7
 721 0012 6F93      		push r22
 722               	.LCFI24:
 723               		.cfi_def_cfa_offset 9
 724               		.cfi_offset 22, -8
 725 0014 7F93      		push r23
 726               	.LCFI25:
 727               		.cfi_def_cfa_offset 10
 728               		.cfi_offset 23, -9
 729 0016 8F93      		push r24
 730               	.LCFI26:
 731               		.cfi_def_cfa_offset 11
 732               		.cfi_offset 24, -10
 733 0018 9F93      		push r25
 734               	.LCFI27:
 735               		.cfi_def_cfa_offset 12
 736               		.cfi_offset 25, -11
 737 001a AF93      		push r26
 738               	.LCFI28:
 739               		.cfi_def_cfa_offset 13
 740               		.cfi_offset 26, -12
 741 001c BF93      		push r27
 742               	.LCFI29:
 743               		.cfi_def_cfa_offset 14
 744               		.cfi_offset 27, -13
 745 001e EF93      		push r30
 746               	.LCFI30:
 747               		.cfi_def_cfa_offset 15
 748               		.cfi_offset 30, -14
 749 0020 FF93      		push r31
 750               	.LCFI31:
 751               		.cfi_def_cfa_offset 16
 752               		.cfi_offset 31, -15
 753               	/* prologue: Signal */
 754               	/* frame size = 0 */
 755               	/* stack size = 15 */
 756               	.L__stack_usage = 15
 218:Board/PM.h    ****       if(PM_WAKE_PIN & PM_WAKE_MASK)
 757               		.loc 5 218 0
 758 0022 329B      		sbis 0x6,2
 759 0024 00C0      		rjmp .L34
 760               	.LVL59:
 761               	.LBB165:
 762               	.LBB166:
 763               	.LBB167:
 110:Board/PM.h    ****     static inline void PM_Adjust_AVDD_WR  (double _target_voltage) { PM_UpdateReg(PM_CMD_DVB2A, PM_
 764               		.loc 5 110 0
 765 0026 4FE1      		ldi r20,lo8(31)
 766 0028 63E1      		ldi r22,lo8(19)
 767 002a 8AE0      		ldi r24,lo8(10)
 768 002c 0E94 0000 		call PM_UpdateReg
 769               	.LVL60:
 770               	.LBE167:
 771               	.LBE166:
 772               	.LBB168:
 773               	.LBB169:
 112:Board/PM.h    ****     static inline void PM_Adjust_AVDD_RRAM(double _target_voltage) { PM_UpdateReg(PM_CMD_DVB4A, PM_
 774               		.loc 5 112 0
 775 0030 4FE1      		ldi r20,lo8(31)
 776 0032 68E1      		ldi r22,lo8(24)
 777 0034 8EE0      		ldi r24,lo8(14)
 778 0036 0E94 0000 		call PM_UpdateReg
 779               	.LVL61:
 780               	.LBE169:
 781               	.LBE168:
 782               	.LBB170:
 783               	.LBB171:
 111:Board/PM.h    ****     static inline void PM_Adjust_AVDD_WL  (double _target_voltage) { PM_UpdateReg(PM_CMD_DVB3A, PM_
 784               		.loc 5 111 0
 785 003a 4FE1      		ldi r20,lo8(31)
 786 003c 6DE1      		ldi r22,lo8(29)
 787 003e 8CE0      		ldi r24,lo8(12)
 788 0040 0E94 0000 		call PM_UpdateReg
 789               	.LVL62:
 790               	.LBE171:
 791               	.LBE170:
 792               	.LBB172:
 793               	.LBB173:
 113:Board/PM.h    **** 
 794               		.loc 5 113 0
 795 0044 4FE1      		ldi r20,lo8(31)
 796 0046 6BE0      		ldi r22,lo8(11)
 797 0048 80E1      		ldi r24,lo8(16)
 798 004a 0E94 0000 		call PM_UpdateReg
 799               	.LVL63:
 800               	.LBE173:
 801               	.LBE172:
 802               	.LBB174:
 803               	.LBB175:
 122:Board/PM.h    ****     static inline void PM_Enable_AVDD_SRAM(void) { PM_UpdateReg(PM_CMD_LDOB , PM_LDO4_ENABLE_MASK, 
 804               		.loc 5 122 0
 805 004e 44E0      		ldi r20,lo8(4)
 806 0050 64E0      		ldi r22,lo8(4)
 807 0052 85E0      		ldi r24,lo8(5)
 808 0054 0E94 0000 		call PM_UpdateReg
 809               	.LVL64:
 810               	.LBE175:
 811               	.LBE174:
 812               	.LBB176:
 813               	.LBB177:
 123:Board/PM.h    **** 
 814               		.loc 5 123 0
 815 0058 44E0      		ldi r20,lo8(4)
 816 005a 64E0      		ldi r22,lo8(4)
 817 005c 86E0      		ldi r24,lo8(6)
 818 005e 0E94 0000 		call PM_UpdateReg
 819               	.LVL65:
 820               	.LBE177:
 821               	.LBE176:
 822               	.LBB178:
 823               	.LBB179:
 121:Board/PM.h    ****     static inline void PM_Enable_VDD      (void) { PM_UpdateReg(PM_CMD_LDOA , PM_LDO2_ENABLE_MASK, 
 824               		.loc 5 121 0
 825 0062 40E8      		ldi r20,lo8(-128)
 826 0064 60E8      		ldi r22,lo8(-128)
 827 0066 84E0      		ldi r24,lo8(4)
 828 0068 0E94 0000 		call PM_UpdateReg
 829               	.LVL66:
 830               	.LBE179:
 831               	.LBE178:
 832               	.LBB180:
 833               	.LBB181:
 118:Board/PM.h    ****     static inline void PM_Enable_AVDD_WR  (void) { PM_UpdateReg(PM_CMD_BUCK2, PM_BUCK_ENABLE_MASK, 
 834               		.loc 5 118 0
 835 006c 40E8      		ldi r20,lo8(-128)
 836 006e 60E8      		ldi r22,lo8(-128)
 837 0070 81E0      		ldi r24,lo8(1)
 838 0072 0E94 0000 		call PM_UpdateReg
 839               	.LVL67:
 840               	.LBE181:
 841               	.LBE180:
 842               	.LBB182:
 843               	.LBB183:
 119:Board/PM.h    ****     static inline void PM_Enable_AVDD_WL  (void) { PM_UpdateReg(PM_CMD_BUCK3, PM_BUCK_ENABLE_MASK, 
 844               		.loc 5 119 0
 845 0076 40E8      		ldi r20,lo8(-128)
 846 0078 60E8      		ldi r22,lo8(-128)
 847 007a 82E0      		ldi r24,lo8(2)
 848 007c 0E94 0000 		call PM_UpdateReg
 849               	.LVL68:
 850               	.LBE183:
 851               	.LBE182:
 852               	.LBB184:
 853               	.LBB185:
 120:Board/PM.h    ****     static inline void PM_Enable_AVDD_RRAM(void) { PM_UpdateReg(PM_CMD_BUCK4, PM_BUCK_ENABLE_MASK, 
 854               		.loc 5 120 0
 855 0080 40E8      		ldi r20,lo8(-128)
 856 0082 60E8      		ldi r22,lo8(-128)
 857 0084 83E0      		ldi r24,lo8(3)
 858 0086 00C0      		rjmp .L36
 859               	.L34:
 860               	.LBE185:
 861               	.LBE184:
 862               	.LBE165:
 219:Board/PM.h    ****         PM_PowerUp();
 220:Board/PM.h    ****       else if(!(PM_WAKE_PIN & PM_WAKE_MASK))
 863               		.loc 5 220 0
 864 0088 3299      		sbic 0x6,2
 865 008a 00C0      		rjmp .L33
 866               	.LBB186:
 867               	.LBB187:
 868               	.LBB188:
 128:Board/PM.h    ****     static inline void PM_Disable_AVDD_WR  (void) { PM_UpdateReg(PM_CMD_BUCK2, 0, PM_BUCK_ENABLE_MA
 869               		.loc 5 128 0
 870 008c 40E8      		ldi r20,lo8(-128)
 871 008e 60E0      		ldi r22,0
 872 0090 81E0      		ldi r24,lo8(1)
 873 0092 0E94 0000 		call PM_UpdateReg
 874               	.LVL69:
 875               	.LBE188:
 876               	.LBE187:
 877               	.LBB189:
 878               	.LBB190:
 129:Board/PM.h    ****     static inline void PM_Disable_AVDD_WL  (void) { PM_UpdateReg(PM_CMD_BUCK3, 0, PM_BUCK_ENABLE_MA
 879               		.loc 5 129 0
 880 0096 40E8      		ldi r20,lo8(-128)
 881 0098 60E0      		ldi r22,0
 882 009a 82E0      		ldi r24,lo8(2)
 883 009c 0E94 0000 		call PM_UpdateReg
 884               	.LVL70:
 885               	.LBE190:
 886               	.LBE189:
 887               	.LBB191:
 888               	.LBB192:
 130:Board/PM.h    ****     static inline void PM_Disable_AVDD_RRAM(void) { PM_UpdateReg(PM_CMD_BUCK4, 0, PM_BUCK_ENABLE_MA
 889               		.loc 5 130 0
 890 00a0 40E8      		ldi r20,lo8(-128)
 891 00a2 60E0      		ldi r22,0
 892 00a4 83E0      		ldi r24,lo8(3)
 893 00a6 0E94 0000 		call PM_UpdateReg
 894               	.LVL71:
 895               	.LBE192:
 896               	.LBE191:
 897               	.LBB193:
 898               	.LBB194:
 132:Board/PM.h    ****     static inline void PM_Disable_AVDD_SRAM(void) { PM_UpdateReg(PM_CMD_LDOB , 0, PM_LDO4_ENABLE_MA
 899               		.loc 5 132 0
 900 00aa 44E0      		ldi r20,lo8(4)
 901 00ac 60E0      		ldi r22,0
 902 00ae 85E0      		ldi r24,lo8(5)
 903 00b0 0E94 0000 		call PM_UpdateReg
 904               	.LVL72:
 905               	.LBE194:
 906               	.LBE193:
 907               	.LBB195:
 908               	.LBB196:
 133:Board/PM.h    **** 
 909               		.loc 5 133 0
 910 00b4 44E0      		ldi r20,lo8(4)
 911 00b6 60E0      		ldi r22,0
 912 00b8 86E0      		ldi r24,lo8(6)
 913 00ba 0E94 0000 		call PM_UpdateReg
 914               	.LVL73:
 915               	.LBE196:
 916               	.LBE195:
 917               	.LBB197:
 918               	.LBB198:
 131:Board/PM.h    ****     static inline void PM_Disable_VDD      (void) { PM_UpdateReg(PM_CMD_LDOA , 0, PM_LDO2_ENABLE_MA
 919               		.loc 5 131 0
 920 00be 40E8      		ldi r20,lo8(-128)
 921 00c0 60E0      		ldi r22,0
 922 00c2 84E0      		ldi r24,lo8(4)
 923               	.L36:
 924 00c4 0E94 0000 		call PM_UpdateReg
 925               	.LVL74:
 926               	.L33:
 927               	/* epilogue start */
 928               	.LBE198:
 929               	.LBE197:
 930               	.LBE186:
 221:Board/PM.h    ****         PM_PowerDown();
 222:Board/PM.h    ****     }
 931               		.loc 5 222 0
 932 00c8 FF91      		pop r31
 933 00ca EF91      		pop r30
 934 00cc BF91      		pop r27
 935 00ce AF91      		pop r26
 936 00d0 9F91      		pop r25
 937 00d2 8F91      		pop r24
 938 00d4 7F91      		pop r23
 939 00d6 6F91      		pop r22
 940 00d8 5F91      		pop r21
 941 00da 4F91      		pop r20
 942 00dc 3F91      		pop r19
 943 00de 2F91      		pop r18
 944 00e0 0F90      		pop r0
 945 00e2 0FBE      		out __SREG__,r0
 946 00e4 0F90      		pop r0
 947 00e6 1F90      		pop r1
 948 00e8 1895      		reti
 949               		.cfi_endproc
 950               	.LFE164:
 952               		.section	.text.SetupHardware,"ax",@progbits
 953               	.global	SetupHardware
 955               	SetupHardware:
 956               	.LFB170:
 957               		.file 6 "rram-usbserial.c"
   1:rram-usbserial.c **** /** \file
   2:rram-usbserial.c ****  *
   3:rram-usbserial.c ****  *  Main source file for the Arduino-usbserial project. This file contains the main tasks of
   4:rram-usbserial.c ****  *  the project and is responsible for the initial application hardware configuration.
   5:rram-usbserial.c ****  */
   6:rram-usbserial.c **** 
   7:rram-usbserial.c **** #include "rram-usbserial.h"
   8:rram-usbserial.c **** 
   9:rram-usbserial.c **** RingBuff_t USBtoUSART_Buffer;
  10:rram-usbserial.c **** RingBuff_t USARTtoUSB_Buffer;
  11:rram-usbserial.c **** 
  12:rram-usbserial.c **** /*
  13:rram-usbserial.c ****  *  LUFA CDC Class driver interface configuration and state information. This structure is
  14:rram-usbserial.c ****  *  passed to all CDC Class driver functions, so that multiple instances of the same class
  15:rram-usbserial.c ****  *  within a device can be differentiated from one another.
  16:rram-usbserial.c ****  */
  17:rram-usbserial.c **** USB_ClassInfo_CDC_Device_t VirtualSerial_CDC_Interface =
  18:rram-usbserial.c ****   {
  19:rram-usbserial.c ****     .Config = 
  20:rram-usbserial.c ****       {
  21:rram-usbserial.c ****         .ControlInterfaceNumber         = 0,
  22:rram-usbserial.c **** 
  23:rram-usbserial.c ****         .DataINEndpointNumber           = CDC_TX_EPNUM,
  24:rram-usbserial.c ****         .DataINEndpointSize             = CDC_TXRX_EPSIZE,
  25:rram-usbserial.c ****         .DataINEndpointDoubleBank       = false,
  26:rram-usbserial.c **** 
  27:rram-usbserial.c ****         .DataOUTEndpointNumber          = CDC_RX_EPNUM,
  28:rram-usbserial.c ****         .DataOUTEndpointSize            = CDC_TXRX_EPSIZE,
  29:rram-usbserial.c ****         .DataOUTEndpointDoubleBank      = false,
  30:rram-usbserial.c **** 
  31:rram-usbserial.c ****         .NotificationEndpointNumber     = CDC_NOTIFICATION_EPNUM,
  32:rram-usbserial.c ****         .NotificationEndpointSize       = CDC_NOTIFICATION_EPSIZE,
  33:rram-usbserial.c ****         .NotificationEndpointDoubleBank = false,
  34:rram-usbserial.c ****       },
  35:rram-usbserial.c ****   };
  36:rram-usbserial.c **** 
  37:rram-usbserial.c **** /** Main program entry point. This routine contains the overall program flow, including initial
  38:rram-usbserial.c ****  *  setup of all components and the main program loop.
  39:rram-usbserial.c ****  */
  40:rram-usbserial.c **** int main(void)
  41:rram-usbserial.c **** {
  42:rram-usbserial.c ****   SetupHardware();
  43:rram-usbserial.c ****   
  44:rram-usbserial.c ****   /* Infinite Loop */
  45:rram-usbserial.c ****   for (;;)
  46:rram-usbserial.c ****   {
  47:rram-usbserial.c ****     /* Only try to read in bytes from the CDC interface if the transmit buffer is not full */
  48:rram-usbserial.c ****     if (!(RingBuffer_IsFull(&USBtoUSART_Buffer)))
  49:rram-usbserial.c ****     {
  50:rram-usbserial.c ****       int16_t ReceivedByte = CDC_Device_ReceiveByte(&VirtualSerial_CDC_Interface);
  51:rram-usbserial.c **** 
  52:rram-usbserial.c ****       /* Read bytes from the USB OUT endpoint into the USART transmit buffer */
  53:rram-usbserial.c ****       if (!(ReceivedByte < 0)){
  54:rram-usbserial.c ****         RingBuffer_Insert(&USBtoUSART_Buffer, ReceivedByte);
  55:rram-usbserial.c ****         RingBuffer_Insert(&USARTtoUSB_Buffer, ReceivedByte);
  56:rram-usbserial.c ****       }
  57:rram-usbserial.c ****     }
  58:rram-usbserial.c ****     
  59:rram-usbserial.c ****     /* Check if the UART receive buffer flush timer has expired or the buffer is nearly full */
  60:rram-usbserial.c ****     RingBuff_Count_t BufferCount = RingBuffer_GetCount(&USARTtoUSB_Buffer);
  61:rram-usbserial.c ****     if ((TIFR0 & (1 << TOV0)) || (BufferCount > BUFFER_NEARLY_FULL))
  62:rram-usbserial.c ****     {
  63:rram-usbserial.c ****       TIFR0 |= (1 << TOV0);
  64:rram-usbserial.c **** 
  65:rram-usbserial.c ****       if (USARTtoUSB_Buffer.Count) {
  66:rram-usbserial.c ****         LEDs_TurnOnLEDs(LEDMASK_TX);
  67:rram-usbserial.c ****         TxLEDPulse = LEDS_PULSE_MS;
  68:rram-usbserial.c ****       }
  69:rram-usbserial.c **** 
  70:rram-usbserial.c ****       /* Read bytes from the USART receive buffer into the USB IN endpoint */
  71:rram-usbserial.c ****       while (BufferCount--)
  72:rram-usbserial.c ****         CDC_Device_SendByte(&VirtualSerial_CDC_Interface, RingBuffer_Remove(&USARTtoUSB_Buffer));
  73:rram-usbserial.c ****         
  74:rram-usbserial.c ****       /* Turn off TX LED(s) once the TX pulse period has elapsed */
  75:rram-usbserial.c ****       if (TxLEDPulse && !(--TxLEDPulse))
  76:rram-usbserial.c ****         LEDs_TurnOffLEDs(LEDMASK_TX);
  77:rram-usbserial.c **** 
  78:rram-usbserial.c ****       /* Turn off RX LED(s) once the RX pulse period has elapsed */
  79:rram-usbserial.c ****       if (RxLEDPulse && !(--RxLEDPulse))
  80:rram-usbserial.c ****         LEDs_TurnOffLEDs(LEDMASK_RX);
  81:rram-usbserial.c ****     }
  82:rram-usbserial.c ****     
  83:rram-usbserial.c ****     /* Load the next byte from the USART transmit buffer into the USART */
  84:rram-usbserial.c ****     if (!(RingBuffer_IsEmpty(&USBtoUSART_Buffer))) {
  85:rram-usbserial.c ****       Serial_TxByte(RingBuffer_Remove(&USBtoUSART_Buffer));
  86:rram-usbserial.c ****         
  87:rram-usbserial.c ****         LEDs_TurnOnLEDs(LEDMASK_RX);
  88:rram-usbserial.c ****       RxLEDPulse = LEDS_PULSE_MS;
  89:rram-usbserial.c ****     }
  90:rram-usbserial.c ****     
  91:rram-usbserial.c ****     CDC_Device_USBTask(&VirtualSerial_CDC_Interface);
  92:rram-usbserial.c ****     USB_USBTask();
  93:rram-usbserial.c ****   }
  94:rram-usbserial.c **** }
  95:rram-usbserial.c **** 
  96:rram-usbserial.c **** /** Configures the board hardware and chip peripherals for the demo's functionality. */
  97:rram-usbserial.c **** void SetupHardware(void)
  98:rram-usbserial.c **** {
 958               		.loc 6 98 0
 959               		.cfi_startproc
 960               	/* prologue: function */
 961               	/* frame size = 0 */
 962               	/* stack size = 0 */
 963               	.L__stack_usage = 0
  99:rram-usbserial.c ****   /* Disable watchdog if enabled by bootloader/fuses */
 100:rram-usbserial.c ****   MCUSR &= ~(1 << WDRF);
 964               		.loc 6 100 0
 965 0000 84B7      		in r24,0x34
 966 0002 877F      		andi r24,lo8(-9)
 967 0004 84BF      		out 0x34,r24
 968               	.LBB243:
 969               	.LBB244:
 970               		.file 7 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/av
   1:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** /* Copyright (c) 2002, 2004 Marek Michalkiewicz
   2:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    Copyright (c) 2005, 2006, 2007 Eric B. Weddington
   3:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    All rights reserved.
   4:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
   5:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    Redistribution and use in source and binary forms, with or without
   6:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    modification, are permitted provided that the following conditions are met:
   7:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
   8:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    * Redistributions of source code must retain the above copyright
   9:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer.
  10:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  11:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer in
  13:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****      the documentation and/or other materials provided with the
  14:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****      distribution.
  15:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  16:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    * Neither the name of the copyright holders nor the names of
  17:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****      contributors may be used to endorse or promote products derived
  18:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****      from this software without specific prior written permission.
  19:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  20:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  32:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** /* $Id$ */
  33:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  34:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** /*
  35:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    avr/wdt.h - macros for AVR watchdog timer
  36:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****  */
  37:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  38:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #ifndef _AVR_WDT_H_
  39:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #define _AVR_WDT_H_
  40:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  41:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #include <avr/io.h>
  42:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #include <stdint.h>
  43:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  44:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** /** \file */
  45:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** /** \defgroup avr_watchdog <avr/wdt.h>: Watchdog timer handling
  46:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     \code #include <avr/wdt.h> \endcode
  47:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  48:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     This header file declares the interface to some inline macros
  49:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     handling the watchdog timer present in many AVR devices.  In order
  50:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     to prevent the watchdog timer configuration from being
  51:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     accidentally altered by a crashing application, a special timed
  52:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     sequence is required in order to change it.  The macros within
  53:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     this header file handle the required sequence automatically
  54:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     before changing any value.  Interrupts will be disabled during
  55:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     the manipulation.
  56:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  57:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     \note Depending on the fuse configuration of the particular
  58:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     device, further restrictions might apply, in particular it might
  59:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     be disallowed to turn off the watchdog timer.
  60:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  61:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     Note that for newer devices (ATmega88 and newer, effectively any
  62:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     AVR that has the option to also generate interrupts), the watchdog
  63:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     timer remains active even after a system reset (except a power-on
  64:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     condition), using the fastest prescaler value (approximately 15
  65:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     ms).  It is therefore required to turn off the watchdog early
  66:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     during program startup, the datasheet recommends a sequence like
  67:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     the following:
  68:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  69:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     \code
  70:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     #include <stdint.h>
  71:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     #include <avr/wdt.h>
  72:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  73:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     uint8_t mcusr_mirror __attribute__ ((section (".noinit")));
  74:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  75:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     void get_mcusr(void) \
  76:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       __attribute__((naked)) \
  77:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       __attribute__((section(".init3")));
  78:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     void get_mcusr(void)
  79:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     {
  80:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       mcusr_mirror = MCUSR;
  81:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       MCUSR = 0;
  82:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       wdt_disable();
  83:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     }
  84:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     \endcode
  85:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  86:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     Saving the value of MCUSR in \c mcusr_mirror is only needed if the
  87:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     application later wants to examine the reset source, but in particular, 
  88:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     clearing the watchdog reset flag before disabling the
  89:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     watchdog is required, according to the datasheet.
  90:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** */
  91:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  92:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** /**
  93:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
  94:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    Reset the watchdog timer.  When the watchdog timer is enabled,
  95:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    a call to this instruction is required before the timer expires,
  96:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    otherwise a watchdog-initiated device reset will occur. 
  97:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** */
  98:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
  99:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #define wdt_reset() __asm__ __volatile__ ("wdr")
 100:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 101:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #ifndef __DOXYGEN__
 102:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 103:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #if defined(WDP3)
 104:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       _BV(WDP3)
 105:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #else
 106:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       0x00
 107:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #endif
 108:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 109:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #if defined(WDTCSR)
 110:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCSR
 111:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #elif defined(WDTCR)
 112:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCR
 113:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #else
 114:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDT
 115:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #endif
 116:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 117:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #if defined(WDTOE)
 118:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDTOE
 119:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #else
 120:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDCE
 121:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #endif
 122:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 123:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #endif	/* !__DOXYGEN__ */
 124:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 125:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 126:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** /**
 127:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
 128:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    Enable the watchdog timer, configuring it for expiry after
 129:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    \c timeout (which is a combination of the \c WDP0 through
 130:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    \c WDP2 bits to write into the \c WDTCR register; For those devices 
 131:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    that have a \c WDTCSR register, it uses the combination of the \c WDP0 
 132:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    through \c WDP3 bits).
 133:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 134:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    See also the symbolic constants \c WDTO_15MS et al.
 135:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** */
 136:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 137:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 138:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #if defined(__AVR_XMEGA__)
 139:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 140:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #if defined (WDT_CTRLA) && !defined(RAMPD)
 141:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 142:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 143:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** do { \
 144:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** uint8_t temp; \
 145:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 146:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"wdr"									"\n\t" \
 147:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"out %[ccp_reg], %[ioreg_cen_mask]"		"\n\t" \
 148:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"lds %[tmp], %[wdt_reg]"				"\n\t" \
 149:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"sbr %[tmp], %[wdt_enable_timeout]"		"\n\t" \
 150:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"sts %[wdt_reg], %[tmp]"				"\n\t" \
 151:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"1:lds %[tmp], %[wdt_status_reg]"		"\n\t" \
 152:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"sbrc %[tmp], %[wdt_syncbusy_bit]"		"\n\t" \
 153:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"rjmp 1b"								"\n\t" \
 154:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	: [tmp]					"=r" (temp) \
 155:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	: [ccp_reg]				"I"  (_SFR_IO_ADDR(CCP)), \
 156:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	  [ioreg_cen_mask]		"r"  ((uint8_t)CCP_IOREG_gc), \
 157:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	  [wdt_reg]				"n"  (_SFR_MEM_ADDR(WDT_CTRLA)), \
 158:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	  [wdt_enable_timeout]	"M"  (timeout), \
 159:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	  [wdt_status_reg]		"n"  (_SFR_MEM_ADDR(WDT_STATUS)), \
 160:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	  [wdt_syncbusy_bit]	"I"  (WDT_SYNCBUSY_bm) \
 161:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** ); \
 162:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** } while(0)
 163:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 164:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #define wdt_disable() \
 165:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** do { \
 166:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** uint8_t temp; \
 167:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 168:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"wdr"								"\n\t" \
 169:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 170:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"lds %[tmp], %[wdt_reg]"			"\n\t" \
 171:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"cbr %[tmp], %[timeout_mask]"       "\n\t" \
 172:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	"sts %[wdt_reg], %[tmp]"			"\n\t" \
 173:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : [tmp]            "=r" (temp) \
 174:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : [ccp_reg]        "I" (_SFR_IO_ADDR(CCP)),       \
 175:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [ioreg_cen_mask] "r" ((uint8_t)CCP_IOREG_gc),   \
 176:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [wdt_reg]        "n" (_SFR_MEM_ADDR(WDT_CTRLA)),\
 177:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [timeout_mask]   "I" (WDT_PERIOD_gm) \
 178:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** ); \
 179:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** } while(0)
 180:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 181:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #else // defined (WDT_CTRLA) && !defined(RAMPD)
 182:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 183:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** /*
 184:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    wdt_enable(timeout) for xmega devices
 185:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** ** write signature (CCP_IOREG_gc) that enables change of protected I/O
 186:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    registers to the CCP register
 187:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** ** At the same time,
 188:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    1) set WDT change enable (WDT_CEN_bm)
 189:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    2) enable WDT (WDT_ENABLE_bm)
 190:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    3) set timeout (timeout)
 191:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** ** Synchronization starts when ENABLE bit of WDT is set. So, wait till it
 192:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    finishes (SYNCBUSY of STATUS register is automatically cleared after the
 193:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****    sync is finished).
 194:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** */
 195:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 196:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** do { \
 197:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** uint8_t temp; \
 198:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** __asm__ __volatile__ (         \
 199:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"              "\n\t" \
 200:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"            "\n\t" \
 201:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]"     "\n\t" \
 202:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[wdt_enable_timeout]" "\n\t" \
 203:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "1:lds %[tmp], %[wdt_status_reg]"       "\n\t" \
 204:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "sbrc %[tmp], %[wdt_syncbusy_bit]"      "\n\t" \
 205:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "rjmp 1b"                               "\n\t" \
 206:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"             "\n\t" \
 207:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : [tmp]                "=r" (temp) \
 208:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : [rampd]              "I" (_SFR_IO_ADDR(RAMPD)),      \
 209:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [ccp_reg]            "I" (_SFR_IO_ADDR(CCP)),        \
 210:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [ioreg_cen_mask]     "r" ((uint8_t)CCP_IOREG_gc),     \
 211:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [wdt_reg]            "n" (_SFR_MEM_ADDR(WDT_CTRL)),   \
 212:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [wdt_enable_timeout] "r" ((uint8_t)(WDT_CEN_bm | WDT_ENABLE_bm | timeout)), \
 213:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [wdt_status_reg]     "n" (_SFR_MEM_ADDR(WDT_STATUS)), \
 214:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [wdt_syncbusy_bit]   "I" (WDT_SYNCBUSY_bm)            \
 215:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : "r0" \
 216:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** ); \
 217:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** } while(0)
 218:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 219:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #define wdt_disable() \
 220:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 221:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"          "\n\t" \
 222:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"        "\n\t" \
 223:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 224:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[disable_mask]"   "\n\t" \
 225:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"         "\n\t" \
 226:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : \
 227:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : [rampd]             "I" (_SFR_IO_ADDR(RAMPD)),    \
 228:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [ccp_reg]           "I" (_SFR_IO_ADDR(CCP)),      \
 229:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [ioreg_cen_mask]    "r" ((uint8_t)CCP_IOREG_gc),   \
 230:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [wdt_reg]           "n" (_SFR_MEM_ADDR(WDT_CTRL)), \
 231:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [disable_mask]      "r" ((uint8_t)((~WDT_ENABLE_bm) | WDT_CEN_bm)) \
 232:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : "r0" \
 233:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** );
 234:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 235:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #endif // defined (WDT_CTRLA) && !defined(RAMPD)
 236:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 237:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #elif defined(__AVR_TINY__)
 238:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 239:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #define wdt_enable(value) \
 240:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 241:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 242:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 243:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 244:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 245:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out %[WDTREG],%[WDVALUE]" "\n\t"  \
 246:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t"  \
 247:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : /* no outputs */  \
 248:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),  \
 249:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 250:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 251:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00) \
 252:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       | _BV(WDE) | (value & 0x07) )) \
 253:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : "r16" \
 254:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** )
 255:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 256:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #define wdt_disable() \
 257:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** do { \
 258:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** uint8_t temp_wd; \
 259:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 260:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 261:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 262:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 263:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 264:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "in  %[TEMP_WD],%[WDTREG]" "\n\t" \
 265:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "cbr %[TEMP_WD],%[WDVALUE]" "\n\t" \
 266:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out %[WDTREG],%[TEMP_WD]" "\n\t" \
 267:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t" \
 268:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : /*no output */ \
 269:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)), \
 270:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 271:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 272:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [TEMP_WD] "d" (temp_wd), \
 273:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****       [WDVALUE] "n" (1 << WDE) \
 274:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****     : "r16" \
 275:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** ); \
 276:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** }while(0)
 277:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 278:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #elif defined(CCP)
 279:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 280:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** static __inline__
 281:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 282:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 283:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** {
 284:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 285:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 286:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 287:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 288:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 289:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 290:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 291:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 292:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 293:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: /* no outputs */
 294:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 295:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 296:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 297:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 298:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 299:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: "r0"
 300:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			);
 301:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 302:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P (_WD_CONTROL_REG))
 303:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 304:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 305:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 306:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 307:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 308:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 309:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 310:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 311:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: /* no outputs */
 312:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 313:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 314:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 315:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 316:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 317:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: "r0"
 318:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			);
 319:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 320:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 321:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 322:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 323:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 324:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 325:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 326:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 327:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 328:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 329:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: /* no outputs */
 330:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 331:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 332:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 333:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 334:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 335:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: "r0"
 336:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			);
 337:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 338:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	else
 339:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****  	{
 340:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 341:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 342:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 343:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 344:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 345:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 346:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 347:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: /* no outputs */
 348:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 349:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 350:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 351:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 352:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 353:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			: "r0"
 354:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 			);
 355:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 356:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** }
 357:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 358:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** static __inline__
 359:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 360:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** void wdt_disable (void)
 361:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** {
 362:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 363:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 364:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 365:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 366:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 367:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 368:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 369:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 370:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 371:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 372:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 373:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 374:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: /*no output */
 375:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 376:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 377:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 378:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 379:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 380:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: "r0"
 381:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				);
 382:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 383:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P(_WD_CONTROL_REG))
 384:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 385:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 386:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 387:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 388:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 389:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 390:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 391:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 392:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 393:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 394:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 395:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: /*no output */
 396:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 397:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 398:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 399:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 400:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 401:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: "r0"
 402:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				);
 403:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 404:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 405:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 406:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 407:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 408:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 409:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 410:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 411:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 412:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 413:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 414:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 415:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 416:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: /*no output */
 417:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 418:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 419:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 420:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 421:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 422:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: "r0"
 423:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				);
 424:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 425:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	else
 426:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 427:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 428:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 429:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 430:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 431:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 432:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 433:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 434:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 435:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 436:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 437:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: /*no output */
 438:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 439:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 440:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 441:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 442:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 443:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: "r0"
 444:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				);
 445:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 446:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** }
 447:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 448:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** #else
 449:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 450:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** static __inline__
 451:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 452:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 453:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** {
 454:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 455:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 456:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 457:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 458:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 459:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 460:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out %0, %1" "\n\t"
 461:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 462:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out %0, %2" "\n \t"
 463:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: /* no outputs */
 464:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 465:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 466:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 467:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 468:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: "r0"
 469:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		);
 470:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 471:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	else
 472:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 473:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 474:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 475:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 476:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 477:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"sts %0, %1" "\n\t"
 478:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 479:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"sts %0, %2" "\n \t"
 480:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: /* no outputs */
 481:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 482:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 483:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 484:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 485:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: "r0"
 486:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		);
 487:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 488:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** }
 489:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 
 490:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** static __inline__
 491:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 492:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** void wdt_disable (void)
 493:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** {
 494:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 495:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 496:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 497:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 498:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__"    "\n\t"
 499:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"cli"                        "\n\t"
 500:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"wdr"                        "\n\t"
 501:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"in  %[TEMPREG],%[WDTREG]"   "\n\t"
 502:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"ori %[TEMPREG],%[WDCE_WDE]" "\n\t"
 503:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMPREG]"   "\n\t"
 504:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out %[WDTREG],__zero_reg__" "\n\t"
 505:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__"   "\n\t"
 506:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: [TEMPREG] "=d" (temp_reg)
 507:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: [WDTREG]  "I"  (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 508:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
 509:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 				: "r0"
 510:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		);
 511:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	}
 512:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	else
 513:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 	{
 514:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 515:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 971               		.loc 7 515 0
 972               	/* #APP */
 973               	 ;  515 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/avr
 974 0006 0FB6      		in __tmp_reg__,__SREG__
 975 0008 F894      		cli
 976 000a A895      		wdr
 977 000c 8091 6000 		lds r24,96
 978 0010 8861      		ori r24,24
 979 0012 8093 6000 		sts 96,r24
 980 0016 1092 6000 		sts 96,__zero_reg__
 981 001a 0FBE      		out __SREG__,__tmp_reg__
 982               		
 983               	 ;  0 "" 2
 984               	/* #NOAPP */
 985               	.LBE244:
 986               	.LBE243:
 101:rram-usbserial.c ****   wdt_disable();
 102:rram-usbserial.c **** 
 103:rram-usbserial.c ****   /* Change the clock frequency prescaler */
 104:rram-usbserial.c ****   CLKPR = (1<<7) | 16;
 987               		.loc 6 104 0
 988 001c 80E9      		ldi r24,lo8(-112)
 989 001e 8093 6100 		sts 97,r24
 990               	.LVL75:
 991               	.LBB245:
 992               	.LBB246:
  32:Lib/RingBuffer.h ****   {
 993               		.loc 1 32 0
 994 0022 2FB7      		in r18,__SREG__
 995               	.LVL76:
 996               	.LBB247:
 997               	.LBB248:
  50:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     return 1;
 998               		.loc 2 50 0
 999               	/* #APP */
 1000               	 ;  50 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util
 1001 0024 F894      		cli
 1002               	 ;  0 "" 2
 1003               	.LVL77:
 1004               	/* #NOAPP */
 1005               	.LBE248:
 1006               	.LBE247:
  34:Lib/RingBuffer.h ****     Buffer->Out = Buffer->Buffer;
 1007               		.loc 1 34 0
 1008 0026 80E0      		ldi r24,lo8(USBtoUSART_Buffer)
 1009 0028 90E0      		ldi r25,hi8(USBtoUSART_Buffer)
 1010 002a 9093 0000 		sts USBtoUSART_Buffer+128+1,r25
 1011 002e 8093 0000 		sts USBtoUSART_Buffer+128,r24
  35:Lib/RingBuffer.h ****   }
 1012               		.loc 1 35 0
 1013 0032 9093 0000 		sts USBtoUSART_Buffer+130+1,r25
 1014 0036 8093 0000 		sts USBtoUSART_Buffer+130,r24
 1015               	.LVL78:
 1016               	.LBB249:
 1017               	.LBB250:
  70:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 1018               		.loc 2 70 0
 1019 003a 2FBF      		out __SREG__,r18
 1020               		.loc 2 71 0
 1021               	.LVL79:
 1022               	.LBE250:
 1023               	.LBE249:
 1024               	.LBE246:
 1025               	.LBE245:
 1026               	.LBB251:
 1027               	.LBB252:
  32:Lib/RingBuffer.h ****   {
 1028               		.loc 1 32 0
 1029 003c 2FB7      		in r18,__SREG__
 1030               	.LVL80:
 1031               	.LBB253:
 1032               	.LBB254:
  50:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     return 1;
 1033               		.loc 2 50 0
 1034               	/* #APP */
 1035               	 ;  50 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util
 1036 003e F894      		cli
 1037               	 ;  0 "" 2
 1038               	.LVL81:
 1039               	/* #NOAPP */
 1040               	.LBE254:
 1041               	.LBE253:
  34:Lib/RingBuffer.h ****     Buffer->Out = Buffer->Buffer;
 1042               		.loc 1 34 0
 1043 0040 80E0      		ldi r24,lo8(USARTtoUSB_Buffer)
 1044 0042 90E0      		ldi r25,hi8(USARTtoUSB_Buffer)
 1045 0044 9093 0000 		sts USARTtoUSB_Buffer+128+1,r25
 1046 0048 8093 0000 		sts USARTtoUSB_Buffer+128,r24
  35:Lib/RingBuffer.h ****   }
 1047               		.loc 1 35 0
 1048 004c 9093 0000 		sts USARTtoUSB_Buffer+130+1,r25
 1049 0050 8093 0000 		sts USARTtoUSB_Buffer+130,r24
 1050               	.LVL82:
 1051               	.LBB255:
 1052               	.LBB256:
  70:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 1053               		.loc 2 70 0
 1054 0054 2FBF      		out __SREG__,r18
 1055               		.loc 2 71 0
 1056               	.LVL83:
 1057               	.LBE256:
 1058               	.LBE255:
 1059               	.LBE252:
 1060               	.LBE251:
 105:rram-usbserial.c **** 
 106:rram-usbserial.c ****   /* UART Buffer Initialization*/
 107:rram-usbserial.c ****   RingBuffer_InitBuffer(&USBtoUSART_Buffer);
 108:rram-usbserial.c ****   RingBuffer_InitBuffer(&USARTtoUSB_Buffer);
 109:rram-usbserial.c **** 
 110:rram-usbserial.c ****   /* Enable Global Interrupt */
 111:rram-usbserial.c ****   sei();
 1061               		.loc 6 111 0
 1062               	/* #APP */
 1063               	 ;  111 "rram-usbserial.c" 1
 1064 0056 7894      		sei
 1065               	 ;  0 "" 2
 1066               	/* #NOAPP */
 1067               	.LBB257:
 1068               	.LBB258:
 1069               		.file 8 "./Board/Dataflash.h"
   1:./Board/Dataflash.h **** /*
   2:./Board/Dataflash.h ****    Board Dataflash driver for the RRAM Testchip
   3:./Board/Dataflash.h **** */
   4:./Board/Dataflash.h **** 
   5:./Board/Dataflash.h **** #ifndef __DATAFLASH_RRAM_TESTCHIP_H__
   6:./Board/Dataflash.h **** #define __DATAFLASH_RRAM_TESTCHIP_H__
   7:./Board/Dataflash.h **** 
   8:./Board/Dataflash.h ****   /* Includes: */
   9:./Board/Dataflash.h ****     #include "AT45DB321E.h"
  10:./Board/Dataflash.h **** 
  11:./Board/Dataflash.h ****   /* Preprocessor Checks: */
  12:./Board/Dataflash.h ****     #if !defined(__INCLUDE_FROM_DATAFLASH_H)
  13:./Board/Dataflash.h ****       #error Do not include this file directly. Include LUFA/Drivers/Board/Dataflash.h instead.
  14:./Board/Dataflash.h ****     #endif
  15:./Board/Dataflash.h **** 
  16:./Board/Dataflash.h ****   /* Private Interface - For use in library only: */
  17:./Board/Dataflash.h ****   #if !defined(__DOXYGEN__)
  18:./Board/Dataflash.h ****     /* Macros: */
  19:./Board/Dataflash.h ****       #define DATAFLASH_CHIPCS_PORT  PORTB
  20:./Board/Dataflash.h ****       #define DATAFLASH_CHIPCS_DDR   DDRB
  21:./Board/Dataflash.h ****       #define DATAFLASH_CHIPCS_MASK  (1<<4)
  22:./Board/Dataflash.h ****   #endif
  23:./Board/Dataflash.h **** 
  24:./Board/Dataflash.h ****   /* Public Interface - May be used in end-application: */
  25:./Board/Dataflash.h ****     /* Macros: */
  26:./Board/Dataflash.h ****       #define DATAFLASH_TOTALCHIPS        1
  27:./Board/Dataflash.h ****       #define DATAFLASH_NO_CHIP           DATAFLASH_CHIPCS_MASK
  28:./Board/Dataflash.h ****       #define DATAFLASH_CHIP1             (DATAFLASH_CHIPCS_MASK ^ (1<<4))
  29:./Board/Dataflash.h ****       #define DATAFLASH_CHIP2             // TODO: Replace with mask to hold /CS of second Dataflas
  30:./Board/Dataflash.h ****       #define DATAFLASH_PAGE_SIZE         512
  31:./Board/Dataflash.h ****       #define DATAFLASH_PAGES             8192
  32:./Board/Dataflash.h ****       #define DATAFLASH_PAGE_ADDR_WIDTH   13
  33:./Board/Dataflash.h ****       #define DATAFLASH_OFFSET_ADDR_WIDTH  9 
  34:./Board/Dataflash.h **** 
  35:./Board/Dataflash.h ****     /* Inline Functions: */
  36:./Board/Dataflash.h ****       /** 
  37:./Board/Dataflash.h ****        *  Grasp the dataflash driver so that commands and data may be sent to an attached dataflash
  38:./Board/Dataflash.h ****        */
  39:./Board/Dataflash.h ****       static inline void Dataflash_Grasp(void)
  40:./Board/Dataflash.h ****       {
  41:./Board/Dataflash.h ****         DATAFLASH_CHIPCS_PORT |= DATAFLASH_CHIPCS_MASK; // Pull high CHIPCS (Deselect the flash by 
 1070               		.loc 8 41 0
 1071 0058 2C9A      		sbi 0x5,4
  42:./Board/Dataflash.h ****         DATAFLASH_CHIPCS_DDR  |= DATAFLASH_CHIPCS_MASK; // Set it as output
 1072               		.loc 8 42 0
 1073 005a 249A      		sbi 0x4,4
 1074               	.LBE258:
 1075               	.LBE257:
 1076               	.LBB259:
 1077               	.LBB260:
 1078               		.file 9 "Board/DAC.h"
   1:Board/DAC.h   **** /*
   2:Board/DAC.h   ****    Board DAC driver for the RRAM Testchip
   3:Board/DAC.h   **** */
   4:Board/DAC.h   **** 
   5:Board/DAC.h   **** #ifndef __DAC_RRAM_H__
   6:Board/DAC.h   **** #define __DAC_RRAM_H__
   7:Board/DAC.h   **** 
   8:Board/DAC.h   ****   /* Includes: */
   9:Board/DAC.h   ****     #include "DAC7612.h"
  10:Board/DAC.h   **** 
  11:Board/DAC.h   ****   /* Private Interface - For use in library only: */
  12:Board/DAC.h   ****   #if !defined(__DOXYGEN__)
  13:Board/DAC.h   ****     /* Macros: */
  14:Board/DAC.h   ****       #define DAC_CHIPCS_POUT    PORTB
  15:Board/DAC.h   ****       #define DAC_CHIPCS_DDR     DDRB
  16:Board/DAC.h   ****       #define DAC_CHIPCS_MASK    _BV(5)
  17:Board/DAC.h   ****       #define DAC_LOADDACS_POUT  PORTB
  18:Board/DAC.h   ****       #define DAC_LOADDACS_DDR   DDRB
  19:Board/DAC.h   ****       #define DAC_LOADDACS_MASK  _BV(6)
  20:Board/DAC.h   ****   #endif
  21:Board/DAC.h   **** 
  22:Board/DAC.h   ****   /* Public Interface - May be used in end-application: */
  23:Board/DAC.h   ****     /* Macros: */
  24:Board/DAC.h   ****       /** Mask for no dataflash chip selected. */
  25:Board/DAC.h   ****       #define DAC_NO_CHIP     DAC_CHIPCS_MASK
  26:Board/DAC.h   ****       #define DAC_CHIP1       (DAC_CHIPCS_MASK ^ _BV(5))
  27:Board/DAC.h   ****       #define DAC_PRECISION   12 // bits
  28:Board/DAC.h   ****       #define DAC_LEVELS      _BV(DAC_PRECISION)
  29:Board/DAC.h   ****       #define DAC_VCC         3300 // mV
  30:Board/DAC.h   **** 
  31:Board/DAC.h   ****     /* Inline Functions: */
  32:Board/DAC.h   ****       /** 
  33:Board/DAC.h   ****        *  For the selected DAC chip, set the _target DAC to the _mVolt  
  34:Board/DAC.h   ****        */
  35:Board/DAC.h   ****       static inline void DAC_Configure_DAC(uint8_t _chip_mask, uint8_t _target, uint16_t _mVolt) AT
  36:Board/DAC.h   ****       static inline void DAC_Configure_DAC(uint8_t _chip_mask, uint8_t _target, uint16_t _mVolt)
  37:Board/DAC.h   ****       {
  38:Board/DAC.h   ****         /* Convert from mV to the binary code */
  39:Board/DAC.h   ****         uint16_t value = _mVolt > DAC_VCC? DAC_LEVELS-1: (uint32_t)_mVolt*DAC_LEVELS/3300.0;
  40:Board/DAC.h   **** 
  41:Board/DAC.h   ****         /* Compose the 14-bit command */
  42:Board/DAC.h   ****         uint16_t _command = ((_target << DAC_PRECISION) + value) & 0x3FFF; // 14 bits in total
  43:Board/DAC.h   **** 
  44:Board/DAC.h   ****         /* Send the command */
  45:Board/DAC.h   ****         DAC_CHIPCS_POUT = (DAC_CHIPCS_POUT & ~DAC_CHIPCS_MASK) | _chip_mask;
  46:Board/DAC.h   ****         SPI_SendByte((_command >> 8) & 0xFF);
  47:Board/DAC.h   ****         SPI_SendByte((_command     ) & 0xFF);
  48:Board/DAC.h   ****         DAC_CHIPCS_POUT = (DAC_CHIPCS_POUT & ~DAC_CHIPCS_MASK) | DAC_NO_CHIP;
  49:Board/DAC.h   **** 
  50:Board/DAC.h   ****         /* Toggle LOADDAC to update the DAC output */
  51:Board/DAC.h   ****         DAC_LOADDACS_POUT ^= DAC_LOADDACS_MASK;
  52:Board/DAC.h   ****         DAC_LOADDACS_POUT ^= DAC_LOADDACS_MASK;
  53:Board/DAC.h   ****       }
  54:Board/DAC.h   **** 
  55:Board/DAC.h   ****       /**
  56:Board/DAC.h   ****        *  Grasp the DAC driver so that commands and data may be sent to an attached DAC IC.
  57:Board/DAC.h   ****        */
  58:Board/DAC.h   ****       static inline void DAC_Grasp(void)
  59:Board/DAC.h   ****       {
  60:Board/DAC.h   ****         DAC_CHIPCS_POUT   |=  DAC_CHIPCS_MASK  ; // Set the output value to 1 (Deselect the DAC by 
 1079               		.loc 9 60 0
 1080 005c 2D9A      		sbi 0x5,5
  61:Board/DAC.h   ****         DAC_CHIPCS_DDR    |=  DAC_CHIPCS_MASK  ; // Set it as an output
 1081               		.loc 9 61 0
 1082 005e 259A      		sbi 0x4,5
  62:Board/DAC.h   **** 
  63:Board/DAC.h   ****         DAC_LOADDACS_POUT |=  DAC_LOADDACS_MASK; // Set the output value to 1 (Don't load the DAC b
 1083               		.loc 9 63 0
 1084 0060 2E9A      		sbi 0x5,6
  64:Board/DAC.h   ****         DAC_LOADDACS_DDR  |=  DAC_LOADDACS_MASK; // Set it as an output
 1085               		.loc 9 64 0
 1086 0062 269A      		sbi 0x4,6
 1087               	.LBE260:
 1088               	.LBE259:
 1089               	.LBB261:
 1090               	.LBB262:
 1091               		.file 10 "Board/RRAM.h"
   1:Board/RRAM.h  **** /*
   2:Board/RRAM.h  ****    Board DAC driver for the RRAM Testchip
   3:Board/RRAM.h  **** */
   4:Board/RRAM.h  **** 
   5:Board/RRAM.h  **** #ifndef __RRAM_H__
   6:Board/RRAM.h  **** #define __RRAM_H__
   7:Board/RRAM.h  **** 
   8:Board/RRAM.h  ****   /* Includes: */
   9:Board/RRAM.h  **** 
  10:Board/RRAM.h  ****   /* Private Interface - For use in library only: */
  11:Board/RRAM.h  ****   #if !defined(__DOXYGEN__)
  12:Board/RRAM.h  ****     /* Macros: */
  13:Board/RRAM.h  ****       #define RRAM_NTRST_LINE_PORT PORTD
  14:Board/RRAM.h  ****       #define RRAM_NTRST_LINE_DDR  DDRD
  15:Board/RRAM.h  ****       #define RRAM_NTRST_LINE_MASK _BV(6)
  16:Board/RRAM.h  **** 
  17:Board/RRAM.h  ****       #define RRAM_NRST_LINE_PORT  PORTD
  18:Board/RRAM.h  ****       #define RRAM_NRST_LINE_DDR   DDRD
  19:Board/RRAM.h  ****       #define RRAM_NRST_LINE_MASK  _BV(7)
  20:Board/RRAM.h  **** 
  21:Board/RRAM.h  ****       #define RRAM_ROM_SIZE 131072 // 128KB
  22:Board/RRAM.h  ****       #define RRAM_RAM_SIZE 524288 // 512KB
  23:Board/RRAM.h  ****   #endif
  24:Board/RRAM.h  **** 
  25:Board/RRAM.h  ****   /* Public Interface - May be used in end-application: */
  26:Board/RRAM.h  ****     /* Macros: */
  27:Board/RRAM.h  **** 
  28:Board/RRAM.h  ****     /* Inline Functions: */
  29:Board/RRAM.h  ****       /**
  30:Board/RRAM.h  ****        *  Grasp the RRAM chip so that commands and data may be sent to an attached RRAM chip.
  31:Board/RRAM.h  ****        */
  32:Board/RRAM.h  ****       static inline void RRAM_Grasp(void)
  33:Board/RRAM.h  ****       {
  34:Board/RRAM.h  ****         RRAM_NRST_LINE_PORT  |=  RRAM_NRST_LINE_MASK ; // Pull high NRST
 1092               		.loc 10 34 0
 1093 0064 5F9A      		sbi 0xb,7
  35:Board/RRAM.h  ****         RRAM_NRST_LINE_DDR   |=  RRAM_NRST_LINE_MASK ; // Set it as output
 1094               		.loc 10 35 0
 1095 0066 579A      		sbi 0xa,7
  36:Board/RRAM.h  **** 
  37:Board/RRAM.h  ****         RRAM_NTRST_LINE_PORT |=  RRAM_NTRST_LINE_MASK; // Pull high NTRST
 1096               		.loc 10 37 0
 1097 0068 5E9A      		sbi 0xb,6
  38:Board/RRAM.h  ****         RRAM_NTRST_LINE_DDR  |=  RRAM_NTRST_LINE_MASK; // Set it as output 
 1098               		.loc 10 38 0
 1099 006a 569A      		sbi 0xa,6
 1100               	.LBE262:
 1101               	.LBE261:
 112:rram-usbserial.c **** 
 113:rram-usbserial.c ****   /* Grasp board components so we can control them */
 114:rram-usbserial.c ****   Dataflash_Grasp();
 115:rram-usbserial.c ****   DAC_Grasp();
 116:rram-usbserial.c ****   RRAM_Grasp();
 117:rram-usbserial.c **** 
 118:rram-usbserial.c ****   /* Protocol Initialization */
 119:rram-usbserial.c ****   USB_Init();
 1102               		.loc 6 119 0
 1103 006c 0E94 0000 		call USB_Init
 1104               	.LVL84:
 1105               	.LBB263:
 1106               	.LBB264:
 1107               		.file 11 "../../LUFA/Drivers/Peripheral/Serial.h"
   1:../../LUFA/Drivers/Peripheral/Serial.h **** /*
   2:../../LUFA/Drivers/Peripheral/Serial.h ****              LUFA Library
   3:../../LUFA/Drivers/Peripheral/Serial.h ****      Copyright (C) Dean Camera, 2010.
   4:../../LUFA/Drivers/Peripheral/Serial.h **** 
   5:../../LUFA/Drivers/Peripheral/Serial.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../LUFA/Drivers/Peripheral/Serial.h ****       www.fourwalledcubicle.com
   7:../../LUFA/Drivers/Peripheral/Serial.h **** */
   8:../../LUFA/Drivers/Peripheral/Serial.h **** 
   9:../../LUFA/Drivers/Peripheral/Serial.h **** /*
  10:../../LUFA/Drivers/Peripheral/Serial.h ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../LUFA/Drivers/Peripheral/Serial.h **** 
  12:../../LUFA/Drivers/Peripheral/Serial.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../LUFA/Drivers/Peripheral/Serial.h ****   software and its documentation for any purpose is hereby granted
  14:../../LUFA/Drivers/Peripheral/Serial.h ****   without fee, provided that the above copyright notice appear in
  15:../../LUFA/Drivers/Peripheral/Serial.h ****   all copies and that both that the copyright notice and this
  16:../../LUFA/Drivers/Peripheral/Serial.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../LUFA/Drivers/Peripheral/Serial.h ****   documentation, and that the name of the author not be used in
  18:../../LUFA/Drivers/Peripheral/Serial.h ****   advertising or publicity pertaining to distribution of the
  19:../../LUFA/Drivers/Peripheral/Serial.h ****   software without specific, written prior permission.
  20:../../LUFA/Drivers/Peripheral/Serial.h **** 
  21:../../LUFA/Drivers/Peripheral/Serial.h ****   The author disclaim all warranties with regard to this
  22:../../LUFA/Drivers/Peripheral/Serial.h ****   software, including all implied warranties of merchantability
  23:../../LUFA/Drivers/Peripheral/Serial.h ****   and fitness.  In no event shall the author be liable for any
  24:../../LUFA/Drivers/Peripheral/Serial.h ****   special, indirect or consequential damages or any damages
  25:../../LUFA/Drivers/Peripheral/Serial.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../LUFA/Drivers/Peripheral/Serial.h ****   in an action of contract, negligence or other tortious action,
  27:../../LUFA/Drivers/Peripheral/Serial.h ****   arising out of or in connection with the use or performance of
  28:../../LUFA/Drivers/Peripheral/Serial.h ****   this software.
  29:../../LUFA/Drivers/Peripheral/Serial.h **** */
  30:../../LUFA/Drivers/Peripheral/Serial.h **** 
  31:../../LUFA/Drivers/Peripheral/Serial.h **** /** \file
  32:../../LUFA/Drivers/Peripheral/Serial.h ****  *  \brief Master include file for the USART peripheral driver.
  33:../../LUFA/Drivers/Peripheral/Serial.h ****  *
  34:../../LUFA/Drivers/Peripheral/Serial.h ****  *  Driver for the USART subsystem on supported USB AVRs.
  35:../../LUFA/Drivers/Peripheral/Serial.h ****  */
  36:../../LUFA/Drivers/Peripheral/Serial.h **** 
  37:../../LUFA/Drivers/Peripheral/Serial.h **** /** \ingroup Group_PeripheralDrivers
  38:../../LUFA/Drivers/Peripheral/Serial.h ****  *  @defgroup Group_Serial Serial USART Driver - LUFA/Drivers/Peripheral/Serial.h
  39:../../LUFA/Drivers/Peripheral/Serial.h ****  *
  40:../../LUFA/Drivers/Peripheral/Serial.h ****  *  \section Sec_Dependencies Module Source Dependencies
  41:../../LUFA/Drivers/Peripheral/Serial.h ****  *  The following files must be built with any user project that uses this module:
  42:../../LUFA/Drivers/Peripheral/Serial.h ****  *    - LUFA/Drivers/Peripheral/Serial.c <i>(Makefile source module name: LUFA_SRC_SERIAL)</i>
  43:../../LUFA/Drivers/Peripheral/Serial.h ****  *
  44:../../LUFA/Drivers/Peripheral/Serial.h ****  *  \section Module Description
  45:../../LUFA/Drivers/Peripheral/Serial.h ****  *  Hardware serial USART driver. This module provides an easy to use driver for
  46:../../LUFA/Drivers/Peripheral/Serial.h ****  *  the setup of and transfer of data over the AVR's USART port.
  47:../../LUFA/Drivers/Peripheral/Serial.h ****  *
  48:../../LUFA/Drivers/Peripheral/Serial.h ****  *  @{
  49:../../LUFA/Drivers/Peripheral/Serial.h ****  */
  50:../../LUFA/Drivers/Peripheral/Serial.h **** 
  51:../../LUFA/Drivers/Peripheral/Serial.h **** #ifndef __SERIAL_H__
  52:../../LUFA/Drivers/Peripheral/Serial.h **** #define __SERIAL_H__
  53:../../LUFA/Drivers/Peripheral/Serial.h **** 
  54:../../LUFA/Drivers/Peripheral/Serial.h **** 	/* Includes: */
  55:../../LUFA/Drivers/Peripheral/Serial.h **** 		#include <avr/io.h>
  56:../../LUFA/Drivers/Peripheral/Serial.h **** 		#include <avr/pgmspace.h>
  57:../../LUFA/Drivers/Peripheral/Serial.h **** 		#include <stdbool.h>
  58:../../LUFA/Drivers/Peripheral/Serial.h **** 
  59:../../LUFA/Drivers/Peripheral/Serial.h **** 		#include "../../Common/Common.h"
  60:../../LUFA/Drivers/Peripheral/Serial.h **** 		#include "../Misc/TerminalCodes.h"
  61:../../LUFA/Drivers/Peripheral/Serial.h **** 
  62:../../LUFA/Drivers/Peripheral/Serial.h **** 	/* Enable C linkage for C++ Compilers: */
  63:../../LUFA/Drivers/Peripheral/Serial.h **** 		#if defined(__cplusplus)
  64:../../LUFA/Drivers/Peripheral/Serial.h **** 			extern "C" {
  65:../../LUFA/Drivers/Peripheral/Serial.h **** 		#endif
  66:../../LUFA/Drivers/Peripheral/Serial.h **** 
  67:../../LUFA/Drivers/Peripheral/Serial.h **** 	/* Public Interface - May be used in end-application: */
  68:../../LUFA/Drivers/Peripheral/Serial.h **** 		/* Macros: */
  69:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Macro for calculating the baud value from a given baud rate when the U2X (double speed) bit 
  70:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  not set.
  71:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
  72:../../LUFA/Drivers/Peripheral/Serial.h **** 			#define SERIAL_UBBRVAL(baud)    ((((F_CPU / 16) + (baud / 2)) / (baud)) - 1)
  73:../../LUFA/Drivers/Peripheral/Serial.h **** 
  74:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Macro for calculating the baud value from a given baud rate when the U2X (double speed) bit 
  75:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  set.
  76:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
  77:../../LUFA/Drivers/Peripheral/Serial.h **** 			#define SERIAL_2X_UBBRVAL(baud) ((((F_CPU / 8) + (baud / 2)) / (baud)) - 1)
  78:../../LUFA/Drivers/Peripheral/Serial.h **** 
  79:../../LUFA/Drivers/Peripheral/Serial.h **** 		/* Function Prototypes: */
  80:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Transmits a given string located in program space (FLASH) through the USART.
  81:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *
  82:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \param[in] FlashStringPtr  Pointer to a string located in program space.
  83:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
  84:../../LUFA/Drivers/Peripheral/Serial.h **** 			void Serial_TxString_P(const char* FlashStringPtr) ATTR_NON_NULL_PTR_ARG(1);
  85:../../LUFA/Drivers/Peripheral/Serial.h **** 
  86:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Transmits a given string located in SRAM memory through the USART.
  87:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *
  88:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \param[in] StringPtr  Pointer to a string located in SRAM space.
  89:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
  90:../../LUFA/Drivers/Peripheral/Serial.h **** 			void Serial_TxString(const char* StringPtr) ATTR_NON_NULL_PTR_ARG(1);
  91:../../LUFA/Drivers/Peripheral/Serial.h **** 
  92:../../LUFA/Drivers/Peripheral/Serial.h **** 		/* Inline Functions: */
  93:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Initializes the USART, ready for serial data transmission and reception. This initializes th
  94:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  standard 8-bit, no parity, 1 stop bit settings suitable for most applications.
  95:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *
  96:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \param[in] BaudRate     Serial baud rate, in bits per second.
  97:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \param[in] DoubleSpeed  Enables double speed mode when set, halving the sample time to doubl
  98:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
  99:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline void Serial_Init(const uint32_t BaudRate,
 100:../../LUFA/Drivers/Peripheral/Serial.h **** 			                               const bool DoubleSpeed)
 101:../../LUFA/Drivers/Peripheral/Serial.h **** 			{
 102:../../LUFA/Drivers/Peripheral/Serial.h **** 				UBRR1  = (DoubleSpeed ? SERIAL_2X_UBBRVAL(BaudRate) : SERIAL_UBBRVAL(BaudRate));
 1108               		.loc 11 102 0
 1109 0070 87E6      		ldi r24,lo8(103)
 1110 0072 90E0      		ldi r25,0
 1111 0074 9093 CD00 		sts 204+1,r25
 1112 0078 8093 CC00 		sts 204,r24
 103:../../LUFA/Drivers/Peripheral/Serial.h **** 
 104:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1C = ((1 << UCSZ11) | (1 << UCSZ10));
 1113               		.loc 11 104 0
 1114 007c 86E0      		ldi r24,lo8(6)
 1115 007e 8093 CA00 		sts 202,r24
 105:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1A = (DoubleSpeed ? (1 << U2X1) : 0);
 1116               		.loc 11 105 0
 1117 0082 1092 C800 		sts 200,__zero_reg__
 106:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1B = ((1 << TXEN1)  | (1 << RXEN1));
 1118               		.loc 11 106 0
 1119 0086 88E1      		ldi r24,lo8(24)
 1120 0088 8093 C900 		sts 201,r24
 107:../../LUFA/Drivers/Peripheral/Serial.h **** 
 108:../../LUFA/Drivers/Peripheral/Serial.h **** 				DDRD  |= (1 << 3);
 1121               		.loc 11 108 0
 1122 008c 539A      		sbi 0xa,3
 109:../../LUFA/Drivers/Peripheral/Serial.h **** 				PORTD |= (1 << 2);
 1123               		.loc 11 109 0
 1124 008e 5A9A      		sbi 0xb,2
 1125               	.LVL85:
 1126               	.LBE264:
 1127               	.LBE263:
 1128               	.LBB265:
 1129               	.LBB266:
 1130               		.file 12 "../../LUFA/Drivers/Board/../Peripheral/SPI.h"
   1:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** /*
   2:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****              LUFA Library
   3:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****      Copyright (C) Dean Camera, 2010.
   4:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
   5:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****       www.fourwalledcubicle.com
   7:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** */
   8:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
   9:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** /*
  10:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  12:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   software and its documentation for any purpose is hereby granted
  14:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   without fee, provided that the above copyright notice appear in
  15:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   all copies and that both that the copyright notice and this
  16:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   documentation, and that the name of the author not be used in
  18:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   advertising or publicity pertaining to distribution of the
  19:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   software without specific, written prior permission.
  20:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  21:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   The author disclaim all warranties with regard to this
  22:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   software, including all implied warranties of merchantability
  23:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   and fitness.  In no event shall the author be liable for any
  24:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   special, indirect or consequential damages or any damages
  25:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   in an action of contract, negligence or other tortious action,
  27:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   arising out of or in connection with the use or performance of
  28:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****   this software.
  29:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** */
  30:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  31:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** /** \file
  32:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *  \brief Master include file for the SPI peripheral driver.
  33:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *
  34:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *  Hardware SPI subsystem driver for the supported USB AVRs models.
  35:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  */
  36:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  37:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** /** \ingroup Group_PeripheralDrivers
  38:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *  @defgroup Group_SPI SPI Driver - LUFA/Drivers/Peripheral/SPI.h
  39:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *
  40:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *  \section Sec_Dependencies Module Source Dependencies
  41:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *  The following files must be built with any user project that uses this module:
  42:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *    - None
  43:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *
  44:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *  \section Module Description
  45:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *  Driver for the hardware SPI port available on most AVR models. This module provides
  46:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *  an easy to use driver for the setup of and transfer of data over the AVR's SPI port.
  47:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *
  48:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  *  @{
  49:../../LUFA/Drivers/Board/../Peripheral/SPI.h ****  */
  50:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  51:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** #ifndef __SPI_H__
  52:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** #define __SPI_H__
  53:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  54:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 	/* Includes: */
  55:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 		#include <stdbool.h>
  56:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  57:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 	/* Enable C linkage for C++ Compilers: */
  58:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 		#if defined(__cplusplus)
  59:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			extern "C" {
  60:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 		#endif
  61:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  62:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 	/* Private Interface - For use in library only: */
  63:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 	#if !defined(__DOXYGEN__)
  64:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 		/* Macros: */
  65:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_USE_DOUBLESPEED            (1 << SPE)
  66:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 	#endif
  67:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  68:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 	/* Public Interface - May be used in end-application: */
  69:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 		/* Macros: */
  70:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI prescaler mask for SPI_Init(). Divides the system clock by a factor of 2. */
  71:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SPEED_FCPU_DIV_2           SPI_USE_DOUBLESPEED
  72:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  73:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI prescaler mask for SPI_Init(). Divides the system clock by a factor of 4. */
  74:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SPEED_FCPU_DIV_4           0
  75:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  76:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI prescaler mask for SPI_Init(). Divides the system clock by a factor of 8. */
  77:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SPEED_FCPU_DIV_8           (SPI_USE_DOUBLESPEED | (1 << SPR0))
  78:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  79:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI prescaler mask for SPI_Init(). Divides the system clock by a factor of 16. */
  80:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SPEED_FCPU_DIV_16          (1 << SPR0)
  81:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  82:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI prescaler mask for SPI_Init(). Divides the system clock by a factor of 32. */
  83:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SPEED_FCPU_DIV_32          (SPI_USE_DOUBLESPEED | (1 << SPR1))
  84:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  85:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI prescaler mask for SPI_Init(). Divides the system clock by a factor of 64. */
  86:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SPEED_FCPU_DIV_64          (SPI_USE_DOUBLESPEED | (1 << SPR1) | (1 << SPR0))
  87:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  88:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI prescaler mask for SPI_Init(). Divides the system clock by a factor of 128. */
  89:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SPEED_FCPU_DIV_128         ((1 << SPR1) | (1 << SPR0))
  90:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  91:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI clock polarity mask for SPI_Init(). Indicates that the SCK should lead on the rising edg
  92:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SCK_LEAD_RISING            (0 << CPOL)
  93:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  94:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI clock polarity mask for SPI_Init(). Indicates that the SCK should lead on the falling ed
  95:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SCK_LEAD_FALLING           (1 << CPOL)
  96:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
  97:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI data sample mode mask for SPI_Init(). Indicates that the data should sampled on the lead
  98:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SAMPLE_LEADING             (0 << CPHA)
  99:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 100:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI data sample mode mask for SPI_Init(). Indicates that the data should be sampled on the t
 101:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_SAMPLE_TRAILING            (1 << CPHA)
 102:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 103:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI data order mask for SPI_Init(). Indicates that data should be shifted out MSB first. */
 104:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_ORDER_MSB_FIRST            (0 << DORD)
 105:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 106:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI data order mask for SPI_Init(). Indicates that data should be shifted out MSB first. */
 107:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_ORDER_LSB_FIRST            (1 << DORD)
 108:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 109:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI mode mask for SPI_Init(). Indicates that the SPI interface should be initialized into sl
 110:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_MODE_SLAVE                 (0 << MSTR)
 111:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 112:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** SPI mode mask for SPI_Init(). Indicates that the SPI interface should be initialized into ma
 113:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			#define SPI_MODE_MASTER                (1 << MSTR)
 114:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 115:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 		/* Inline Functions: */
 116:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** Initialises the SPI subsystem, ready for transfers. Must be called before calling any other
 117:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *  SPI routines.
 118:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *
 119:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *  \param[in] SPIOptions  SPI Options, a mask consisting of one of each of the SPI_SPEED_*,
 120:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *                         SPI_SCK_*, SPI_SAMPLE_*, SPI_ORDER_* and SPI_MODE_* masks.
 121:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 */
 122:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			static inline void SPI_Init(const uint8_t SPIOptions)
 123:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			{
 124:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				DDRB  |= ((1 << 1) | (1 << 2));
 1131               		.loc 12 124 0
 1132 0090 84B1      		in r24,0x4
 1133 0092 8660      		ori r24,lo8(6)
 1134 0094 84B9      		out 0x4,r24
 125:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				DDRB  &= ~((1 << 0) | (1 << 3));
 1135               		.loc 12 125 0
 1136 0096 84B1      		in r24,0x4
 1137 0098 867F      		andi r24,lo8(-10)
 1138 009a 84B9      		out 0x4,r24
 126:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				PORTB |= ((1 << 0) | (1 << 3));
 1139               		.loc 12 126 0
 1140 009c 85B1      		in r24,0x5
 1141 009e 8960      		ori r24,lo8(9)
 1142 00a0 85B9      		out 0x5,r24
 127:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 128:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				SPCR   = ((1 << SPE) | SPIOptions);
 1143               		.loc 12 128 0
 1144 00a2 8CE5      		ldi r24,lo8(92)
 1145 00a4 8CBD      		out 0x2c,r24
 129:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 130:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				if (SPIOptions & SPI_USE_DOUBLESPEED)
 131:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				  SPSR |= (1 << SPI2X);
 1146               		.loc 12 131 0
 1147 00a6 8DB5      		in r24,0x2d
 1148 00a8 8160      		ori r24,lo8(1)
 1149 00aa 8DBD      		out 0x2d,r24
 1150               	.LVL86:
 1151               	.LBE266:
 1152               	.LBE265:
 1153               	.LBB267:
 1154               	.LBB268:
 134:Lib/SWD.h     ****       SW_DIO_DDR  |=  SW_DIO_MASK; // Set it as an output
 1155               		.loc 3 134 0
 1156 00ac 469A      		sbi 0x8,6
 135:Lib/SWD.h     **** 
 1157               		.loc 3 135 0
 1158 00ae 3E9A      		sbi 0x7,6
 137:Lib/SWD.h     ****       SW_CLK_DDR  |=  SW_CLK_MASK; // Set it as an output
 1159               		.loc 3 137 0
 1160 00b0 479A      		sbi 0x8,7
 138:Lib/SWD.h     ****     }
 1161               		.loc 3 138 0
 1162 00b2 3F9A      		sbi 0x7,7
 1163               	.LBE268:
 1164               	.LBE267:
 120:rram-usbserial.c ****   Serial_Init(9600, false);
 121:rram-usbserial.c ****   SPI_Init(SPI_SPEED_FCPU_DIV_2 | SPI_ORDER_MSB_FIRST | SPI_SCK_LEAD_FALLING | SPI_SAMPLE_TRAILING 
 122:rram-usbserial.c ****   SW_Init();
 123:rram-usbserial.c **** 
 124:rram-usbserial.c ****   /* Start the flush timer so that overflows occur rapidly to push received bytes to the USB interf
 125:rram-usbserial.c ****   TCCR0B = (1 << CS02);
 1165               		.loc 6 125 0
 1166 00b4 84E0      		ldi r24,lo8(4)
 1167 00b6 85BD      		out 0x25,r24
 1168               	.LBB269:
 1169               	.LBB270:
 1170               		.file 13 "./Board/LEDs.h"
   1:./Board/LEDs.h **** /*
   2:./Board/LEDs.h ****    Board LEDs driver for the RRAM Testchip
   3:./Board/LEDs.h **** */
   4:./Board/LEDs.h **** 
   5:./Board/LEDs.h **** #ifndef __LEDS_RRAM_H__
   6:./Board/LEDs.h **** #define __LEDS_RRAM_H__
   7:./Board/LEDs.h **** 
   8:./Board/LEDs.h ****   /* Enable C linkage for C++ Compilers: */
   9:./Board/LEDs.h ****   #if defined(__cplusplus)
  10:./Board/LEDs.h ****     extern "C" {
  11:./Board/LEDs.h ****   #endif
  12:./Board/LEDs.h ****   
  13:./Board/LEDs.h ****   /* Preprocessor Checks: */
  14:./Board/LEDs.h ****   #if !defined(INCLUDE_FROM_LEDS_H)
  15:./Board/LEDs.h ****     #error Do not include this file directly. Include LUFA/Drivers/Board/LEDS.h instead.
  16:./Board/LEDs.h ****   #endif
  17:./Board/LEDs.h ****   
  18:./Board/LEDs.h ****   #define LEDS_PORT        PORTD
  19:./Board/LEDs.h ****   #define LEDS_DDR         DDRD
  20:./Board/LEDs.h ****   #define LEDMASK_TX       _BV(5)
  21:./Board/LEDs.h ****   #define LEDMASK_RX       _BV(4)
  22:./Board/LEDs.h ****   #define LEDS_ALL_LEDS    (LEDMASK_TX | LEDMASK_RX)
  23:./Board/LEDs.h ****   #define LEDS_NO_LEDS     ~LEDS_ALL_LEDS
  24:./Board/LEDs.h ****   #define LEDS_PULSE_MS    3
  25:./Board/LEDs.h ****   
  26:./Board/LEDs.h ****   /* Pulse generation counters to keep track of the number of milliseconds remaining for each pulse
  27:./Board/LEDs.h ****   uint8_t TxLEDPulse; /**< Milliseconds remaining for data Tx LED pulse */
  28:./Board/LEDs.h ****   uint8_t RxLEDPulse; /**< Milliseconds remaining for data Rx LED pulse */
  29:./Board/LEDs.h **** 
  30:./Board/LEDs.h ****   /* Inline Functions: */
  31:./Board/LEDs.h ****   #if !defined(__DOXYGEN__)
  32:./Board/LEDs.h ****   static inline void LEDs_Init(void)
  33:./Board/LEDs.h ****   {
  34:./Board/LEDs.h ****     LEDS_PORT |=  LEDS_ALL_LEDS; // Turn off all LEDs by default
 1171               		.loc 13 34 0
 1172 00b8 8BB1      		in r24,0xb
 1173 00ba 8063      		ori r24,lo8(48)
 1174 00bc 8BB9      		out 0xb,r24
  35:./Board/LEDs.h ****     LEDS_DDR  |=  LEDS_ALL_LEDS; // Set it as output
 1175               		.loc 13 35 0
 1176 00be 8AB1      		in r24,0xa
 1177 00c0 8063      		ori r24,lo8(48)
 1178 00c2 8AB9      		out 0xa,r24
 1179               	.LBE270:
 1180               	.LBE269:
 1181               	.LBB271:
 1182               	.LBB272:
 191:Board/PM.h    ****       PM_WAKE_DDR   &= ~PM_WAKE_MASK ; // Set it as input
 1183               		.loc 5 191 0
 1184 00c4 429A      		sbi 0x8,2
 192:Board/PM.h    ****       PM_NIRQ_POUT  |=  PM_NIRQ_MASK ; // Enable the pull up resistor
 1185               		.loc 5 192 0
 1186 00c6 3A98      		cbi 0x7,2
 193:Board/PM.h    ****       PM_NIRQ_DDR   &= ~PM_NIRQ_MASK ; // Set it as input
 1187               		.loc 5 193 0
 1188 00c8 449A      		sbi 0x8,4
 194:Board/PM.h    ****       PM_PGOOD_POUT |=  PM_PGOOD_MASK; // Enable the pull up resistor
 1189               		.loc 5 194 0
 1190 00ca 3C98      		cbi 0x7,4
 195:Board/PM.h    ****       PM_PGOOD_DDR  &= ~PM_PGOOD_MASK; // Set it as input
 1191               		.loc 5 195 0
 1192 00cc 459A      		sbi 0x8,5
 196:Board/PM.h    ****       PM_RSTO_POUT  |=  PM_RSTO_MASK; // Enable the pull up resistor
 1193               		.loc 5 196 0
 1194 00ce 3D98      		cbi 0x7,5
 197:Board/PM.h    ****       PM_RSTO_DDR   &= ~PM_RSTO_MASK; // Set it as input
 1195               		.loc 5 197 0
 1196 00d0 2F9A      		sbi 0x5,7
 198:Board/PM.h    **** 
 1197               		.loc 5 198 0
 1198 00d2 2798      		cbi 0x4,7
 201:Board/PM.h    ****       PCICR |= _BV(PCIE1); // For PCINT[12:8]
 1199               		.loc 5 201 0
 1200 00d4 8091 6800 		lds r24,104
 1201 00d8 8160      		ori r24,lo8(1)
 1202 00da 8093 6800 		sts 104,r24
 202:Board/PM.h    **** 
 1203               		.loc 5 202 0
 1204 00de 8091 6800 		lds r24,104
 1205 00e2 8260      		ori r24,lo8(2)
 1206 00e4 8093 6800 		sts 104,r24
 205:Board/PM.h    ****       //PM_NIRQ_INT_REG  |= PM_NIRQ_INT_MASK;
 1207               		.loc 5 205 0
 1208 00e8 8091 6C00 		lds r24,108
 1209 00ec 8860      		ori r24,lo8(8)
 1210 00ee 8093 6C00 		sts 108,r24
 1211               	.LVL87:
 1212               	.LBE272:
 1213               	.LBE271:
 1214               	.LBB273:
 1215               	.LBB274:
  45:Board/DAC.h   ****         SPI_SendByte((_command >> 8) & 0xFF);
 1216               		.loc 9 45 0
 1217 00f2 2D98      		cbi 0x5,5
 1218               	.LVL88:
 1219               	.LBB275:
 1220               	.LBB276:
 132:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				else
 133:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				  SPSR &= ~(1 << SPI2X);
 134:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			}
 135:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 136:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** Turns off the SPI driver, disabling and returning used hardware to their default configurati
 137:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			static inline void SPI_ShutDown(void)
 138:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			{
 139:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				DDRB  &= ~((1 << 1) | (1 << 2));
 140:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				PORTB &= ~((1 << 0) | (1 << 3));
 141:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 142:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				SPCR   = 0;
 143:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				SPSR   = 0;
 144:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			}
 145:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 146:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** Sends and receives a byte through the SPI interface, blocking until the transfer is complete
 147:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *
 148:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *  \param[in] Byte  Byte to send through the SPI interface.
 149:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *
 150:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *  \return Response byte from the attached SPI device.
 151:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 */
 152:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			static inline uint8_t SPI_TransferByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
 153:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			static inline uint8_t SPI_TransferByte(const uint8_t Byte)
 154:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			{
 155:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				SPDR = Byte;
 156:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				while (!(SPSR & (1 << SPIF)));
 157:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				return SPDR;
 158:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			}
 159:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 
 160:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			/** Sends a byte through the SPI interface, blocking until the transfer is complete. The respons
 161:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *  byte sent to from the attached SPI device is ignored.
 162:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *
 163:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 *  \param[in] Byte  Byte to send through the SPI interface.
 164:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			 */
 165:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			static inline void SPI_SendByte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
 166:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			static inline void SPI_SendByte(const uint8_t Byte)
 167:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 			{
 168:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				SPDR = Byte;
 1221               		.loc 12 168 0
 1222 00f4 83E2      		ldi r24,lo8(35)
 1223 00f6 8EBD      		out 0x2e,r24
 1224               	.L38:
 169:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				while (!(SPSR & (1 << SPIF)));
 1225               		.loc 12 169 0
 1226 00f8 0DB4      		in __tmp_reg__,0x2d
 1227 00fa 07FE      		sbrs __tmp_reg__,7
 1228 00fc 00C0      		rjmp .L38
 1229               	.LVL89:
 1230               	.LBE276:
 1231               	.LBE275:
 1232               	.LBB277:
 1233               	.LBB278:
 168:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				while (!(SPSR & (1 << SPIF)));
 1234               		.loc 12 168 0
 1235 00fe 82EA      		ldi r24,lo8(-94)
 1236 0100 8EBD      		out 0x2e,r24
 1237               	.L39:
 1238               		.loc 12 169 0
 1239 0102 0DB4      		in __tmp_reg__,0x2d
 1240 0104 07FE      		sbrs __tmp_reg__,7
 1241 0106 00C0      		rjmp .L39
 1242               	.LVL90:
 1243               	.LBE278:
 1244               	.LBE277:
  48:Board/DAC.h   **** 
 1245               		.loc 9 48 0
 1246 0108 2D9A      		sbi 0x5,5
  51:Board/DAC.h   ****         DAC_LOADDACS_POUT ^= DAC_LOADDACS_MASK;
 1247               		.loc 9 51 0
 1248 010a 95B1      		in r25,0x5
 1249 010c 80E4      		ldi r24,lo8(64)
 1250 010e 9827      		eor r25,r24
 1251 0110 95B9      		out 0x5,r25
  52:Board/DAC.h   ****       }
 1252               		.loc 9 52 0
 1253 0112 95B1      		in r25,0x5
 1254 0114 8927      		eor r24,r25
 1255 0116 85B9      		out 0x5,r24
 1256               	.LVL91:
 1257               	.LBE274:
 1258               	.LBE273:
 1259               	.LBB279:
 1260               	.LBB280:
  45:Board/DAC.h   ****         SPI_SendByte((_command >> 8) & 0xFF);
 1261               		.loc 9 45 0
 1262 0118 2D98      		cbi 0x5,5
 1263               	.LVL92:
 1264               	.LBB281:
 1265               	.LBB282:
 168:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				while (!(SPSR & (1 << SPIF)));
 1266               		.loc 12 168 0
 1267 011a 86E3      		ldi r24,lo8(54)
 1268 011c 8EBD      		out 0x2e,r24
 1269               	.L40:
 1270               		.loc 12 169 0
 1271 011e 0DB4      		in __tmp_reg__,0x2d
 1272 0120 07FE      		sbrs __tmp_reg__,7
 1273 0122 00C0      		rjmp .L40
 1274               	.LVL93:
 1275               	.LBE282:
 1276               	.LBE281:
 1277               	.LBB283:
 1278               	.LBB284:
 168:../../LUFA/Drivers/Board/../Peripheral/SPI.h **** 				while (!(SPSR & (1 << SPIF)));
 1279               		.loc 12 168 0
 1280 0124 8FE0      		ldi r24,lo8(15)
 1281 0126 8EBD      		out 0x2e,r24
 1282               	.L41:
 1283               		.loc 12 169 0
 1284 0128 0DB4      		in __tmp_reg__,0x2d
 1285 012a 07FE      		sbrs __tmp_reg__,7
 1286 012c 00C0      		rjmp .L41
 1287               	.LVL94:
 1288               	.LBE284:
 1289               	.LBE283:
  48:Board/DAC.h   **** 
 1290               		.loc 9 48 0
 1291 012e 2D9A      		sbi 0x5,5
  51:Board/DAC.h   ****         DAC_LOADDACS_POUT ^= DAC_LOADDACS_MASK;
 1292               		.loc 9 51 0
 1293 0130 95B1      		in r25,0x5
 1294 0132 80E4      		ldi r24,lo8(64)
 1295 0134 9827      		eor r25,r24
 1296 0136 95B9      		out 0x5,r25
  52:Board/DAC.h   ****       }
 1297               		.loc 9 52 0
 1298 0138 95B1      		in r25,0x5
 1299 013a 8927      		eor r24,r25
 1300 013c 85B9      		out 0x5,r24
 1301               	.LVL95:
 1302 013e 0895      		ret
 1303               	.LBE280:
 1304               	.LBE279:
 1305               		.cfi_endproc
 1306               	.LFE170:
 1308               		.section	.text.startup.main,"ax",@progbits
 1309               	.global	main
 1311               	main:
 1312               	.LFB169:
  41:rram-usbserial.c ****   SetupHardware();
 1313               		.loc 6 41 0
 1314               		.cfi_startproc
 1315               	/* prologue: function */
 1316               	/* frame size = 0 */
 1317               	/* stack size = 0 */
 1318               	.L__stack_usage = 0
  42:rram-usbserial.c ****   
 1319               		.loc 6 42 0
 1320 0000 0E94 0000 		call SetupHardware
 1321               	.LVL96:
 1322               	.LBB322:
  67:rram-usbserial.c ****       }
 1323               		.loc 6 67 0
 1324 0004 13E0      		ldi r17,lo8(3)
 1325               	.L61:
 1326               	.LVL97:
 1327               	.LBB323:
 1328               	.LBB324:
 1329               	.LBB325:
 1330               	.LBB326:
  57:Lib/RingBuffer.h ****   {
 1331               		.loc 1 57 0
 1332 0006 2FB7      		in r18,__SREG__
 1333               	.LVL98:
 1334               	.LBB327:
 1335               	.LBB328:
  50:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     return 1;
 1336               		.loc 2 50 0
 1337               	/* #APP */
 1338               	 ;  50 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util
 1339 0008 F894      		cli
 1340               	 ;  0 "" 2
 1341               	.LVL99:
 1342               	/* #NOAPP */
 1343               	.LBE328:
 1344               	.LBE327:
  59:Lib/RingBuffer.h ****   }
 1345               		.loc 1 59 0
 1346 000a 8091 0000 		lds r24,USBtoUSART_Buffer+132
 1347 000e 9091 0000 		lds r25,USBtoUSART_Buffer+132+1
 1348               	.LVL100:
 1349               	.LBB329:
 1350               	.LBB330:
  70:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 1351               		.loc 2 70 0
 1352 0012 2FBF      		out __SREG__,r18
 1353               		.loc 2 71 0
 1354               	.LVL101:
 1355               	.LBE330:
 1356               	.LBE329:
 1357               	.LBE326:
 1358               	.LBE325:
 1359               	.LBE324:
 1360               	.LBE323:
  48:rram-usbserial.c ****     {
 1361               		.loc 6 48 0
 1362 0014 8038      		cpi r24,-128
 1363 0016 9105      		cpc r25,__zero_reg__
 1364 0018 01F0      		breq .L48
 1365               	.LBB331:
  50:rram-usbserial.c **** 
 1366               		.loc 6 50 0
 1367 001a 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 1368 001c 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 1369 001e 0E94 0000 		call CDC_Device_ReceiveByte
 1370               	.LVL102:
 1371 0022 EC01      		movw r28,r24
 1372               	.LVL103:
  53:rram-usbserial.c ****         RingBuffer_Insert(&USBtoUSART_Buffer, ReceivedByte);
 1373               		.loc 6 53 0
 1374 0024 97FD      		sbrc r25,7
 1375 0026 00C0      		rjmp .L48
  54:rram-usbserial.c ****         RingBuffer_Insert(&USARTtoUSB_Buffer, ReceivedByte);
 1376               		.loc 6 54 0
 1377 0028 682F      		mov r22,r24
 1378 002a 80E0      		ldi r24,lo8(USBtoUSART_Buffer)
 1379 002c 90E0      		ldi r25,hi8(USBtoUSART_Buffer)
 1380               	.LVL104:
 1381 002e 0E94 0000 		call RingBuffer_Insert
 1382               	.LVL105:
  55:rram-usbserial.c ****       }
 1383               		.loc 6 55 0
 1384 0032 6C2F      		mov r22,r28
 1385 0034 80E0      		ldi r24,lo8(USARTtoUSB_Buffer)
 1386 0036 90E0      		ldi r25,hi8(USARTtoUSB_Buffer)
 1387 0038 0E94 0000 		call RingBuffer_Insert
 1388               	.LVL106:
 1389               	.L48:
 1390               	.LBE331:
 1391               	.LBB332:
 1392               	.LBB333:
 1393               	.LBB334:
  57:Lib/RingBuffer.h ****   {
 1394               		.loc 1 57 0
 1395 003c 8FB7      		in r24,__SREG__
 1396               	.LVL107:
 1397               	.LBB335:
 1398               	.LBB336:
  50:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     return 1;
 1399               		.loc 2 50 0
 1400               	/* #APP */
 1401               	 ;  50 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util
 1402 003e F894      		cli
 1403               	 ;  0 "" 2
 1404               	.LVL108:
 1405               	/* #NOAPP */
 1406               	.LBE336:
 1407               	.LBE335:
  59:Lib/RingBuffer.h ****   }
 1408               		.loc 1 59 0
 1409 0040 C091 0000 		lds r28,USARTtoUSB_Buffer+132
 1410 0044 D091 0000 		lds r29,USARTtoUSB_Buffer+132+1
 1411               	.LVL109:
 1412               	.LBB337:
 1413               	.LBB338:
  70:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 1414               		.loc 2 70 0
 1415 0048 8FBF      		out __SREG__,r24
 1416               		.loc 2 71 0
 1417               	.LVL110:
 1418               	.LBE338:
 1419               	.LBE337:
 1420               	.LBE334:
 1421               	.LBE333:
 1422               	.LBE332:
  61:rram-usbserial.c ****     {
 1423               		.loc 6 61 0
 1424 004a A899      		sbic 0x15,0
 1425 004c 00C0      		rjmp .L50
  61:rram-usbserial.c ****     {
 1426               		.loc 6 61 0 is_stmt 0 discriminator 1
 1427 004e C136      		cpi r28,97
 1428 0050 D105      		cpc r29,__zero_reg__
 1429 0052 00F0      		brlo .L51
 1430               	.L50:
  63:rram-usbserial.c **** 
 1431               		.loc 6 63 0 is_stmt 1
 1432 0054 A89A      		sbi 0x15,0
  65:rram-usbserial.c ****         LEDs_TurnOnLEDs(LEDMASK_TX);
 1433               		.loc 6 65 0
 1434 0056 8091 0000 		lds r24,USARTtoUSB_Buffer+132
 1435 005a 9091 0000 		lds r25,USARTtoUSB_Buffer+132+1
 1436 005e 892B      		or r24,r25
 1437 0060 01F0      		breq .L53
 1438               	.LVL111:
 1439               	.LBB339:
 1440               	.LBB340:
  36:./Board/LEDs.h ****   }
  37:./Board/LEDs.h ****   
  38:./Board/LEDs.h ****   static inline void LEDs_ShutDown(void)
  39:./Board/LEDs.h ****   {
  40:./Board/LEDs.h ****     LEDS_PORT |=  LEDS_ALL_LEDS; // Turn off all LEDs after shutdown
  41:./Board/LEDs.h ****     LEDS_DDR  &= ~LEDS_ALL_LEDS; // Set it as input
  42:./Board/LEDs.h ****   }
  43:./Board/LEDs.h ****   
  44:./Board/LEDs.h ****   static inline void LEDs_TurnOnLEDs(const uint8_t LEDMask)
  45:./Board/LEDs.h ****   {
  46:./Board/LEDs.h ****     LEDS_PORT &= ~LEDMask;
 1441               		.loc 13 46 0
 1442 0062 5D98      		cbi 0xb,5
 1443               	.LVL112:
 1444               	.LBE340:
 1445               	.LBE339:
  67:rram-usbserial.c ****       }
 1446               		.loc 6 67 0
 1447 0064 1093 0000 		sts TxLEDPulse,r17
 1448               	.L53:
 1449               	.LVL113:
  71:rram-usbserial.c ****         CDC_Device_SendByte(&VirtualSerial_CDC_Interface, RingBuffer_Remove(&USARTtoUSB_Buffer));
 1450               		.loc 6 71 0
 1451 0068 2097      		sbiw r28,0
 1452 006a 01F0      		breq .L73
  72:rram-usbserial.c ****         
 1453               		.loc 6 72 0
 1454 006c 80E0      		ldi r24,lo8(USARTtoUSB_Buffer)
 1455 006e 90E0      		ldi r25,hi8(USARTtoUSB_Buffer)
 1456 0070 0E94 0000 		call RingBuffer_Remove
 1457               	.LVL114:
 1458 0074 682F      		mov r22,r24
 1459 0076 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 1460 0078 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 1461 007a 0E94 0000 		call CDC_Device_SendByte
 1462               	.LVL115:
 1463 007e 2197      		sbiw r28,1
 1464               	.LVL116:
 1465 0080 00C0      		rjmp .L53
 1466               	.LVL117:
 1467               	.L73:
  75:rram-usbserial.c ****         LEDs_TurnOffLEDs(LEDMASK_TX);
 1468               		.loc 6 75 0
 1469 0082 8091 0000 		lds r24,TxLEDPulse
 1470 0086 8823      		tst r24
 1471 0088 01F0      		breq .L56
  75:rram-usbserial.c ****         LEDs_TurnOffLEDs(LEDMASK_TX);
 1472               		.loc 6 75 0 is_stmt 0 discriminator 1
 1473 008a 8150      		subi r24,lo8(-(-1))
 1474 008c 8093 0000 		sts TxLEDPulse,r24
 1475 0090 8111      		cpse r24,__zero_reg__
 1476 0092 00C0      		rjmp .L56
 1477               	.LVL118:
 1478               	.LBB341:
 1479               	.LBB342:
  47:./Board/LEDs.h ****   }
  48:./Board/LEDs.h ****   
  49:./Board/LEDs.h ****   static inline void LEDs_TurnOffLEDs(const uint8_t LEDMask)
  50:./Board/LEDs.h ****   {
  51:./Board/LEDs.h ****     LEDS_PORT |=  LEDMask;
 1480               		.loc 13 51 0 is_stmt 1
 1481 0094 5D9A      		sbi 0xb,5
 1482               	.LVL119:
 1483               	.L56:
 1484               	.LBE342:
 1485               	.LBE341:
  79:rram-usbserial.c ****         LEDs_TurnOffLEDs(LEDMASK_RX);
 1486               		.loc 6 79 0
 1487 0096 8091 0000 		lds r24,RxLEDPulse
 1488 009a 8823      		tst r24
 1489 009c 01F0      		breq .L51
  79:rram-usbserial.c ****         LEDs_TurnOffLEDs(LEDMASK_RX);
 1490               		.loc 6 79 0 is_stmt 0 discriminator 1
 1491 009e 8150      		subi r24,lo8(-(-1))
 1492 00a0 8093 0000 		sts RxLEDPulse,r24
 1493 00a4 8111      		cpse r24,__zero_reg__
 1494 00a6 00C0      		rjmp .L51
 1495               	.LVL120:
 1496               	.LBB343:
 1497               	.LBB344:
 1498               		.loc 13 51 0 is_stmt 1
 1499 00a8 5C9A      		sbi 0xb,4
 1500               	.LVL121:
 1501               	.L51:
 1502               	.LBE344:
 1503               	.LBE343:
 1504               	.LBB345:
 1505               	.LBB346:
 1506               	.LBB347:
 1507               	.LBB348:
  57:Lib/RingBuffer.h ****   {
 1508               		.loc 1 57 0
 1509 00aa 2FB7      		in r18,__SREG__
 1510               	.LVL122:
 1511               	.LBB349:
 1512               	.LBB350:
  50:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     return 1;
 1513               		.loc 2 50 0
 1514               	/* #APP */
 1515               	 ;  50 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util
 1516 00ac F894      		cli
 1517               	 ;  0 "" 2
 1518               	.LVL123:
 1519               	/* #NOAPP */
 1520               	.LBE350:
 1521               	.LBE349:
  59:Lib/RingBuffer.h ****   }
 1522               		.loc 1 59 0
 1523 00ae 8091 0000 		lds r24,USBtoUSART_Buffer+132
 1524 00b2 9091 0000 		lds r25,USBtoUSART_Buffer+132+1
 1525               	.LVL124:
 1526               	.LBB351:
 1527               	.LBB352:
  70:/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 1528               		.loc 2 70 0
 1529 00b6 2FBF      		out __SREG__,r18
 1530               		.loc 2 71 0
 1531               	.LVL125:
 1532               	.LBE352:
 1533               	.LBE351:
 1534               	.LBE348:
 1535               	.LBE347:
 1536               	.LBE346:
 1537               	.LBE345:
  84:rram-usbserial.c ****       Serial_TxByte(RingBuffer_Remove(&USBtoUSART_Buffer));
 1538               		.loc 6 84 0
 1539 00b8 892B      		or r24,r25
 1540 00ba 01F0      		breq .L59
  85:rram-usbserial.c ****         
 1541               		.loc 6 85 0
 1542 00bc 80E0      		ldi r24,lo8(USBtoUSART_Buffer)
 1543 00be 90E0      		ldi r25,hi8(USBtoUSART_Buffer)
 1544 00c0 0E94 0000 		call RingBuffer_Remove
 1545               	.LVL126:
 1546               	.L60:
 1547               	.LBB353:
 1548               	.LBB354:
 110:../../LUFA/Drivers/Peripheral/Serial.h **** 			}
 111:../../LUFA/Drivers/Peripheral/Serial.h **** 
 112:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Turns off the USART driver, disabling and returning used hardware to their default configura
 113:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline void Serial_ShutDown(void)
 114:../../LUFA/Drivers/Peripheral/Serial.h **** 			{
 115:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1B = 0;
 116:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1A = 0;
 117:../../LUFA/Drivers/Peripheral/Serial.h **** 				UCSR1C = 0;
 118:../../LUFA/Drivers/Peripheral/Serial.h **** 
 119:../../LUFA/Drivers/Peripheral/Serial.h **** 				UBRR1  = 0;
 120:../../LUFA/Drivers/Peripheral/Serial.h **** 
 121:../../LUFA/Drivers/Peripheral/Serial.h **** 				DDRD  &= ~(1 << 3);
 122:../../LUFA/Drivers/Peripheral/Serial.h **** 				PORTD &= ~(1 << 2);
 123:../../LUFA/Drivers/Peripheral/Serial.h **** 			}
 124:../../LUFA/Drivers/Peripheral/Serial.h **** 
 125:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Indicates whether a character has been received through the USART.
 126:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *
 127:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \return Boolean true if a character has been received, false otherwise.
 128:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
 129:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline bool Serial_IsCharReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 130:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline bool Serial_IsCharReceived(void)
 131:../../LUFA/Drivers/Peripheral/Serial.h **** 			{
 132:../../LUFA/Drivers/Peripheral/Serial.h **** 				return ((UCSR1A & (1 << RXC1)) ? true : false);
 133:../../LUFA/Drivers/Peripheral/Serial.h **** 			}
 134:../../LUFA/Drivers/Peripheral/Serial.h **** 
 135:../../LUFA/Drivers/Peripheral/Serial.h **** 			/** Transmits a given byte through the USART.
 136:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *
 137:../../LUFA/Drivers/Peripheral/Serial.h **** 			 *  \param[in] DataByte  Byte to transmit through the USART.
 138:../../LUFA/Drivers/Peripheral/Serial.h **** 			 */
 139:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline void Serial_TxByte(const char DataByte) ATTR_ALWAYS_INLINE;
 140:../../LUFA/Drivers/Peripheral/Serial.h **** 			static inline void Serial_TxByte(const char DataByte)
 141:../../LUFA/Drivers/Peripheral/Serial.h **** 			{
 142:../../LUFA/Drivers/Peripheral/Serial.h **** 				while (!(UCSR1A & (1 << UDRE1)));
 1549               		.loc 11 142 0
 1550 00c4 9091 C800 		lds r25,200
 1551 00c8 95FF      		sbrs r25,5
 1552 00ca 00C0      		rjmp .L60
 143:../../LUFA/Drivers/Peripheral/Serial.h **** 				UDR1 = DataByte;
 1553               		.loc 11 143 0
 1554 00cc 8093 CE00 		sts 206,r24
 1555               	.LVL127:
 1556               	.LBE354:
 1557               	.LBE353:
 1558               	.LBB355:
 1559               	.LBB356:
  46:./Board/LEDs.h ****   }
 1560               		.loc 13 46 0
 1561 00d0 5C98      		cbi 0xb,4
 1562               	.LVL128:
 1563               	.LBE356:
 1564               	.LBE355:
  88:rram-usbserial.c ****     }
 1565               		.loc 6 88 0
 1566 00d2 1093 0000 		sts RxLEDPulse,r17
 1567               	.L59:
  91:rram-usbserial.c ****     USB_USBTask();
 1568               		.loc 6 91 0
 1569 00d6 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 1570 00d8 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 1571 00da 0E94 0000 		call CDC_Device_USBTask
 1572               	.LVL129:
  92:rram-usbserial.c ****   }
 1573               		.loc 6 92 0
 1574 00de 0E94 0000 		call USB_USBTask
 1575               	.LVL130:
 1576               	.LBE322:
  93:rram-usbserial.c **** }
 1577               		.loc 6 93 0
 1578 00e2 00C0      		rjmp .L61
 1579               		.cfi_endproc
 1580               	.LFE169:
 1582               		.section	.text.Write_Program,"ax",@progbits
 1583               	.global	Write_Program
 1585               	Write_Program:
 1586               	.LFB171:
 126:rram-usbserial.c ****   
 127:rram-usbserial.c ****   /* Hardware Initialization (Sequence matters here) */
 128:rram-usbserial.c ****   LEDs_Init();
 129:rram-usbserial.c ****   PM_Init();
 130:rram-usbserial.c **** 
 131:rram-usbserial.c ****   /* Initialize with some low voltages */
 132:rram-usbserial.c ****   DAC_Configure_DAC(DAC_CHIP1, LOAD_DAC_REG_A, 750); 
 133:rram-usbserial.c ****   DAC_Configure_DAC(DAC_CHIP1, LOAD_DAC_REG_B, 1250); 
 134:rram-usbserial.c **** 
 135:rram-usbserial.c ****   ///* Write the application binary */
 136:rram-usbserial.c ****   //Write_Program();
 137:rram-usbserial.c **** 
 138:rram-usbserial.c ****   ///* Protocols shutdown */
 139:rram-usbserial.c ****   //SPI_ShutDown();
 140:rram-usbserial.c ****   //SW_ShutDown();
 141:rram-usbserial.c **** 
 142:rram-usbserial.c ****   ///* Release board components so others can control them */
 143:rram-usbserial.c ****   //Dataflash_Release();
 144:rram-usbserial.c ****   //DAC_Release();
 145:rram-usbserial.c ****   //RRAM_Release();
 146:rram-usbserial.c **** }
 147:rram-usbserial.c **** 
 148:rram-usbserial.c **** /* Transfer the Program from Dataflash to RRAM testchip */
 149:rram-usbserial.c **** void Write_Program(void){
 1587               		.loc 6 149 0
 1588               		.cfi_startproc
 1589               	/* prologue: function */
 1590               	/* frame size = 0 */
 1591               	/* stack size = 0 */
 1592               	.L__stack_usage = 0
 1593               	.LBB368:
 1594               	.LBB369:
 192:Lib/SWD.h     **** 
 193:Lib/SWD.h     ****     /**
 194:Lib/SWD.h     ****      *
 195:Lib/SWD.h     ****      */
 196:Lib/SWD.h     ****     static inline uint32_t SW_Receive(uint8_t _bits)
 197:Lib/SWD.h     ****     {
 198:Lib/SWD.h     ****       uint32_t result = 0;
 199:Lib/SWD.h     **** 
 200:Lib/SWD.h     ****       /* Set DIO as input */
 201:Lib/SWD.h     ****       SW_DIO_POUT |=  SW_DIO_MASK; // Enable the pull-up resistor
 202:Lib/SWD.h     ****       SW_DIO_DDR  &= ~SW_DIO_MASK; // Set it as input
 203:Lib/SWD.h     **** 
 204:Lib/SWD.h     ****       /* Receive the byte part */
 205:Lib/SWD.h     ****       for(uint8_t i = 0; i<_bits; i++){
 206:Lib/SWD.h     ****         result |= (SW_DIO_PIN & SW_DIO_MASK)? _BV(i): 0; // Sample DIO 
 207:Lib/SWD.h     ****         SW_PulseClock(1);
 208:Lib/SWD.h     ****       }
 209:Lib/SWD.h     **** 
 210:Lib/SWD.h     ****       /* Set DIO as output */
 211:Lib/SWD.h     ****       SW_DIO_POUT |=  SW_DIO_MASK; // Pull up DIO
 212:Lib/SWD.h     ****       SW_DIO_DDR  |=  SW_DIO_MASK; // Set it as an output
 213:Lib/SWD.h     **** 
 214:Lib/SWD.h     ****       return result;
 215:Lib/SWD.h     ****     }
 216:Lib/SWD.h     **** 
 217:Lib/SWD.h     ****     /**
 218:Lib/SWD.h     ****      *
 219:Lib/SWD.h     ****      */
 220:Lib/SWD.h     ****     static inline uint32_t SW_SendPacket(uint8_t _APnDP, uint8_t _RnW, uint8_t _reg, uint32_t _data
 221:Lib/SWD.h     ****     {
 222:Lib/SWD.h     ****       uint8_t  request;  // 8-bit request (host->target)
 223:Lib/SWD.h     ****       uint8_t  ack;      // 3-bit acknowledge response (target->host)
 224:Lib/SWD.h     ****       uint32_t data = 0; // 32 bit wdata/rdata (host->target / target->host)
 225:Lib/SWD.h     ****       bool     parity;
 226:Lib/SWD.h     **** 
 227:Lib/SWD.h     ****       // Build the request
 228:Lib/SWD.h     ****       parity = getParity(_reg>>2) ^ getParity(_RnW) ^ getParity(_APnDP);
 229:Lib/SWD.h     ****       request = SW_REQ_START_MASK          | // bit 0
 230:Lib/SWD.h     ****                 _APnDP                     | // bit 1
 231:Lib/SWD.h     ****                 _RnW                       | // bit 2
 232:Lib/SWD.h     ****                 ((_reg>>2) << 3)           | // bit 3-4
 233:Lib/SWD.h     ****                 parity << 5                | // bit 5
 234:Lib/SWD.h     ****                 SW_REQ_STOP_MASK           | // bit 6
 235:Lib/SWD.h     ****                 SW_REQ_PARK_MASK           ; // bit 7
 236:Lib/SWD.h     ****                 
 237:Lib/SWD.h     ****       // Send the request and wait for the acknowledgement
 238:Lib/SWD.h     ****       ack = SW_DP_ACK_WAIT;
 239:Lib/SWD.h     ****       do {
 240:Lib/SWD.h     ****         SW_Send(request, 8); // Request
 241:Lib/SWD.h     ****         SW_PulseClock(1); // TM
 242:Lib/SWD.h     ****         if((ack = SW_Receive(3)) == SW_DP_ACK_WAIT) // Ack
 243:Lib/SWD.h     ****           SW_PulseClock(1); // TM
 244:Lib/SWD.h     ****       } while((ack = SW_DP_ACK_WAIT));
 245:Lib/SWD.h     **** 
 246:Lib/SWD.h     ****       // Read/Write
 247:Lib/SWD.h     ****       if(_RnW == SW_REQ_WRITE_MASK){
 248:Lib/SWD.h     ****         SW_PulseClock(1); // TM
 249:Lib/SWD.h     ****         SW_Send(          _data , 32); // Write the data
 250:Lib/SWD.h     ****         SW_Send(getParity(_data),  1); // Parity 
 251:Lib/SWD.h     ****       }
 252:Lib/SWD.h     ****       else{
 253:Lib/SWD.h     ****         data = SW_Receive(32); // Receive the data 
 254:Lib/SWD.h     ****         SW_PulseClock(1); // Parity
 255:Lib/SWD.h     ****         SW_PulseClock(1); // TM
 256:Lib/SWD.h     ****       }
 257:Lib/SWD.h     ****       return data;
 258:Lib/SWD.h     ****     }
 259:Lib/SWD.h     **** 
 260:Lib/SWD.h     ****     /**
 261:Lib/SWD.h     ****      *
 262:Lib/SWD.h     ****      */
 263:Lib/SWD.h     ****     static inline void SW_JTAGToSW(void)
 264:Lib/SWD.h     ****     {
 265:Lib/SWD.h     ****       SW_DIO_POUT |=  SW_DIO_MASK; // Pull up DIO
 1595               		.loc 3 265 0
 1596 0000 469A      		sbi 0x8,6
 266:Lib/SWD.h     ****       SW_PulseClock(50);
 1597               		.loc 3 266 0
 1598 0002 82E3      		ldi r24,lo8(50)
 1599 0004 0E94 0000 		call SW_PulseClock
 1600               	.LVL131:
 267:Lib/SWD.h     ****       SW_Send(SW_CMD_JTAG_TO_SWD, 16);
 1601               		.loc 3 267 0
 1602 0008 40E1      		ldi r20,lo8(16)
 1603 000a 6EE9      		ldi r22,lo8(-98)
 1604 000c 77EE      		ldi r23,lo8(-25)
 1605 000e 80E0      		ldi r24,0
 1606 0010 90E0      		ldi r25,0
 1607 0012 0E94 0000 		call SW_Send
 1608               	.LVL132:
 268:Lib/SWD.h     ****       SW_DIO_POUT |=  SW_DIO_MASK; // Pull up DIO
 1609               		.loc 3 268 0
 1610 0016 469A      		sbi 0x8,6
 269:Lib/SWD.h     ****       SW_PulseClock(50);
 1611               		.loc 3 269 0
 1612 0018 82E3      		ldi r24,lo8(50)
 1613 001a 0E94 0000 		call SW_PulseClock
 1614               	.LVL133:
 1615               	.LBE369:
 1616               	.LBE368:
 1617               	.LBB370:
 1618               	.LBB371:
 1619               	.LBB372:
 169:Lib/SWD.h     ****       SW_PulseClock(50);
 1620               		.loc 3 169 0
 1621 001e 469A      		sbi 0x8,6
 170:Lib/SWD.h     ****       SW_DIO_POUT &= ~SW_DIO_MASK;
 1622               		.loc 3 170 0
 1623 0020 82E3      		ldi r24,lo8(50)
 1624 0022 0E94 0000 		call SW_PulseClock
 1625               	.LVL134:
 171:Lib/SWD.h     ****       SW_PulseClock(50);
 1626               		.loc 3 171 0
 1627 0026 4698      		cbi 0x8,6
 172:Lib/SWD.h     ****     }
 1628               		.loc 3 172 0
 1629 0028 82E3      		ldi r24,lo8(50)
 1630 002a 0E94 0000 		call SW_PulseClock
 1631               	.LVL135:
 1632               	.LBE372:
 1633               	.LBE371:
 1634               	.LBB373:
 1635               	.LBB374:
 228:Lib/SWD.h     ****       request = SW_REQ_START_MASK          | // bit 0
 1636               		.loc 3 228 0
 1637 002e 60E0      		ldi r22,0
 1638 0030 70E0      		ldi r23,0
 1639 0032 CB01      		movw r24,r22
 1640 0034 0E94 0000 		call getParity
 1641               	.LVL136:
 1642 0038 64E0      		ldi r22,lo8(4)
 1643 003a 70E0      		ldi r23,0
 1644 003c 80E0      		ldi r24,0
 1645 003e 90E0      		ldi r25,0
 1646 0040 0E94 0000 		call getParity
 1647               	.LVL137:
 229:Lib/SWD.h     ****                 _APnDP                     | // bit 1
 1648               		.loc 3 229 0
 1649 0044 8295      		swap r24
 1650               	.LVL138:
 1651 0046 880F      		lsl r24
 1652 0048 807E      		andi r24,lo8(-32)
 1653 004a 8568      		ori r24,lo8(-123)
 1654               	.LVL139:
 240:Lib/SWD.h     ****         SW_PulseClock(1); // TM
 1655               		.loc 3 240 0
 1656 004c C82E      		mov r12,r24
 1657 004e D12C      		mov r13,__zero_reg__
 1658 0050 E12C      		mov r14,__zero_reg__
 1659 0052 F12C      		mov r15,__zero_reg__
 1660               	.LBB375:
 1661               	.LBB376:
 1662               	.LBB377:
 206:Lib/SWD.h     ****         SW_PulseClock(1);
 1663               		.loc 3 206 0
 1664 0054 01E0      		ldi r16,lo8(1)
 1665 0056 10E0      		ldi r17,0
 1666               	.LVL140:
 1667               	.L77:
 1668               	.LBE377:
 1669               	.LBE376:
 1670               	.LBE375:
 240:Lib/SWD.h     ****         SW_PulseClock(1); // TM
 1671               		.loc 3 240 0
 1672 0058 48E0      		ldi r20,lo8(8)
 1673 005a C701      		movw r24,r14
 1674 005c B601      		movw r22,r12
 1675 005e 0E94 0000 		call SW_Send
 1676               	.LVL141:
 241:Lib/SWD.h     ****         if((ack = SW_Receive(3)) == SW_DP_ACK_WAIT) // Ack
 1677               		.loc 3 241 0
 1678 0062 81E0      		ldi r24,lo8(1)
 1679 0064 0E94 0000 		call SW_PulseClock
 1680               	.LVL142:
 1681               	.LBB380:
 1682               	.LBB379:
 201:Lib/SWD.h     ****       SW_DIO_DDR  &= ~SW_DIO_MASK; // Set it as input
 1683               		.loc 3 201 0
 1684 0068 469A      		sbi 0x8,6
 202:Lib/SWD.h     **** 
 1685               		.loc 3 202 0
 1686 006a 3E98      		cbi 0x7,6
 1687               	.LVL143:
 1688 006c C0E0      		ldi r28,0
 1689 006e D0E0      		ldi r29,0
 198:Lib/SWD.h     **** 
 1690               		.loc 3 198 0
 1691 0070 812C      		mov r8,__zero_reg__
 1692 0072 912C      		mov r9,__zero_reg__
 1693 0074 5401      		movw r10,r8
 1694               	.LVL144:
 1695               	.L76:
 1696               	.LBB378:
 206:Lib/SWD.h     ****         SW_PulseClock(1);
 1697               		.loc 3 206 0
 1698 0076 369B      		sbis 0x6,6
 1699 0078 00C0      		rjmp .L79
 1700 007a C801      		movw r24,r16
 1701 007c 0C2E      		mov r0,r28
 1702 007e 00C0      		rjmp 2f
 1703               		1:
 1704 0080 880F      		lsl r24
 1705 0082 991F      		rol r25
 1706               		2:
 1707 0084 0A94      		dec r0
 1708 0086 02F4      		brpl 1b
 1709 0088 00C0      		rjmp .L75
 1710               	.L79:
 1711 008a 80E0      		ldi r24,0
 1712 008c 90E0      		ldi r25,0
 1713               	.L75:
 1714 008e 092E      		mov __tmp_reg__,r25
 1715 0090 000C      		lsl r0
 1716 0092 AA0B      		sbc r26,r26
 1717 0094 BB0B      		sbc r27,r27
 1718 0096 882A      		or r8,r24
 1719 0098 992A      		or r9,r25
 1720 009a AA2A      		or r10,r26
 1721 009c BB2A      		or r11,r27
 1722               	.LVL145:
 207:Lib/SWD.h     ****       }
 1723               		.loc 3 207 0
 1724 009e 81E0      		ldi r24,lo8(1)
 1725 00a0 0E94 0000 		call SW_PulseClock
 1726               	.LVL146:
 1727 00a4 2196      		adiw r28,1
 1728               	.LVL147:
 205:Lib/SWD.h     ****         result |= (SW_DIO_PIN & SW_DIO_MASK)? _BV(i): 0; // Sample DIO 
 1729               		.loc 3 205 0
 1730 00a6 C330      		cpi r28,3
 1731 00a8 D105      		cpc r29,__zero_reg__
 1732 00aa 01F4      		brne .L76
 1733               	.LBE378:
 211:Lib/SWD.h     ****       SW_DIO_DDR  |=  SW_DIO_MASK; // Set it as an output
 1734               		.loc 3 211 0
 1735 00ac 469A      		sbi 0x8,6
 212:Lib/SWD.h     **** 
 1736               		.loc 3 212 0
 1737 00ae 3E9A      		sbi 0x7,6
 1738               	.LVL148:
 1739               	.LBE379:
 1740               	.LBE380:
 242:Lib/SWD.h     ****           SW_PulseClock(1); // TM
 1741               		.loc 3 242 0
 1742 00b0 82E0      		ldi r24,lo8(2)
 1743 00b2 8812      		cpse r8,r24
 1744 00b4 00C0      		rjmp .L77
 243:Lib/SWD.h     ****       } while((ack = SW_DP_ACK_WAIT));
 1745               		.loc 3 243 0
 1746 00b6 81E0      		ldi r24,lo8(1)
 1747 00b8 0E94 0000 		call SW_PulseClock
 1748               	.LVL149:
 1749 00bc 00C0      		rjmp .L77
 1750               	.LBE374:
 1751               	.LBE373:
 1752               	.LBE370:
 1753               		.cfi_endproc
 1754               	.LFE171:
 1756               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 1757               	.global	EVENT_USB_Device_ConfigurationChanged
 1759               	EVENT_USB_Device_ConfigurationChanged:
 1760               	.LFB172:
 150:rram-usbserial.c ****   /* Prepare RRAM testchip for programming */
 151:rram-usbserial.c ****   SW_JTAGToSW();
 152:rram-usbserial.c ****   SW_Connect();
 153:rram-usbserial.c ****   SW_DAPPowerUp();
 154:rram-usbserial.c ****   SW_HaltCore();
 155:rram-usbserial.c **** 
 156:rram-usbserial.c ****   /* Start reading from the Dataflash sequentially and Write to the RRAM testchip */
 157:rram-usbserial.c ****   Dataflash_SelectChip(DATAFLASH_CHIP1);
 158:rram-usbserial.c ****   Dataflash_Configure_Read_Address(DF_CMD_CONTARRAYREAD_LP, 0);
 159:rram-usbserial.c ****   for(uint16_t i=0; i < RRAM_ROM_SIZE; i++)
 160:rram-usbserial.c ****     SW_WriteMem(SW_ROM_ADDR + i, SW_REG_AP_CSW_SIZE_BYTE_MASK, Dataflash_ReceiveByte());
 161:rram-usbserial.c ****   Dataflash_DeselectChip();
 162:rram-usbserial.c **** 
 163:rram-usbserial.c ****   /* Reset RRAM testchip */
 164:rram-usbserial.c ****   SW_ResetCore();
 165:rram-usbserial.c **** }
 166:rram-usbserial.c **** 
 167:rram-usbserial.c **** /** Event handler for the library USB Configuration Changed event. */
 168:rram-usbserial.c **** void EVENT_USB_Device_ConfigurationChanged(void)
 169:rram-usbserial.c **** {
 1761               		.loc 6 169 0
 1762               		.cfi_startproc
 1763               	/* prologue: function */
 1764               	/* frame size = 0 */
 1765               	/* stack size = 0 */
 1766               	.L__stack_usage = 0
 170:rram-usbserial.c ****   CDC_Device_ConfigureEndpoints(&VirtualSerial_CDC_Interface);
 1767               		.loc 6 170 0
 1768 0000 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 1769 0002 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 1770 0004 0C94 0000 		jmp CDC_Device_ConfigureEndpoints
 1771               	.LVL150:
 1772               		.cfi_endproc
 1773               	.LFE172:
 1775               		.section	.text.EVENT_USB_Device_UnhandledControlRequest,"ax",@progbits
 1776               	.global	EVENT_USB_Device_UnhandledControlRequest
 1778               	EVENT_USB_Device_UnhandledControlRequest:
 1779               	.LFB173:
 171:rram-usbserial.c **** }
 172:rram-usbserial.c **** 
 173:rram-usbserial.c **** /** Event handler for the library USB Unhandled Control Request event. */
 174:rram-usbserial.c **** void EVENT_USB_Device_UnhandledControlRequest(void)
 175:rram-usbserial.c **** {
 1780               		.loc 6 175 0
 1781               		.cfi_startproc
 1782               	/* prologue: function */
 1783               	/* frame size = 0 */
 1784               	/* stack size = 0 */
 1785               	.L__stack_usage = 0
 176:rram-usbserial.c ****   CDC_Device_ProcessControlRequest(&VirtualSerial_CDC_Interface);
 1786               		.loc 6 176 0
 1787 0000 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 1788 0002 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 1789 0004 0C94 0000 		jmp CDC_Device_ProcessControlRequest
 1790               	.LVL151:
 1791               		.cfi_endproc
 1792               	.LFE173:
 1794               		.section	.text.EVENT_CDC_Device_LineEncodingChanged,"ax",@progbits
 1795               	.global	EVENT_CDC_Device_LineEncodingChanged
 1797               	EVENT_CDC_Device_LineEncodingChanged:
 1798               	.LFB174:
 177:rram-usbserial.c **** }
 178:rram-usbserial.c **** 
 179:rram-usbserial.c **** /* 
 180:rram-usbserial.c ****  * Event handler for the CDC Class driver Line Encoding Changed event.
 181:rram-usbserial.c ****  *
 182:rram-usbserial.c ****  *  \param[in] CDCInterfaceInfo  Pointer to the CDC class interface configuration structure being r
 183:rram-usbserial.c ****  */
 184:rram-usbserial.c **** void EVENT_CDC_Device_LineEncodingChanged(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 185:rram-usbserial.c **** {
 1799               		.loc 6 185 0
 1800               		.cfi_startproc
 1801               	.LVL152:
 1802 0000 CF93      		push r28
 1803               	.LCFI32:
 1804               		.cfi_def_cfa_offset 3
 1805               		.cfi_offset 28, -2
 1806 0002 DF93      		push r29
 1807               	.LCFI33:
 1808               		.cfi_def_cfa_offset 4
 1809               		.cfi_offset 29, -3
 1810               	/* prologue: function */
 1811               	/* frame size = 0 */
 1812               	/* stack size = 2 */
 1813               	.L__stack_usage = 2
 1814 0004 EC01      		movw r28,r24
 186:rram-usbserial.c ****   /* Must turn off USART before reconfiguring it, otherwise incorrect operation may occur */
 187:rram-usbserial.c ****   UCSR1B = 0;
 1815               		.loc 6 187 0
 1816 0006 1092 C900 		sts 201,__zero_reg__
 188:rram-usbserial.c **** 
 189:rram-usbserial.c ****   /* Reconfigure USART Baud Rate Registers */
 190:rram-usbserial.c ****   UBRR1 = SERIAL_2X_UBBRVAL(CDCInterfaceInfo->State.LineEncoding.BaudRateBPS);  
 1817               		.loc 6 190 0
 1818 000a 2F85      		ldd r18,Y+15
 1819 000c 3889      		ldd r19,Y+16
 1820 000e 4989      		ldd r20,Y+17
 1821 0010 5A89      		ldd r21,Y+18
 1822 0012 DA01      		movw r26,r20
 1823 0014 C901      		movw r24,r18
 1824               	.LVL153:
 1825 0016 B695      		lsr r27
 1826 0018 A795      		ror r26
 1827 001a 9795      		ror r25
 1828 001c 8795      		ror r24
 1829 001e BC01      		movw r22,r24
 1830 0020 CD01      		movw r24,r26
 1831 0022 6058      		subi r22,-128
 1832 0024 7B47      		sbci r23,123
 1833 0026 814E      		sbci r24,-31
 1834 0028 9F4F      		sbci r25,-1
 1835 002a 0E94 0000 		call __udivmodsi4
 1836 002e 2150      		subi r18,1
 1837 0030 3109      		sbc r19,__zero_reg__
 1838 0032 3093 CD00 		sts 204+1,r19
 1839 0036 2093 CC00 		sts 204,r18
 1840               	.LVL154:
 1841               	.LBB381:
 191:rram-usbserial.c **** 
 192:rram-usbserial.c ****   /* Reconfigure UCSRnC – USART Control and Status Register C */
 193:rram-usbserial.c ****   {
 194:rram-usbserial.c ****     uint8_t ConfigMask = 0;
 195:rram-usbserial.c **** 
 196:rram-usbserial.c ****     // Bits 5:4 – UPMn1:0: Parity Mode
 197:rram-usbserial.c ****     switch (CDCInterfaceInfo->State.LineEncoding.ParityType) {
 1842               		.loc 6 197 0
 1843 003a 8C89      		ldd r24,Y+20
 1844 003c 8130      		cpi r24,lo8(1)
 1845 003e 01F0      		breq .L86
 1846 0040 8230      		cpi r24,lo8(2)
 1847 0042 01F4      		brne .L95
 1848               	.LVL155:
 198:rram-usbserial.c ****       case CDC_PARITY_Odd:  ConfigMask = (_BV(UPM11) | _BV(UPM10));    break;
 199:rram-usbserial.c ****       case CDC_PARITY_Even: ConfigMask =  _BV(UPM11);                  break;
 1849               		.loc 6 199 0
 1850 0044 80E2      		ldi r24,lo8(32)
 1851 0046 00C0      		rjmp .L85
 1852               	.LVL156:
 1853               	.L86:
 198:rram-usbserial.c ****       case CDC_PARITY_Odd:  ConfigMask = (_BV(UPM11) | _BV(UPM10));    break;
 1854               		.loc 6 198 0
 1855 0048 80E3      		ldi r24,lo8(48)
 1856 004a 00C0      		rjmp .L85
 1857               	.L95:
 194:rram-usbserial.c **** 
 1858               		.loc 6 194 0
 1859 004c 80E0      		ldi r24,0
 1860               	.LVL157:
 1861               	.L85:
 200:rram-usbserial.c ****     }
 201:rram-usbserial.c **** 
 202:rram-usbserial.c ****     // Bit 3 – USBSn: Stop Bit Select
 203:rram-usbserial.c ****     if (CDCInterfaceInfo->State.LineEncoding.CharFormat == CDC_LINEENCODING_TwoStopBits)
 1862               		.loc 6 203 0
 1863 004e 9B89      		ldd r25,Y+19
 1864 0050 9230      		cpi r25,lo8(2)
 1865 0052 01F4      		brne .L88
 204:rram-usbserial.c ****       ConfigMask |= _BV(USBS1);
 1866               		.loc 6 204 0
 1867 0054 8860      		ori r24,lo8(8)
 1868               	.LVL158:
 1869               	.L88:
 205:rram-usbserial.c **** 
 206:rram-usbserial.c ****     // Bit 2:1 – UCSZn1:0: Character Size
 207:rram-usbserial.c ****     switch (CDCInterfaceInfo->State.LineEncoding.DataBits) {
 1870               		.loc 6 207 0
 1871 0056 9D89      		ldd r25,Y+21
 1872 0058 9730      		cpi r25,lo8(7)
 1873 005a 01F0      		breq .L90
 1874 005c 9830      		cpi r25,lo8(8)
 1875 005e 01F0      		breq .L91
 1876 0060 9630      		cpi r25,lo8(6)
 1877 0062 01F4      		brne .L89
 208:rram-usbserial.c ****       case 6: ConfigMask |=                _BV(UCSZ10) ; break;
 1878               		.loc 6 208 0
 1879 0064 8260      		ori r24,lo8(2)
 1880               	.LVL159:
 1881 0066 00C0      		rjmp .L89
 1882               	.L90:
 209:rram-usbserial.c ****       case 7: ConfigMask |=  _BV(UCSZ11);                break;
 1883               		.loc 6 209 0
 1884 0068 8460      		ori r24,lo8(4)
 1885               	.LVL160:
 1886 006a 00C0      		rjmp .L89
 1887               	.L91:
 210:rram-usbserial.c ****       case 8: ConfigMask |= (_BV(UCSZ11) | _BV(UCSZ10)); break;
 1888               		.loc 6 210 0
 1889 006c 8660      		ori r24,lo8(6)
 1890               	.LVL161:
 1891               	.L89:
 211:rram-usbserial.c ****     }
 212:rram-usbserial.c **** 
 213:rram-usbserial.c ****     UCSR1C = ConfigMask;
 1892               		.loc 6 213 0
 1893 006e 8093 CA00 		sts 202,r24
 1894               	.LBE381:
 214:rram-usbserial.c ****   }
 215:rram-usbserial.c **** 
 216:rram-usbserial.c ****   /* Reconfigure UCSRnA – USART Control and Status Register A */
 217:rram-usbserial.c ****   UCSR1A = _BV(U2X1);
 1895               		.loc 6 217 0
 1896 0072 82E0      		ldi r24,lo8(2)
 1897               	.LVL162:
 1898 0074 8093 C800 		sts 200,r24
 1899               	.LVL163:
 218:rram-usbserial.c **** 
 219:rram-usbserial.c ****   /* Reconfigure UCSRnB – USART Control and Status Register B */
 220:rram-usbserial.c ****   UCSR1B = _BV(RXCIE1) | _BV(RXEN1) | _BV(TXEN1);
 1900               		.loc 6 220 0
 1901 0078 88E9      		ldi r24,lo8(-104)
 1902 007a 8093 C900 		sts 201,r24
 1903               	/* epilogue start */
 221:rram-usbserial.c **** }
 1904               		.loc 6 221 0
 1905 007e DF91      		pop r29
 1906 0080 CF91      		pop r28
 1907               	.LVL164:
 1908 0082 0895      		ret
 1909               		.cfi_endproc
 1910               	.LFE174:
 1912               		.section	.rodata.str1.1,"aMS",@progbits,1
 1913               	.LC0:
 1914 0000 4943 5352 		.string	"ICSRL>"
 1914      4C3E 00
 1915               		.section	.text.EVENT_CDC_Device_ControLineStateChanged,"ax",@progbits
 1916               	.global	EVENT_CDC_Device_ControLineStateChanged
 1918               	EVENT_CDC_Device_ControLineStateChanged:
 1919               	.LFB175:
 222:rram-usbserial.c **** 
 223:rram-usbserial.c **** /* Event handler for the CDC Class driver control line state change event.
 224:rram-usbserial.c ****  *
 225:rram-usbserial.c ****  * \param[in] CDCInterfaceInfo Pointer to the CDC class interface configuration structure being ref
 226:rram-usbserial.c ****  */
 227:rram-usbserial.c **** void EVENT_CDC_Device_ControLineStateChanged(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 228:rram-usbserial.c **** {
 1920               		.loc 6 228 0
 1921               		.cfi_startproc
 1922               	.LVL165:
 1923 0000 CF93      		push r28
 1924               	.LCFI34:
 1925               		.cfi_def_cfa_offset 3
 1926               		.cfi_offset 28, -2
 1927 0002 DF93      		push r29
 1928               	.LCFI35:
 1929               		.cfi_def_cfa_offset 4
 1930               		.cfi_offset 29, -3
 1931               	/* prologue: function */
 1932               	/* frame size = 0 */
 1933               	/* stack size = 2 */
 1934               	.L__stack_usage = 2
 1935               	.LVL166:
 229:rram-usbserial.c ****   bool DataTerminalReady = (CDCInterfaceInfo->State.ControlLineStates.HostToDevice & CDC_CONTROL_LI
 230:rram-usbserial.c **** 
 231:rram-usbserial.c ****   // Data Terminal Ready (DTR)
 232:rram-usbserial.c ****   if (DataTerminalReady){
 1936               		.loc 6 232 0
 1937 0004 FC01      		movw r30,r24
 1938 0006 8585      		ldd r24,Z+13
 1939               	.LVL167:
 1940 0008 80FF      		sbrs r24,0
 1941 000a 00C0      		rjmp .L97
 1942 000c C0E0      		ldi r28,lo8(.LC0)
 1943 000e D0E0      		ldi r29,hi8(.LC0)
 1944               	.LVL168:
 1945               	.L98:
 1946               	.LBB385:
 1947               	.LBB386:
 1948               		.file 14 "Lib/UARTConsole.h"
   1:Lib/UARTConsole.h **** /* \file
   2:Lib/UARTConsole.h ****  *
   3:Lib/UARTConsole.h ****  * UART Console
   4:Lib/UARTConsole.h ****  */
   5:Lib/UARTConsole.h ****  
   6:Lib/UARTConsole.h **** #ifndef _UART_CONSOLE_H_
   7:Lib/UARTConsole.h **** #define _UART_CONSOLE_H_
   8:Lib/UARTConsole.h **** 
   9:Lib/UARTConsole.h **** #define UART_HEADER         "ICSRL>"
  10:Lib/UARTConsole.h **** #define COMMAND_BUFFER_SIZE 64 
  11:Lib/UARTConsole.h **** 
  12:Lib/UARTConsole.h **** char command[COMMAND_BUFFER_SIZE];
  13:Lib/UARTConsole.h **** 
  14:Lib/UARTConsole.h **** extern USB_ClassInfo_CDC_Device_t VirtualSerial_CDC_Interface;
  15:Lib/UARTConsole.h **** 
  16:Lib/UARTConsole.h **** /*
  17:Lib/UARTConsole.h ****  * 
  18:Lib/UARTConsole.h ****  */
  19:Lib/UARTConsole.h **** static inline void UARTConsole_PrintHeader()
  20:Lib/UARTConsole.h **** {
  21:Lib/UARTConsole.h ****   for(uint8_t i=0;i<6;i++)
  22:Lib/UARTConsole.h ****     CDC_Device_SendByte(&VirtualSerial_CDC_Interface, UART_HEADER[i]);
 1949               		.loc 14 22 0
 1950 0010 6991      		ld r22,Y+
 1951               	.LVL169:
 1952 0012 80E0      		ldi r24,lo8(VirtualSerial_CDC_Interface)
 1953 0014 90E0      		ldi r25,hi8(VirtualSerial_CDC_Interface)
 1954 0016 0E94 0000 		call CDC_Device_SendByte
 1955               	.LVL170:
  21:Lib/UARTConsole.h ****     CDC_Device_SendByte(&VirtualSerial_CDC_Interface, UART_HEADER[i]);
 1956               		.loc 14 21 0
 1957 001a F0E0      		ldi r31,hi8(.LC0+6)
 1958 001c C030      		cpi r28,lo8(.LC0+6)
 1959 001e DF07      		cpc r29,r31
 1960 0020 01F4      		brne .L98
 1961               	.LVL171:
 1962               	.LBE386:
 1963               	.LBE385:
 233:rram-usbserial.c ****     UARTConsole_PrintHeader();
 234:rram-usbserial.c ****     RRAM_NRST_LINE_PORT &= ~RRAM_NRST_LINE_MASK;
 1964               		.loc 6 234 0
 1965 0022 5F98      		cbi 0xb,7
 1966 0024 00C0      		rjmp .L96
 1967               	.LVL172:
 1968               	.L97:
 235:rram-usbserial.c ****   }
 236:rram-usbserial.c ****   else{
 237:rram-usbserial.c ****     RRAM_NRST_LINE_PORT |=  RRAM_NRST_LINE_MASK;
 1969               		.loc 6 237 0
 1970 0026 5F9A      		sbi 0xb,7
 1971               	.LVL173:
 1972               	.L96:
 1973               	/* epilogue start */
 238:rram-usbserial.c ****   }
 239:rram-usbserial.c **** }
 1974               		.loc 6 239 0
 1975 0028 DF91      		pop r29
 1976 002a CF91      		pop r28
 1977 002c 0895      		ret
 1978               		.cfi_endproc
 1979               	.LFE175:
 1981               		.section	.text.__vector_23,"ax",@progbits
 1982               	.global	__vector_23
 1984               	__vector_23:
 1985               	.LFB176:
 240:rram-usbserial.c **** 
 241:rram-usbserial.c **** /* 
 242:rram-usbserial.c ****  * ISR to manage the reception of data from the serial port
 243:rram-usbserial.c ****  * placing received bytes into a circular buffer for later
 244:rram-usbserial.c ****  * transmission to the host.
 245:rram-usbserial.c ****  */
 246:rram-usbserial.c **** ISR(USART1_RX_vect, ISR_BLOCK)
 247:rram-usbserial.c **** {
 1986               		.loc 6 247 0
 1987               		.cfi_startproc
 1988 0000 1F92      		push r1
 1989               	.LCFI36:
 1990               		.cfi_def_cfa_offset 3
 1991               		.cfi_offset 1, -2
 1992 0002 0F92      		push r0
 1993               	.LCFI37:
 1994               		.cfi_def_cfa_offset 4
 1995               		.cfi_offset 0, -3
 1996 0004 0FB6      		in r0,__SREG__
 1997 0006 0F92      		push r0
 1998 0008 1124      		clr __zero_reg__
 1999 000a 2F93      		push r18
 2000               	.LCFI38:
 2001               		.cfi_def_cfa_offset 5
 2002               		.cfi_offset 18, -4
 2003 000c 3F93      		push r19
 2004               	.LCFI39:
 2005               		.cfi_def_cfa_offset 6
 2006               		.cfi_offset 19, -5
 2007 000e 4F93      		push r20
 2008               	.LCFI40:
 2009               		.cfi_def_cfa_offset 7
 2010               		.cfi_offset 20, -6
 2011 0010 5F93      		push r21
 2012               	.LCFI41:
 2013               		.cfi_def_cfa_offset 8
 2014               		.cfi_offset 21, -7
 2015 0012 6F93      		push r22
 2016               	.LCFI42:
 2017               		.cfi_def_cfa_offset 9
 2018               		.cfi_offset 22, -8
 2019 0014 7F93      		push r23
 2020               	.LCFI43:
 2021               		.cfi_def_cfa_offset 10
 2022               		.cfi_offset 23, -9
 2023 0016 8F93      		push r24
 2024               	.LCFI44:
 2025               		.cfi_def_cfa_offset 11
 2026               		.cfi_offset 24, -10
 2027 0018 9F93      		push r25
 2028               	.LCFI45:
 2029               		.cfi_def_cfa_offset 12
 2030               		.cfi_offset 25, -11
 2031 001a AF93      		push r26
 2032               	.LCFI46:
 2033               		.cfi_def_cfa_offset 13
 2034               		.cfi_offset 26, -12
 2035 001c BF93      		push r27
 2036               	.LCFI47:
 2037               		.cfi_def_cfa_offset 14
 2038               		.cfi_offset 27, -13
 2039 001e EF93      		push r30
 2040               	.LCFI48:
 2041               		.cfi_def_cfa_offset 15
 2042               		.cfi_offset 30, -14
 2043 0020 FF93      		push r31
 2044               	.LCFI49:
 2045               		.cfi_def_cfa_offset 16
 2046               		.cfi_offset 31, -15
 2047               	/* prologue: Signal */
 2048               	/* frame size = 0 */
 2049               	/* stack size = 15 */
 2050               	.L__stack_usage = 15
 248:rram-usbserial.c ****   /* USART -> Buffer */
 249:rram-usbserial.c ****   RingBuffer_Insert(&USARTtoUSB_Buffer, UDR1);
 2051               		.loc 6 249 0
 2052 0022 6091 CE00 		lds r22,206
 2053 0026 80E0      		ldi r24,lo8(USARTtoUSB_Buffer)
 2054 0028 90E0      		ldi r25,hi8(USARTtoUSB_Buffer)
 2055 002a 0E94 0000 		call RingBuffer_Insert
 2056               	.LVL174:
 2057               	/* epilogue start */
 250:rram-usbserial.c **** }
 2058               		.loc 6 250 0
 2059 002e FF91      		pop r31
 2060 0030 EF91      		pop r30
 2061 0032 BF91      		pop r27
 2062 0034 AF91      		pop r26
 2063 0036 9F91      		pop r25
 2064 0038 8F91      		pop r24
 2065 003a 7F91      		pop r23
 2066 003c 6F91      		pop r22
 2067 003e 5F91      		pop r21
 2068 0040 4F91      		pop r20
 2069 0042 3F91      		pop r19
 2070 0044 2F91      		pop r18
 2071 0046 0F90      		pop r0
 2072 0048 0FBE      		out __SREG__,r0
 2073 004a 0F90      		pop r0
 2074 004c 1F90      		pop r1
 2075 004e 1895      		reti
 2076               		.cfi_endproc
 2077               	.LFE176:
 2079               	.global	VirtualSerial_CDC_Interface
 2080               		.data
 2083               	VirtualSerial_CDC_Interface:
 2084 0000 00        		.byte	0
 2085 0001 03        		.byte	3
 2086 0002 4000      		.word	64
 2087 0004 00        		.byte	0
 2088 0005 04        		.byte	4
 2089 0006 4000      		.word	64
 2090 0008 00        		.byte	0
 2091 0009 02        		.byte	2
 2092 000a 0800      		.word	8
 2093 000c 00        		.byte	0
 2094 000d 0000 0000 		.zero	9
 2094      0000 0000 
 2094      00
 2095               		.comm	USARTtoUSB_Buffer,134,1
 2096               		.comm	USBtoUSART_Buffer,134,1
 2097               		.comm	command,64,1
 2098               		.comm	RxLEDPulse,1,1
 2099               		.comm	TxLEDPulse,1,1
 2100               		.text
 2101               	.Letext0:
 2102               		.file 15 "/nethome/mchang87/Projects/RRAM/atmega16u2/avr8-gnu-toolchain-linux_x86_64/avr/include/s
 2103               		.file 16 "../../LUFA/Drivers/USB/Class/Device/../Common/CDC.h"
 2104               		.file 17 "../../LUFA/Drivers/USB/Class/Device/CDC.h"
 2105               		.file 18 "../../LUFA/Drivers/Board/Dataflash.h"
 2106               		.file 19 "../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h"
 2107               		.file 20 "../../LUFA/Drivers/USB/HighLevel/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rram-usbserial.c
     /tmp/ccmPmYzX.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccmPmYzX.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccmPmYzX.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccmPmYzX.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccmPmYzX.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccmPmYzX.s:12     .text.RingBuffer_Insert:0000000000000000 RingBuffer_Insert
     /tmp/ccmPmYzX.s:88     .text.RingBuffer_Remove:0000000000000000 RingBuffer_Remove
     /tmp/ccmPmYzX.s:164    .text.SW_PulseClock:0000000000000000 SW_PulseClock
     /tmp/ccmPmYzX.s:204    .text.SW_Send:0000000000000000 SW_Send
     /tmp/ccmPmYzX.s:310    .text.I2C_StartTransmission:0000000000000000 I2C_StartTransmission
     /tmp/ccmPmYzX.s:337    .text.I2C_EndTransmission:0000000000000000 I2C_EndTransmission
     /tmp/ccmPmYzX.s:361    .text.I2C_SendByte:0000000000000000 I2C_SendByte
     /tmp/ccmPmYzX.s:429    .text.PM_UpdateReg:0000000000000000 PM_UpdateReg
     /tmp/ccmPmYzX.s:588    .text.getParity:0000000000000000 getParity
     /tmp/ccmPmYzX.s:658    .text.__vector_9:0000000000000000 __vector_9
     /tmp/ccmPmYzX.s:690    .text.__vector_10:0000000000000000 __vector_10
     /tmp/ccmPmYzX.s:955    .text.SetupHardware:0000000000000000 SetupHardware
                            *COM*:0000000000000086 USBtoUSART_Buffer
                            *COM*:0000000000000086 USARTtoUSB_Buffer
     /tmp/ccmPmYzX.s:1311   .text.startup.main:0000000000000000 main
     /tmp/ccmPmYzX.s:2083   .data:0000000000000000 VirtualSerial_CDC_Interface
                            *COM*:0000000000000001 TxLEDPulse
                            *COM*:0000000000000001 RxLEDPulse
     /tmp/ccmPmYzX.s:1585   .text.Write_Program:0000000000000000 Write_Program
     /tmp/ccmPmYzX.s:1759   .text.EVENT_USB_Device_ConfigurationChanged:0000000000000000 EVENT_USB_Device_ConfigurationChanged
     /tmp/ccmPmYzX.s:1778   .text.EVENT_USB_Device_UnhandledControlRequest:0000000000000000 EVENT_USB_Device_UnhandledControlRequest
     /tmp/ccmPmYzX.s:1797   .text.EVENT_CDC_Device_LineEncodingChanged:0000000000000000 EVENT_CDC_Device_LineEncodingChanged
     /tmp/ccmPmYzX.s:1918   .text.EVENT_CDC_Device_ControLineStateChanged:0000000000000000 EVENT_CDC_Device_ControLineStateChanged
     /tmp/ccmPmYzX.s:1984   .text.__vector_23:0000000000000000 __vector_23
                            *COM*:0000000000000040 command
     /tmp/ccmPmYzX.s:1913   .rodata.str1.1:0000000000000000 .LC0

UNDEFINED SYMBOLS
USB_Init
CDC_Device_ReceiveByte
CDC_Device_SendByte
CDC_Device_USBTask
USB_USBTask
CDC_Device_ConfigureEndpoints
CDC_Device_ProcessControlRequest
__udivmodsi4
__do_copy_data
__do_clear_bss
